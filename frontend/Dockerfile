# Multi-stage build untuk optimasi
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --silent

# Copy source code
COPY . .

# Build application
RUN npm run build

# Production stage dengan Nginx
FROM nginx:alpine AS production

# Install dumb-init untuk proper signal handling
RUN apk add --no-cache dumb-init

# Copy built application dari builder stage
COPY --from=builder /app/build /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Create nginx user
RUN addgroup -g 1001 -S nginx && \
    adduser -S nginx -u 1001 -G nginx

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Create pid directory
RUN mkdir -p /var/run/nginx && \
    chown -R nginx:nginx /var/run/nginx

# Switch to non-root user
USER nginx

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:3000/ || exit 1

# Start nginx dengan dumb-init
CMD ["dumb-init", "nginx", "-g", "daemon off;"]

# Labels untuk metadata
LABEL maintainer="CEX Development Team"
LABEL version="1.0.0"
LABEL description="CEX Frontend React Application"
LABEL org.opencontainers.image.source="https://github.com/cex-project/frontend"