e045fc1e540e0b7045dd4c05845954a3
/* istanbul ignore next */
function cov_ob8bs8nld() {
  var path = "/workspace/backend/src/models/User.js";
  var hash = "eec0302bd6a521581e8620bb14a4e57f7dcd5c04";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/workspace/backend/src/models/User.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 22
        },
        end: {
          line: 1,
          column: 42
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 34
        }
      },
      "2": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "3": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "4": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "5": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 51
        }
      },
      "6": {
        start: {
          line: 9,
          column: 13
        },
        end: {
          line: 255,
          column: 2
        }
      },
      "7": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 260,
          column: 2
        }
      },
      "8": {
        start: {
          line: 259,
          column: 2
        },
        end: {
          line: 259,
          column: 58
        }
      },
      "9": {
        start: {
          line: 262,
          column: 0
        },
        end: {
          line: 264,
          column: 2
        }
      },
      "10": {
        start: {
          line: 263,
          column: 2
        },
        end: {
          line: 263,
          column: 59
        }
      },
      "11": {
        start: {
          line: 266,
          column: 0
        },
        end: {
          line: 283,
          column: 2
        }
      },
      "12": {
        start: {
          line: 268,
          column: 2
        },
        end: {
          line: 273,
          column: 3
        }
      },
      "13": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 272,
          column: 7
        }
      },
      "14": {
        start: {
          line: 275,
          column: 18
        },
        end: {
          line: 275,
          column: 59
        }
      },
      "15": {
        start: {
          line: 278,
          column: 2
        },
        end: {
          line: 280,
          column: 3
        }
      },
      "16": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 279,
          column: 56
        }
      },
      "17": {
        start: {
          line: 282,
          column: 2
        },
        end: {
          line: 282,
          column: 30
        }
      },
      "18": {
        start: {
          line: 285,
          column: 0
        },
        end: {
          line: 290,
          column: 2
        }
      },
      "19": {
        start: {
          line: 286,
          column: 2
        },
        end: {
          line: 289,
          column: 5
        }
      },
      "20": {
        start: {
          line: 292,
          column: 0
        },
        end: {
          line: 297,
          column: 2
        }
      },
      "21": {
        start: {
          line: 293,
          column: 16
        },
        end: {
          line: 293,
          column: 54
        }
      },
      "22": {
        start: {
          line: 294,
          column: 2
        },
        end: {
          line: 294,
          column: 84
        }
      },
      "23": {
        start: {
          line: 295,
          column: 2
        },
        end: {
          line: 295,
          column: 58
        }
      },
      "24": {
        start: {
          line: 296,
          column: 2
        },
        end: {
          line: 296,
          column: 15
        }
      },
      "25": {
        start: {
          line: 299,
          column: 0
        },
        end: {
          line: 304,
          column: 2
        }
      },
      "26": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 54
        }
      },
      "27": {
        start: {
          line: 301,
          column: 2
        },
        end: {
          line: 301,
          column: 88
        }
      },
      "28": {
        start: {
          line: 302,
          column: 2
        },
        end: {
          line: 302,
          column: 67
        }
      },
      "29": {
        start: {
          line: 303,
          column: 2
        },
        end: {
          line: 303,
          column: 15
        }
      },
      "30": {
        start: {
          line: 306,
          column: 0
        },
        end: {
          line: 315,
          column: 2
        }
      },
      "31": {
        start: {
          line: 307,
          column: 17
        },
        end: {
          line: 311,
          column: 4
        }
      },
      "32": {
        start: {
          line: 313,
          column: 2
        },
        end: {
          line: 313,
          column: 39
        }
      },
      "33": {
        start: {
          line: 314,
          column: 2
        },
        end: {
          line: 314,
          column: 16
        }
      },
      "34": {
        start: {
          line: 317,
          column: 0
        },
        end: {
          line: 328,
          column: 2
        }
      },
      "35": {
        start: {
          line: 318,
          column: 2
        },
        end: {
          line: 320,
          column: 3
        }
      },
      "36": {
        start: {
          line: 319,
          column: 4
        },
        end: {
          line: 319,
          column: 17
        }
      },
      "37": {
        start: {
          line: 322,
          column: 2
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "38": {
        start: {
          line: 330,
          column: 0
        },
        end: {
          line: 337,
          column: 2
        }
      },
      "39": {
        start: {
          line: 331,
          column: 16
        },
        end: {
          line: 331,
          column: 18
        }
      },
      "40": {
        start: {
          line: 332,
          column: 2
        },
        end: {
          line: 334,
          column: 3
        }
      },
      "41": {
        start: {
          line: 332,
          column: 15
        },
        end: {
          line: 332,
          column: 16
        }
      },
      "42": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 333,
          column: 68
        }
      },
      "43": {
        start: {
          line: 335,
          column: 2
        },
        end: {
          line: 335,
          column: 27
        }
      },
      "44": {
        start: {
          line: 336,
          column: 2
        },
        end: {
          line: 336,
          column: 15
        }
      },
      "45": {
        start: {
          line: 339,
          column: 0
        },
        end: {
          line: 347,
          column: 2
        }
      },
      "46": {
        start: {
          line: 340,
          column: 2
        },
        end: {
          line: 342,
          column: 3
        }
      },
      "47": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 341,
          column: 17
        }
      },
      "48": {
        start: {
          line: 344,
          column: 23
        },
        end: {
          line: 344,
          column: 77
        }
      },
      "49": {
        start: {
          line: 344,
          column: 52
        },
        end: {
          line: 344,
          column: 76
        }
      },
      "50": {
        start: {
          line: 345,
          column: 2
        },
        end: {
          line: 345,
          column: 51
        }
      },
      "51": {
        start: {
          line: 346,
          column: 2
        },
        end: {
          line: 346,
          column: 14
        }
      },
      "52": {
        start: {
          line: 349,
          column: 0
        },
        end: {
          line: 362,
          column: 2
        }
      },
      "53": {
        start: {
          line: 350,
          column: 2
        },
        end: {
          line: 352,
          column: 3
        }
      },
      "54": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 351,
          column: 48
        }
      },
      "55": {
        start: {
          line: 354,
          column: 21
        },
        end: {
          line: 359,
          column: 4
        }
      },
      "56": {
        start: {
          line: 361,
          column: 2
        },
        end: {
          line: 361,
          column: 38
        }
      },
      "57": {
        start: {
          line: 364,
          column: 0
        },
        end: {
          line: 375,
          column: 2
        }
      },
      "58": {
        start: {
          line: 365,
          column: 17
        },
        end: {
          line: 365,
          column: 46
        }
      },
      "59": {
        start: {
          line: 368,
          column: 2
        },
        end: {
          line: 368,
          column: 25
        }
      },
      "60": {
        start: {
          line: 369,
          column: 2
        },
        end: {
          line: 369,
          column: 32
        }
      },
      "61": {
        start: {
          line: 370,
          column: 2
        },
        end: {
          line: 370,
          column: 28
        }
      },
      "62": {
        start: {
          line: 371,
          column: 2
        },
        end: {
          line: 371,
          column: 35
        }
      },
      "63": {
        start: {
          line: 372,
          column: 2
        },
        end: {
          line: 372,
          column: 39
        }
      },
      "64": {
        start: {
          line: 374,
          column: 2
        },
        end: {
          line: 374,
          column: 16
        }
      },
      "65": {
        start: {
          line: 378,
          column: 0
        },
        end: {
          line: 387,
          column: 2
        }
      },
      "66": {
        start: {
          line: 379,
          column: 2
        },
        end: {
          line: 386,
          column: 5
        }
      },
      "67": {
        start: {
          line: 389,
          column: 0
        },
        end: {
          line: 399,
          column: 2
        }
      },
      "68": {
        start: {
          line: 390,
          column: 22
        },
        end: {
          line: 390,
          column: 77
        }
      },
      "69": {
        start: {
          line: 391,
          column: 2
        },
        end: {
          line: 398,
          column: 5
        }
      },
      "70": {
        start: {
          line: 401,
          column: 0
        },
        end: {
          line: 411,
          column: 2
        }
      },
      "71": {
        start: {
          line: 402,
          column: 22
        },
        end: {
          line: 402,
          column: 77
        }
      },
      "72": {
        start: {
          line: 403,
          column: 2
        },
        end: {
          line: 410,
          column: 5
        }
      },
      "73": {
        start: {
          line: 414,
          column: 0
        },
        end: {
          line: 419,
          column: 3
        }
      },
      "74": {
        start: {
          line: 415,
          column: 2
        },
        end: {
          line: 418,
          column: 3
        }
      },
      "75": {
        start: {
          line: 416,
          column: 17
        },
        end: {
          line: 416,
          column: 41
        }
      },
      "76": {
        start: {
          line: 417,
          column: 4
        },
        end: {
          line: 417,
          column: 59
        }
      },
      "77": {
        start: {
          line: 421,
          column: 0
        },
        end: {
          line: 426,
          column: 3
        }
      },
      "78": {
        start: {
          line: 422,
          column: 2
        },
        end: {
          line: 425,
          column: 3
        }
      },
      "79": {
        start: {
          line: 423,
          column: 17
        },
        end: {
          line: 423,
          column: 41
        }
      },
      "80": {
        start: {
          line: 424,
          column: 4
        },
        end: {
          line: 424,
          column: 59
        }
      },
      "81": {
        start: {
          line: 428,
          column: 0
        },
        end: {
          line: 428,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 258,
            column: 33
          },
          end: {
            line: 258,
            column: 34
          }
        },
        loc: {
          start: {
            line: 258,
            column: 67
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 258
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 262,
            column: 26
          },
          end: {
            line: 262,
            column: 27
          }
        },
        loc: {
          start: {
            line: 262,
            column: 37
          },
          end: {
            line: 264,
            column: 1
          }
        },
        line: 262
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 266,
            column: 34
          },
          end: {
            line: 266,
            column: 35
          }
        },
        loc: {
          start: {
            line: 266,
            column: 51
          },
          end: {
            line: 283,
            column: 1
          }
        },
        line: 266
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 285,
            column: 36
          },
          end: {
            line: 285,
            column: 37
          }
        },
        loc: {
          start: {
            line: 285,
            column: 53
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 285
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 292,
            column: 44
          },
          end: {
            line: 292,
            column: 45
          }
        },
        loc: {
          start: {
            line: 292,
            column: 55
          },
          end: {
            line: 297,
            column: 1
          }
        },
        line: 292
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 299,
            column: 48
          },
          end: {
            line: 299,
            column: 49
          }
        },
        loc: {
          start: {
            line: 299,
            column: 59
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 299
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 306,
            column: 26
          },
          end: {
            line: 306,
            column: 27
          }
        },
        loc: {
          start: {
            line: 306,
            column: 37
          },
          end: {
            line: 315,
            column: 1
          }
        },
        line: 306
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 317,
            column: 27
          },
          end: {
            line: 317,
            column: 28
          }
        },
        loc: {
          start: {
            line: 317,
            column: 43
          },
          end: {
            line: 328,
            column: 1
          }
        },
        line: 317
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 330,
            column: 37
          },
          end: {
            line: 330,
            column: 38
          }
        },
        loc: {
          start: {
            line: 330,
            column: 48
          },
          end: {
            line: 337,
            column: 1
          }
        },
        line: 330
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 339,
            column: 31
          },
          end: {
            line: 339,
            column: 32
          }
        },
        loc: {
          start: {
            line: 339,
            column: 52
          },
          end: {
            line: 347,
            column: 1
          }
        },
        line: 339
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 344,
            column: 47
          },
          end: {
            line: 344,
            column: 48
          }
        },
        loc: {
          start: {
            line: 344,
            column: 52
          },
          end: {
            line: 344,
            column: 76
          }
        },
        line: 344
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 349,
            column: 35
          },
          end: {
            line: 349,
            column: 36
          }
        },
        loc: {
          start: {
            line: 349,
            column: 52
          },
          end: {
            line: 362,
            column: 1
          }
        },
        line: 349
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 364,
            column: 24
          },
          end: {
            line: 364,
            column: 25
          }
        },
        loc: {
          start: {
            line: 364,
            column: 35
          },
          end: {
            line: 375,
            column: 1
          }
        },
        line: 364
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 378,
            column: 29
          },
          end: {
            line: 378,
            column: 30
          }
        },
        loc: {
          start: {
            line: 378,
            column: 50
          },
          end: {
            line: 387,
            column: 1
          }
        },
        line: 378
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 389,
            column: 32
          },
          end: {
            line: 389,
            column: 33
          }
        },
        loc: {
          start: {
            line: 389,
            column: 48
          },
          end: {
            line: 399,
            column: 1
          }
        },
        line: 389
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 401,
            column: 36
          },
          end: {
            line: 401,
            column: 37
          }
        },
        loc: {
          start: {
            line: 401,
            column: 52
          },
          end: {
            line: 411,
            column: 1
          }
        },
        line: 401
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 414,
            column: 18
          },
          end: {
            line: 414,
            column: 19
          }
        },
        loc: {
          start: {
            line: 414,
            column: 34
          },
          end: {
            line: 419,
            column: 1
          }
        },
        line: 414
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 421,
            column: 18
          },
          end: {
            line: 421,
            column: 19
          }
        },
        loc: {
          start: {
            line: 421,
            column: 34
          },
          end: {
            line: 426,
            column: 1
          }
        },
        line: 421
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 263,
            column: 12
          },
          end: {
            line: 263,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 263,
            column: 12
          },
          end: {
            line: 263,
            column: 26
          }
        }, {
          start: {
            line: 263,
            column: 30
          },
          end: {
            line: 263,
            column: 57
          }
        }],
        line: 263
      },
      "1": {
        loc: {
          start: {
            line: 268,
            column: 2
          },
          end: {
            line: 273,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 268,
            column: 2
          },
          end: {
            line: 273,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 268
      },
      "2": {
        loc: {
          start: {
            line: 268,
            column: 6
          },
          end: {
            line: 268,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 6
          },
          end: {
            line: 268,
            column: 20
          }
        }, {
          start: {
            line: 268,
            column: 24
          },
          end: {
            line: 268,
            column: 51
          }
        }],
        line: 268
      },
      "3": {
        loc: {
          start: {
            line: 278,
            column: 2
          },
          end: {
            line: 280,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 2
          },
          end: {
            line: 280,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "4": {
        loc: {
          start: {
            line: 278,
            column: 6
          },
          end: {
            line: 278,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 6
          },
          end: {
            line: 278,
            column: 33
          }
        }, {
          start: {
            line: 278,
            column: 37
          },
          end: {
            line: 278,
            column: 53
          }
        }],
        line: 278
      },
      "5": {
        loc: {
          start: {
            line: 318,
            column: 2
          },
          end: {
            line: 320,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 2
          },
          end: {
            line: 320,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "6": {
        loc: {
          start: {
            line: 340,
            column: 2
          },
          end: {
            line: 342,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 2
          },
          end: {
            line: 342,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "7": {
        loc: {
          start: {
            line: 340,
            column: 6
          },
          end: {
            line: 340,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 340,
            column: 6
          },
          end: {
            line: 340,
            column: 23
          }
        }, {
          start: {
            line: 340,
            column: 27
          },
          end: {
            line: 340,
            column: 73
          }
        }],
        line: 340
      },
      "8": {
        loc: {
          start: {
            line: 350,
            column: 2
          },
          end: {
            line: 352,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 2
          },
          end: {
            line: 352,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "9": {
        loc: {
          start: {
            line: 415,
            column: 2
          },
          end: {
            line: 418,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 2
          },
          end: {
            line: 418,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "10": {
        loc: {
          start: {
            line: 422,
            column: 2
          },
          end: {
            line: 425,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 422,
            column: 2
          },
          end: {
            line: 425,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 422
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eec0302bd6a521581e8620bb14a4e57f7dcd5c04"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_ob8bs8nld = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ob8bs8nld();
const {
  DataTypes
} =
/* istanbul ignore next */
(cov_ob8bs8nld().s[0]++, require('sequelize'));
const bcrypt =
/* istanbul ignore next */
(cov_ob8bs8nld().s[1]++, require('bcryptjs'));
const crypto =
/* istanbul ignore next */
(cov_ob8bs8nld().s[2]++, require('crypto'));
const speakeasy =
/* istanbul ignore next */
(cov_ob8bs8nld().s[3]++, require('speakeasy'));
const QRCode =
/* istanbul ignore next */
(cov_ob8bs8nld().s[4]++, require('qrcode'));
const {
  sequelize
} =
/* istanbul ignore next */
(cov_ob8bs8nld().s[5]++, require('../config/database'));

// User model definition
const User =
/* istanbul ignore next */
(cov_ob8bs8nld().s[6]++, sequelize.define('User', {
  id: {
    type: DataTypes.UUID,
    defaultValue: DataTypes.UUIDV4,
    primaryKey: true
  },
  email: {
    type: DataTypes.STRING,
    allowNull: false,
    unique: true,
    validate: {
      isEmail: true
    }
  },
  username: {
    type: DataTypes.STRING,
    allowNull: false,
    unique: true,
    validate: {
      len: [3, 30],
      isAlphanumeric: true
    }
  },
  password: {
    type: DataTypes.STRING,
    allowNull: false,
    validate: {
      len: [8, 128]
    }
  },
  firstName: {
    type: DataTypes.STRING,
    allowNull: false,
    validate: {
      len: [1, 50]
    }
  },
  lastName: {
    type: DataTypes.STRING,
    allowNull: false,
    validate: {
      len: [1, 50]
    }
  },
  phoneNumber: {
    type: DataTypes.STRING,
    allowNull: true,
    validate: {
      is: /^\+?[1-9]\d{1,14}$/
    }
  },
  dateOfBirth: {
    type: DataTypes.DATEONLY,
    allowNull: true
  },
  country: {
    type: DataTypes.STRING(2),
    allowNull: true,
    validate: {
      len: [2, 2]
    }
  },
  role: {
    type: DataTypes.ENUM('user', 'admin', 'moderator', 'support'),
    defaultValue: 'user'
  },
  status: {
    type: DataTypes.ENUM('pending', 'active', 'suspended', 'banned'),
    defaultValue: 'pending'
  },
  emailVerified: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  phoneVerified: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  kycLevel: {
    type: DataTypes.INTEGER,
    defaultValue: 0,
    validate: {
      min: 0,
      max: 3
    }
  },
  twoFactorEnabled: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  twoFactorSecret: {
    type: DataTypes.STRING,
    allowNull: true
  },
  backupCodes: {
    type: DataTypes.JSON,
    allowNull: true
  },
  lastLoginAt: {
    type: DataTypes.DATE,
    allowNull: true
  },
  lastLoginIp: {
    type: DataTypes.INET,
    allowNull: true
  },
  loginAttempts: {
    type: DataTypes.INTEGER,
    defaultValue: 0
  },
  lockUntil: {
    type: DataTypes.DATE,
    allowNull: true
  },
  passwordResetToken: {
    type: DataTypes.STRING,
    allowNull: true
  },
  passwordResetExpires: {
    type: DataTypes.DATE,
    allowNull: true
  },
  emailVerificationToken: {
    type: DataTypes.STRING,
    allowNull: true
  },
  emailVerificationExpires: {
    type: DataTypes.DATE,
    allowNull: true
  },
  preferences: {
    type: DataTypes.JSON,
    defaultValue: {
      language: 'en',
      timezone: 'UTC',
      currency: 'USD',
      notifications: {
        email: true,
        sms: false,
        push: true,
        trading: true,
        security: true,
        marketing: false
      }
    }
  },
  metadata: {
    type: DataTypes.JSON,
    defaultValue: {}
  },
  // Enhanced fields
  tradingLevel: {
    type: DataTypes.ENUM('beginner', 'intermediate', 'advanced', 'professional'),
    defaultValue: 'beginner'
  },
  riskTolerance: {
    type: DataTypes.ENUM('low', 'medium', 'high'),
    defaultValue: 'medium'
  },
  maxDailyTradingVolume: {
    type: DataTypes.DECIMAL(20, 8),
    allowNull: true
  },
  maxPositionSize: {
    type: DataTypes.DECIMAL(20, 8),
    allowNull: true
  },
  marginTradingEnabled: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  apiTradingEnabled: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  referralCode: {
    type: DataTypes.STRING(20),
    allowNull: true,
    unique: true
  },
  referredBy: {
    type: DataTypes.UUID,
    allowNull: true,
    references: {
      model: 'users',
      key: 'id'
    }
  },
  totalTradingVolume: {
    type: DataTypes.DECIMAL(30, 8),
    defaultValue: 0
  },
  totalTrades: {
    type: DataTypes.INTEGER,
    defaultValue: 0
  },
  lastTradeAt: {
    type: DataTypes.DATE,
    allowNull: true
  },
  vipLevel: {
    type: DataTypes.INTEGER,
    defaultValue: 0,
    validate: {
      min: 0,
      max: 10
    }
  },
  makerFeeRate: {
    type: DataTypes.DECIMAL(5, 4),
    defaultValue: 0.001
  },
  takerFeeRate: {
    type: DataTypes.DECIMAL(5, 4),
    defaultValue: 0.001
  }
}, {
  tableName: 'users',
  timestamps: true,
  paranoid: true,
  // Soft delete
  underscored: true,
  // Use snake_case for column names
  createdAt: 'created_at',
  updatedAt: 'updated_at',
  deletedAt: 'deleted_at',
  indexes: [{
    unique: true,
    fields: ['email']
  }, {
    unique: true,
    fields: ['username']
  }, {
    fields: ['status']
  }, {
    fields: ['role']
  }, {
    fields: ['kyc_level']
  }, {
    fields: ['created_at']
  }]
}));

// Instance methods
/* istanbul ignore next */
cov_ob8bs8nld().s[7]++;
User.prototype.comparePassword = async function (candidatePassword) {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[0]++;
  cov_ob8bs8nld().s[8]++;
  return bcrypt.compare(candidatePassword, this.password);
};
/* istanbul ignore next */
cov_ob8bs8nld().s[9]++;
User.prototype.isLocked = function () {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[1]++;
  cov_ob8bs8nld().s[10]++;
  return !!(
  /* istanbul ignore next */
  (cov_ob8bs8nld().b[0][0]++, this.lockUntil) &&
  /* istanbul ignore next */
  (cov_ob8bs8nld().b[0][1]++, this.lockUntil > Date.now()));
};
/* istanbul ignore next */
cov_ob8bs8nld().s[11]++;
User.prototype.incLoginAttempts = async function () {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[2]++;
  cov_ob8bs8nld().s[12]++;
  // If we have a previous lock that has expired, restart at 1
  if (
  /* istanbul ignore next */
  (cov_ob8bs8nld().b[2][0]++, this.lockUntil) &&
  /* istanbul ignore next */
  (cov_ob8bs8nld().b[2][1]++, this.lockUntil < Date.now())) {
    /* istanbul ignore next */
    cov_ob8bs8nld().b[1][0]++;
    cov_ob8bs8nld().s[13]++;
    return this.update({
      loginAttempts: 1,
      lockUntil: null
    });
  } else
  /* istanbul ignore next */
  {
    cov_ob8bs8nld().b[1][1]++;
  }
  const updates =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[14]++, {
    loginAttempts: this.loginAttempts + 1
  });

  // Lock account after 5 failed attempts for 2 hours
  /* istanbul ignore next */
  cov_ob8bs8nld().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_ob8bs8nld().b[4][0]++, this.loginAttempts + 1 >= 5) &&
  /* istanbul ignore next */
  (cov_ob8bs8nld().b[4][1]++, !this.isLocked())) {
    /* istanbul ignore next */
    cov_ob8bs8nld().b[3][0]++;
    cov_ob8bs8nld().s[16]++;
    updates.lockUntil = Date.now() + 2 * 60 * 60 * 1000; // 2 hours
  } else
  /* istanbul ignore next */
  {
    cov_ob8bs8nld().b[3][1]++;
  }
  cov_ob8bs8nld().s[17]++;
  return this.update(updates);
};
/* istanbul ignore next */
cov_ob8bs8nld().s[18]++;
User.prototype.resetLoginAttempts = async function () {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[3]++;
  cov_ob8bs8nld().s[19]++;
  return this.update({
    loginAttempts: 0,
    lockUntil: null
  });
};
/* istanbul ignore next */
cov_ob8bs8nld().s[20]++;
User.prototype.generatePasswordResetToken = function () {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[4]++;
  const token =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[21]++, crypto.randomBytes(32).toString('hex'));
  /* istanbul ignore next */
  cov_ob8bs8nld().s[22]++;
  this.passwordResetToken = crypto.createHash('sha256').update(token).digest('hex');
  /* istanbul ignore next */
  cov_ob8bs8nld().s[23]++;
  this.passwordResetExpires = Date.now() + 10 * 60 * 1000; // 10 minutes
  /* istanbul ignore next */
  cov_ob8bs8nld().s[24]++;
  return token;
};
/* istanbul ignore next */
cov_ob8bs8nld().s[25]++;
User.prototype.generateEmailVerificationToken = function () {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[5]++;
  const token =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[26]++, crypto.randomBytes(32).toString('hex'));
  /* istanbul ignore next */
  cov_ob8bs8nld().s[27]++;
  this.emailVerificationToken = crypto.createHash('sha256').update(token).digest('hex');
  /* istanbul ignore next */
  cov_ob8bs8nld().s[28]++;
  this.emailVerificationExpires = Date.now() + 24 * 60 * 60 * 1000; // 24 hours
  /* istanbul ignore next */
  cov_ob8bs8nld().s[29]++;
  return token;
};
/* istanbul ignore next */
cov_ob8bs8nld().s[30]++;
User.prototype.setup2FA = function () {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[6]++;
  const secret =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[31]++, speakeasy.generateSecret({
    name: `CEX Exchange (${this.email})`,
    issuer: 'CEX Exchange',
    length: 32
  }));
  /* istanbul ignore next */
  cov_ob8bs8nld().s[32]++;
  this.twoFactorSecret = secret.base32;
  /* istanbul ignore next */
  cov_ob8bs8nld().s[33]++;
  return secret;
};
/* istanbul ignore next */
cov_ob8bs8nld().s[34]++;
User.prototype.verify2FA = function (token) {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[7]++;
  cov_ob8bs8nld().s[35]++;
  if (!this.twoFactorSecret) {
    /* istanbul ignore next */
    cov_ob8bs8nld().b[5][0]++;
    cov_ob8bs8nld().s[36]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_ob8bs8nld().b[5][1]++;
  }
  cov_ob8bs8nld().s[37]++;
  return speakeasy.totp.verify({
    secret: this.twoFactorSecret,
    encoding: 'base32',
    token: token,
    window: 2 // Allow 2 time steps (60 seconds) of variance
  });
};
/* istanbul ignore next */
cov_ob8bs8nld().s[38]++;
User.prototype.generateBackupCodes = function () {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[8]++;
  const codes =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[39]++, []);
  /* istanbul ignore next */
  cov_ob8bs8nld().s[40]++;
  for (let i =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[41]++, 0); i < 10; i++) {
    /* istanbul ignore next */
    cov_ob8bs8nld().s[42]++;
    codes.push(crypto.randomBytes(4).toString('hex').toUpperCase());
  }
  /* istanbul ignore next */
  cov_ob8bs8nld().s[43]++;
  this.backupCodes = codes;
  /* istanbul ignore next */
  cov_ob8bs8nld().s[44]++;
  return codes;
};
/* istanbul ignore next */
cov_ob8bs8nld().s[45]++;
User.prototype.useBackupCode = async function (code) {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[9]++;
  cov_ob8bs8nld().s[46]++;
  if (
  /* istanbul ignore next */
  (cov_ob8bs8nld().b[7][0]++, !this.backupCodes) ||
  /* istanbul ignore next */
  (cov_ob8bs8nld().b[7][1]++, !this.backupCodes.includes(code.toUpperCase()))) {
    /* istanbul ignore next */
    cov_ob8bs8nld().b[6][0]++;
    cov_ob8bs8nld().s[47]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_ob8bs8nld().b[6][1]++;
  }
  const updatedCodes =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[48]++, this.backupCodes.filter(c => {
    /* istanbul ignore next */
    cov_ob8bs8nld().f[10]++;
    cov_ob8bs8nld().s[49]++;
    return c !== code.toUpperCase();
  }));
  /* istanbul ignore next */
  cov_ob8bs8nld().s[50]++;
  await this.update({
    backupCodes: updatedCodes
  });
  /* istanbul ignore next */
  cov_ob8bs8nld().s[51]++;
  return true;
};
/* istanbul ignore next */
cov_ob8bs8nld().s[52]++;
User.prototype.generate2FAQRCode = async function () {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[11]++;
  cov_ob8bs8nld().s[53]++;
  if (!this.twoFactorSecret) {
    /* istanbul ignore next */
    cov_ob8bs8nld().b[8][0]++;
    cov_ob8bs8nld().s[54]++;
    throw new Error('2FA secret not generated');
  } else
  /* istanbul ignore next */
  {
    cov_ob8bs8nld().b[8][1]++;
  }
  const otpauthUrl =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[55]++, speakeasy.otpauthURL({
    secret: this.twoFactorSecret,
    label: this.email,
    issuer: 'CEX Exchange',
    encoding: 'base32'
  }));
  /* istanbul ignore next */
  cov_ob8bs8nld().s[56]++;
  return QRCode.toDataURL(otpauthUrl);
};
/* istanbul ignore next */
cov_ob8bs8nld().s[57]++;
User.prototype.toJSON = function () {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[12]++;
  const values =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[58]++, Object.assign({}, this.get()));

  // Remove sensitive fields
  /* istanbul ignore next */
  cov_ob8bs8nld().s[59]++;
  delete values.password;
  /* istanbul ignore next */
  cov_ob8bs8nld().s[60]++;
  delete values.twoFactorSecret;
  /* istanbul ignore next */
  cov_ob8bs8nld().s[61]++;
  delete values.backupCodes;
  /* istanbul ignore next */
  cov_ob8bs8nld().s[62]++;
  delete values.passwordResetToken;
  /* istanbul ignore next */
  cov_ob8bs8nld().s[63]++;
  delete values.emailVerificationToken;
  /* istanbul ignore next */
  cov_ob8bs8nld().s[64]++;
  return values;
};

// Static methods
/* istanbul ignore next */
cov_ob8bs8nld().s[65]++;
User.findByEmailOrUsername = function (identifier) {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[13]++;
  cov_ob8bs8nld().s[66]++;
  return this.findOne({
    where: {
      [sequelize.Sequelize.Op.or]: [{
        email: identifier
      }, {
        username: identifier
      }]
    }
  });
};
/* istanbul ignore next */
cov_ob8bs8nld().s[67]++;
User.findByPasswordResetToken = function (token) {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[14]++;
  const hashedToken =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[68]++, crypto.createHash('sha256').update(token).digest('hex'));
  /* istanbul ignore next */
  cov_ob8bs8nld().s[69]++;
  return this.findOne({
    where: {
      passwordResetToken: hashedToken,
      passwordResetExpires: {
        [sequelize.Sequelize.Op.gt]: Date.now()
      }
    }
  });
};
/* istanbul ignore next */
cov_ob8bs8nld().s[70]++;
User.findByEmailVerificationToken = function (token) {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[15]++;
  const hashedToken =
  /* istanbul ignore next */
  (cov_ob8bs8nld().s[71]++, crypto.createHash('sha256').update(token).digest('hex'));
  /* istanbul ignore next */
  cov_ob8bs8nld().s[72]++;
  return this.findOne({
    where: {
      emailVerificationToken: hashedToken,
      emailVerificationExpires: {
        [sequelize.Sequelize.Op.gt]: Date.now()
      }
    }
  });
};

// Hooks
/* istanbul ignore next */
cov_ob8bs8nld().s[73]++;
User.beforeCreate(async user => {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[16]++;
  cov_ob8bs8nld().s[74]++;
  if (user.password) {
    /* istanbul ignore next */
    cov_ob8bs8nld().b[9][0]++;
    const salt =
    /* istanbul ignore next */
    (cov_ob8bs8nld().s[75]++, await bcrypt.genSalt(12));
    /* istanbul ignore next */
    cov_ob8bs8nld().s[76]++;
    user.password = await bcrypt.hash(user.password, salt);
  } else
  /* istanbul ignore next */
  {
    cov_ob8bs8nld().b[9][1]++;
  }
});
/* istanbul ignore next */
cov_ob8bs8nld().s[77]++;
User.beforeUpdate(async user => {
  /* istanbul ignore next */
  cov_ob8bs8nld().f[17]++;
  cov_ob8bs8nld().s[78]++;
  if (user.changed('password')) {
    /* istanbul ignore next */
    cov_ob8bs8nld().b[10][0]++;
    const salt =
    /* istanbul ignore next */
    (cov_ob8bs8nld().s[79]++, await bcrypt.genSalt(12));
    /* istanbul ignore next */
    cov_ob8bs8nld().s[80]++;
    user.password = await bcrypt.hash(user.password, salt);
  } else
  /* istanbul ignore next */
  {
    cov_ob8bs8nld().b[10][1]++;
  }
});
/* istanbul ignore next */
cov_ob8bs8nld().s[81]++;
module.exports = User;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,