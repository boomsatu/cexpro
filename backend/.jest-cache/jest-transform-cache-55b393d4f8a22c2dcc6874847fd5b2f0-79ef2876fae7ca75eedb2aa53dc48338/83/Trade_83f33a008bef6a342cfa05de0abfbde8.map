{"version":3,"names":["cov_160p21lhbp","actualCoverage","DataTypes","s","require","sequelize","Market","User","Order","Trade","define","id","type","UUID","defaultValue","UUIDV4","primaryKey","trading_pair_id","allowNull","references","model","key","comment","buyer_order_id","seller_order_id","buyer_id","seller_id","price","DECIMAL","quantity","total_amount","buyer_fee","seller_fee","trade_time","DATE","NOW","created_at","trade_type","ENUM","liquidity_type","buyer_commission","seller_commission","buyer_commission_asset","STRING","seller_commission_asset","is_buyer_maker","BOOLEAN","trade_sequence","BIGINT","settlement_status","settlement_time","market_price","price_deviation","tableName","timestamps","createdAt","updatedAt","indexes","fields","prototype","getTradeValue","f","parseFloat","getTotalFees","b","getTradeHistory","tradingPairId","userId","limit","offset","where","Op","or","findAndCountAll","include","as","attributes","order","getRecentTrades","findAll","getMarketStats24h","twentyFourHoursAgo","Date","now","stats","gte","fn","col","raw","firstTrade","findOne","lastTrade","result","priceChange","priceChangePercent","price_change","price_change_percent","open_price","close_price","getCandlestickData","marketId","interval","intervalMs","startTime","query","replacements","QueryTypes","SELECT","module","exports"],"sources":["Trade.js"],"sourcesContent":["const { DataTypes } = require('sequelize');\nconst { sequelize } = require('../config/database');\nconst Market = require('./Market');\nconst User = require('./User');\nconst Order = require('./Order');\n\n/**\n * Model Trade untuk mencatat semua transaksi yang terjadi\n * Setiap trade adalah hasil dari matching antara buy dan sell order\n */\nconst Trade = sequelize.define('Trade', {\n  id: {\n    type: DataTypes.UUID,\n    defaultValue: DataTypes.UUIDV4,\n    primaryKey: true\n  },\n  \n  // Foreign keys\n  trading_pair_id: {\n    type: DataTypes.UUID,\n    allowNull: false,\n    references: {\n      model: 'trading_pairs',\n      key: 'id'\n    },\n    comment: 'Trading pair where trade occurred'\n  },\n  \n  // Order references\n  buyer_order_id: {\n    type: DataTypes.UUID,\n    allowNull: false,\n    references: {\n      model: 'orders',\n      key: 'id'\n    },\n    comment: 'Buy order reference'\n  },\n  \n  seller_order_id: {\n    type: DataTypes.UUID,\n    allowNull: false,\n    references: {\n      model: 'orders',\n      key: 'id'\n    },\n    comment: 'Sell order reference'\n  },\n  \n  // User references\n  buyer_id: {\n    type: DataTypes.UUID,\n    allowNull: false,\n    references: {\n      model: 'users',\n      key: 'id'\n    },\n    comment: 'Buyer user ID'\n  },\n  \n  seller_id: {\n    type: DataTypes.UUID,\n    allowNull: false,\n    references: {\n      model: 'users',\n      key: 'id'\n    },\n    comment: 'Seller user ID'\n  },\n  \n  price: {\n    type: DataTypes.DECIMAL(36, 18),\n    allowNull: false,\n    comment: 'Trade execution price'\n  },\n  \n  quantity: {\n    type: DataTypes.DECIMAL(36, 18),\n    allowNull: false,\n    comment: 'Trade quantity'\n  },\n  \n  total_amount: {\n    type: DataTypes.DECIMAL(36, 18),\n    allowNull: true,\n    comment: 'Total amount (price * quantity) - generated column'\n  },\n  \n  // Fee information\n  buyer_fee: {\n    type: DataTypes.DECIMAL(36, 18),\n    defaultValue: 0,\n    allowNull: true,\n    comment: 'Fee paid by buyer'\n  },\n  \n  seller_fee: {\n    type: DataTypes.DECIMAL(36, 18),\n    defaultValue: 0,\n    allowNull: true,\n    comment: 'Fee paid by seller'\n  },\n  \n  // Timestamps\n  trade_time: {\n    type: DataTypes.DATE,\n    defaultValue: DataTypes.NOW,\n    allowNull: true,\n    comment: 'When the trade occurred'\n  },\n  \n  created_at: {\n    type: DataTypes.DATE,\n    defaultValue: DataTypes.NOW,\n    allowNull: true,\n    comment: 'When the record was created'\n  },\n\n  // Enhanced fields\n  trade_type: {\n    type: DataTypes.ENUM('spot', 'margin', 'futures', 'options'),\n    defaultValue: 'spot',\n    allowNull: false\n  },\n  \n  liquidity_type: {\n    type: DataTypes.ENUM('maker', 'taker'),\n    allowNull: false,\n    comment: 'Whether the trade was maker or taker'\n  },\n  \n  buyer_commission: {\n    type: DataTypes.DECIMAL(36, 18),\n    defaultValue: 0,\n    allowNull: false,\n    comment: 'Commission paid by buyer'\n  },\n  \n  seller_commission: {\n    type: DataTypes.DECIMAL(36, 18),\n    defaultValue: 0,\n    allowNull: false,\n    comment: 'Commission paid by seller'\n  },\n  \n  buyer_commission_asset: {\n    type: DataTypes.STRING(10),\n    allowNull: true,\n    comment: 'Asset used for buyer commission'\n  },\n  \n  seller_commission_asset: {\n    type: DataTypes.STRING(10),\n    allowNull: true,\n    comment: 'Asset used for seller commission'\n  },\n  \n  is_buyer_maker: {\n    type: DataTypes.BOOLEAN,\n    allowNull: false,\n    comment: 'Whether buyer was the maker'\n  },\n  \n  trade_sequence: {\n    type: DataTypes.BIGINT,\n    allowNull: false,\n    comment: 'Sequential trade number for ordering'\n  },\n  \n  settlement_status: {\n    type: DataTypes.ENUM('pending', 'settled', 'failed'),\n    defaultValue: 'pending',\n    allowNull: false\n  },\n  \n  settlement_time: {\n    type: DataTypes.DATE,\n    allowNull: true,\n    comment: 'When the trade was settled'\n  },\n  \n  market_price: {\n    type: DataTypes.DECIMAL(36, 18),\n    allowNull: true,\n    comment: 'Market price at time of trade'\n  },\n  \n  price_deviation: {\n    type: DataTypes.DECIMAL(10, 6),\n    allowNull: true,\n    comment: 'Price deviation from market price (%)'\n  }\n}, {\n  tableName: 'trades',\n  timestamps: true,\n  createdAt: 'created_at',\n  updatedAt: false, // No updated_at column in database\n  indexes: [\n    {\n      fields: ['trading_pair_id']\n    },\n    {\n      fields: ['buyer_id']\n    },\n    {\n      fields: ['seller_id']\n    },\n    {\n      fields: ['buyer_order_id']\n    },\n    {\n      fields: ['seller_order_id']\n    },\n    {\n      fields: ['trade_time']\n    },\n    {\n      fields: ['price'] // For market data queries\n    },\n    {\n      fields: ['quantity'] // For volume calculations\n    }\n  ]\n});\n\n// Associations are defined in models/index.js\n\n// Instance methods\nTrade.prototype.getTradeValue = function() {\n  return parseFloat(this.price) * parseFloat(this.quantity);\n};\n\nTrade.prototype.getTotalFees = function() {\n  return parseFloat(this.buyer_fee || 0) + parseFloat(this.seller_fee || 0);\n};\n\n// Static methods\nTrade.getTradeHistory = async function(tradingPairId = null, userId = null, limit = 50, offset = 0) {\n  const where = {};\n  \n  if (tradingPairId) where.trading_pair_id = tradingPairId;\n  if (userId) {\n    where[sequelize.Op.or] = [\n      { buyer_id: userId },\n      { seller_id: userId }\n    ];\n  }\n  \n  return await Trade.findAndCountAll({\n    where,\n    include: [\n      { model: Market, as: 'tradingPair', attributes: ['symbol', 'base_currency', 'quote_currency'] }\n    ],\n    order: [['trade_time', 'DESC']],\n    limit,\n    offset\n  });\n};\n\nTrade.getRecentTrades = async function(tradingPairId, limit = 50) {\n  return await Trade.findAll({\n    where: { trading_pair_id: tradingPairId },\n    attributes: ['id', 'price', 'quantity', 'trade_time'],\n    order: [['trade_time', 'DESC']],\n    limit\n  });\n};\n\nTrade.getMarketStats24h = async function(tradingPairId) {\n  const twentyFourHoursAgo = new Date(Date.now() - 24 * 60 * 60 * 1000);\n  \n  const stats = await Trade.findAll({\n    where: {\n      trading_pair_id: tradingPairId,\n      trade_time: {\n        [sequelize.Op.gte]: twentyFourHoursAgo\n      }\n    },\n    attributes: [\n      [sequelize.fn('COUNT', sequelize.col('id')), 'trade_count'],\n      [sequelize.fn('SUM', sequelize.col('quantity')), 'volume'],\n      [sequelize.fn('SUM', sequelize.col('total_amount')), 'volume_quote'],\n      [sequelize.fn('MIN', sequelize.col('price')), 'low'],\n      [sequelize.fn('MAX', sequelize.col('price')), 'high'],\n      [sequelize.fn('AVG', sequelize.col('price')), 'avg_price']\n    ],\n    raw: true\n  });\n  \n  // Get first and last trade for price change calculation\n  const firstTrade = await Trade.findOne({\n    where: {\n      trading_pair_id: tradingPairId,\n      trade_time: {\n        [sequelize.Op.gte]: twentyFourHoursAgo\n      }\n    },\n    order: [['trade_time', 'ASC']],\n    attributes: ['price']\n  });\n  \n  const lastTrade = await Trade.findOne({\n    where: {\n      trading_pair_id: tradingPairId,\n      trade_time: {\n        [sequelize.Op.gte]: twentyFourHoursAgo\n      }\n    },\n    order: [['trade_time', 'DESC']],\n    attributes: ['price']\n  });\n  \n  const result = stats[0] || {};\n  \n  if (firstTrade && lastTrade) {\n    const priceChange = parseFloat(lastTrade.price) - parseFloat(firstTrade.price);\n    const priceChangePercent = (priceChange / parseFloat(firstTrade.price)) * 100;\n    \n    result.price_change = priceChange;\n    result.price_change_percent = priceChangePercent;\n    result.open_price = firstTrade.price;\n    result.close_price = lastTrade.price;\n  }\n  \n  return result;\n};\n\nTrade.getCandlestickData = async function(marketId, interval = '1h', limit = 100) {\n  // This would typically be implemented with time-series aggregation\n  // For now, we'll provide a basic implementation\n  const intervalMs = {\n    '1m': 60 * 1000,\n    '5m': 5 * 60 * 1000,\n    '15m': 15 * 60 * 1000,\n    '1h': 60 * 60 * 1000,\n    '4h': 4 * 60 * 60 * 1000,\n    '1d': 24 * 60 * 60 * 1000\n  }[interval] || 60 * 60 * 1000;\n  \n  const startTime = new Date(Date.now() - (limit * intervalMs));\n  \n  return await sequelize.query(`\n    SELECT \n      date_trunc('hour', executed_at) as time,\n      (array_agg(price ORDER BY executed_at ASC))[1] as open,\n      MAX(price) as high,\n      MIN(price) as low,\n      (array_agg(price ORDER BY executed_at DESC))[1] as close,\n      SUM(quantity) as volume,\n      SUM(value) as volume_quote,\n      COUNT(*) as trade_count\n    FROM trades \n    WHERE market_id = :marketId \n      AND executed_at >= :startTime\n    GROUP BY date_trunc('hour', executed_at)\n    ORDER BY time DESC\n    LIMIT :limit\n  `, {\n    replacements: { marketId, startTime, limit },\n    type: sequelize.QueryTypes.SELECT\n  });\n};\n\nmodule.exports = Trade;"],"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","ignoreList":[]}