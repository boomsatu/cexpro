49cd3ed6f8b1c5f3d3cbaeb10168e5af
/* istanbul ignore next */
function cov_2p526bvj2c() {
  var path = "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\routes\\users.js";
  var hash = "6434ff45e2fcbefd7b6e5ee479009456047b2798";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\routes\\users.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 18
        },
        end: {
          line: 2,
          column: 47
        }
      },
      "2": {
        start: {
          line: 3,
          column: 42
        },
        end: {
          line: 3,
          column: 70
        }
      },
      "3": {
        start: {
          line: 4,
          column: 65
        },
        end: {
          line: 4,
          column: 94
        }
      },
      "4": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 44
        }
      },
      "5": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 33
        },
        end: {
          line: 29,
          column: 2
        }
      },
      "7": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 40,
          column: 2
        }
      },
      "8": {
        start: {
          line: 42,
          column: 19
        },
        end: {
          line: 51,
          column: 2
        }
      },
      "9": {
        start: {
          line: 54,
          column: 31
        },
        end: {
          line: 64,
          column: 1
        }
      },
      "10": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 55,
          column: 38
        }
      },
      "11": {
        start: {
          line: 56,
          column: 2
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "12": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 61,
          column: 7
        }
      },
      "13": {
        start: {
          line: 63,
          column: 2
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "14": {
        start: {
          line: 67,
          column: 0
        },
        end: {
          line: 71,
          column: 2
        }
      },
      "15": {
        start: {
          line: 73,
          column: 0
        },
        end: {
          line: 148,
          column: 2
        }
      },
      "16": {
        start: {
          line: 97,
          column: 20
        },
        end: {
          line: 97,
          column: 35
        }
      },
      "17": {
        start: {
          line: 98,
          column: 23
        },
        end: {
          line: 98,
          column: 33
        }
      },
      "18": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 54
        }
      },
      "19": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "20": {
        start: {
          line: 102,
          column: 10
        },
        end: {
          line: 102,
          column: 63
        }
      },
      "21": {
        start: {
          line: 105,
          column: 23
        },
        end: {
          line: 105,
          column: 33
        }
      },
      "22": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 55
        }
      },
      "23": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "24": {
        start: {
          line: 109,
          column: 10
        },
        end: {
          line: 109,
          column: 51
        }
      },
      "25": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 20
        }
      },
      "26": {
        start: {
          line: 151,
          column: 0
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "27": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "28": {
        start: {
          line: 169,
          column: 10
        },
        end: {
          line: 169,
          column: 79
        }
      },
      "29": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 20
        }
      },
      "30": {
        start: {
          line: 179,
          column: 0
        },
        end: {
          line: 184,
          column: 2
        }
      },
      "31": {
        start: {
          line: 186,
          column: 0
        },
        end: {
          line: 197,
          column: 2
        }
      },
      "32": {
        start: {
          line: 199,
          column: 0
        },
        end: {
          line: 215,
          column: 2
        }
      },
      "33": {
        start: {
          line: 218,
          column: 0
        },
        end: {
          line: 222,
          column: 2
        }
      },
      "34": {
        start: {
          line: 224,
          column: 0
        },
        end: {
          line: 236,
          column: 2
        }
      },
      "35": {
        start: {
          line: 238,
          column: 0
        },
        end: {
          line: 242,
          column: 2
        }
      },
      "36": {
        start: {
          line: 245,
          column: 0
        },
        end: {
          line: 278,
          column: 2
        }
      },
      "37": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 276,
          column: 5
        }
      },
      "38": {
        start: {
          line: 250,
          column: 41
        },
        end: {
          line: 250,
          column: 76
        }
      },
      "39": {
        start: {
          line: 251,
          column: 21
        },
        end: {
          line: 251,
          column: 32
        }
      },
      "40": {
        start: {
          line: 252,
          column: 19
        },
        end: {
          line: 252,
          column: 49
        }
      },
      "41": {
        start: {
          line: 254,
          column: 6
        },
        end: {
          line: 259,
          column: 7
        }
      },
      "42": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "43": {
        start: {
          line: 261,
          column: 23
        },
        end: {
          line: 261,
          column: 65
        }
      },
      "44": {
        start: {
          line: 263,
          column: 6
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "45": {
        start: {
          line: 271,
          column: 6
        },
        end: {
          line: 271,
          column: 59
        }
      },
      "46": {
        start: {
          line: 272,
          column: 6
        },
        end: {
          line: 275,
          column: 9
        }
      },
      "47": {
        start: {
          line: 280,
          column: 0
        },
        end: {
          line: 310,
          column: 2
        }
      },
      "48": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "49": {
        start: {
          line: 285,
          column: 43
        },
        end: {
          line: 285,
          column: 78
        }
      },
      "50": {
        start: {
          line: 286,
          column: 21
        },
        end: {
          line: 286,
          column: 32
        }
      },
      "51": {
        start: {
          line: 288,
          column: 33
        },
        end: {
          line: 288,
          column: 71
        }
      },
      "52": {
        start: {
          line: 290,
          column: 6
        },
        end: {
          line: 301,
          column: 9
        }
      },
      "53": {
        start: {
          line: 296,
          column: 14
        },
        end: {
          line: 298,
          column: 45
        }
      },
      "54": {
        start: {
          line: 303,
          column: 6
        },
        end: {
          line: 303,
          column: 61
        }
      },
      "55": {
        start: {
          line: 304,
          column: 6
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "56": {
        start: {
          line: 313,
          column: 0
        },
        end: {
          line: 378,
          column: 2
        }
      },
      "57": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 376,
          column: 5
        }
      },
      "58": {
        start: {
          line: 318,
          column: 24
        },
        end: {
          line: 318,
          column: 50
        }
      },
      "59": {
        start: {
          line: 319,
          column: 21
        },
        end: {
          line: 319,
          column: 32
        }
      },
      "60": {
        start: {
          line: 322,
          column: 23
        },
        end: {
          line: 322,
          column: 51
        }
      },
      "61": {
        start: {
          line: 323,
          column: 24
        },
        end: {
          line: 323,
          column: 49
        }
      },
      "62": {
        start: {
          line: 325,
          column: 6
        },
        end: {
          line: 364,
          column: 7
        }
      },
      "63": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 358,
          column: 10
        }
      },
      "64": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 71
        }
      },
      "65": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 46
        }
      },
      "66": {
        start: {
          line: 366,
          column: 6
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "67": {
        start: {
          line: 371,
          column: 6
        },
        end: {
          line: 371,
          column: 53
        }
      },
      "68": {
        start: {
          line: 372,
          column: 6
        },
        end: {
          line: 375,
          column: 9
        }
      },
      "69": {
        start: {
          line: 380,
          column: 0
        },
        end: {
          line: 447,
          column: 2
        }
      },
      "70": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 445,
          column: 5
        }
      },
      "71": {
        start: {
          line: 412,
          column: 24
        },
        end: {
          line: 412,
          column: 50
        }
      },
      "72": {
        start: {
          line: 413,
          column: 71
        },
        end: {
          line: 413,
          column: 106
        }
      },
      "73": {
        start: {
          line: 414,
          column: 21
        },
        end: {
          line: 414,
          column: 32
        }
      },
      "74": {
        start: {
          line: 415,
          column: 30
        },
        end: {
          line: 415,
          column: 38
        }
      },
      "75": {
        start: {
          line: 418,
          column: 23
        },
        end: {
          line: 418,
          column: 51
        }
      },
      "76": {
        start: {
          line: 419,
          column: 6
        },
        end: {
          line: 419,
          column: 69
        }
      },
      "77": {
        start: {
          line: 422,
          column: 6
        },
        end: {
          line: 432,
          column: 9
        }
      },
      "78": {
        start: {
          line: 434,
          column: 6
        },
        end: {
          line: 438,
          column: 9
        }
      },
      "79": {
        start: {
          line: 440,
          column: 6
        },
        end: {
          line: 440,
          column: 56
        }
      },
      "80": {
        start: {
          line: 441,
          column: 6
        },
        end: {
          line: 444,
          column: 9
        }
      },
      "81": {
        start: {
          line: 450,
          column: 0
        },
        end: {
          line: 532,
          column: 2
        }
      },
      "82": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 530,
          column: 5
        }
      },
      "83": {
        start: {
          line: 471,
          column: 23
        },
        end: {
          line: 471,
          column: 48
        }
      },
      "84": {
        start: {
          line: 472,
          column: 71
        },
        end: {
          line: 472,
          column: 106
        }
      },
      "85": {
        start: {
          line: 473,
          column: 21
        },
        end: {
          line: 473,
          column: 32
        }
      },
      "86": {
        start: {
          line: 474,
          column: 35
        },
        end: {
          line: 474,
          column: 43
        }
      },
      "87": {
        start: {
          line: 477,
          column: 19
        },
        end: {
          line: 477,
          column: 46
        }
      },
      "88": {
        start: {
          line: 478,
          column: 6
        },
        end: {
          line: 483,
          column: 7
        }
      },
      "89": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 482,
          column: 11
        }
      },
      "90": {
        start: {
          line: 486,
          column: 30
        },
        end: {
          line: 486,
          column: 66
        }
      },
      "91": {
        start: {
          line: 487,
          column: 6
        },
        end: {
          line: 492,
          column: 7
        }
      },
      "92": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 491,
          column: 11
        }
      },
      "93": {
        start: {
          line: 495,
          column: 6
        },
        end: {
          line: 502,
          column: 8
        }
      },
      "94": {
        start: {
          line: 505,
          column: 6
        },
        end: {
          line: 515,
          column: 9
        }
      },
      "95": {
        start: {
          line: 518,
          column: 6
        },
        end: {
          line: 518,
          column: 28
        }
      },
      "96": {
        start: {
          line: 520,
          column: 6
        },
        end: {
          line: 523,
          column: 9
        }
      },
      "97": {
        start: {
          line: 525,
          column: 6
        },
        end: {
          line: 525,
          column: 52
        }
      },
      "98": {
        start: {
          line: 526,
          column: 6
        },
        end: {
          line: 529,
          column: 9
        }
      },
      "99": {
        start: {
          line: 534,
          column: 0
        },
        end: {
          line: 534,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 54,
            column: 31
          },
          end: {
            line: 54,
            column: 32
          }
        },
        loc: {
          start: {
            line: 54,
            column: 51
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 54
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 96,
            column: 14
          },
          end: {
            line: 96,
            column: 15
          }
        },
        loc: {
          start: {
            line: 96,
            column: 25
          },
          end: {
            line: 113,
            column: 7
          }
        },
        line: 96
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 167,
            column: 14
          },
          end: {
            line: 167,
            column: 15
          }
        },
        loc: {
          start: {
            line: 167,
            column: 34
          },
          end: {
            line: 172,
            column: 7
          }
        },
        line: 167
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 248,
            column: 2
          },
          end: {
            line: 248,
            column: 3
          }
        },
        loc: {
          start: {
            line: 248,
            column: 22
          },
          end: {
            line: 277,
            column: 3
          }
        },
        line: 248
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 283,
            column: 2
          },
          end: {
            line: 283,
            column: 3
          }
        },
        loc: {
          start: {
            line: 283,
            column: 22
          },
          end: {
            line: 309,
            column: 3
          }
        },
        line: 283
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 295,
            column: 47
          },
          end: {
            line: 295,
            column: 48
          }
        },
        loc: {
          start: {
            line: 296,
            column: 14
          },
          end: {
            line: 298,
            column: 45
          }
        },
        line: 296
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 316,
            column: 2
          },
          end: {
            line: 316,
            column: 3
          }
        },
        loc: {
          start: {
            line: 316,
            column: 22
          },
          end: {
            line: 377,
            column: 3
          }
        },
        line: 316
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 410,
            column: 2
          },
          end: {
            line: 410,
            column: 3
          }
        },
        loc: {
          start: {
            line: 410,
            column: 22
          },
          end: {
            line: 446,
            column: 3
          }
        },
        line: 410
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 469,
            column: 2
          },
          end: {
            line: 469,
            column: 3
          }
        },
        loc: {
          start: {
            line: 469,
            column: 22
          },
          end: {
            line: 531,
            column: 3
          }
        },
        line: 469
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 56,
            column: 2
          },
          end: {
            line: 62,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 2
          },
          end: {
            line: 62,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "1": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "2": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "3": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "4": {
        loc: {
          start: {
            line: 252,
            column: 19
          },
          end: {
            line: 252,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 19
          },
          end: {
            line: 252,
            column: 43
          }
        }, {
          start: {
            line: 252,
            column: 47
          },
          end: {
            line: 252,
            column: 49
          }
        }],
        line: 252
      },
      "5": {
        loc: {
          start: {
            line: 254,
            column: 6
          },
          end: {
            line: 259,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 6
          },
          end: {
            line: 259,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "6": {
        loc: {
          start: {
            line: 294,
            column: 21
          },
          end: {
            line: 299,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 299,
            column: 14
          }
        }, {
          start: {
            line: 299,
            column: 17
          },
          end: {
            line: 299,
            column: 18
          }
        }],
        line: 294
      },
      "7": {
        loc: {
          start: {
            line: 296,
            column: 14
          },
          end: {
            line: 298,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 296,
            column: 42
          },
          end: {
            line: 296,
            column: 43
          }
        }, {
          start: {
            line: 297,
            column: 14
          },
          end: {
            line: 298,
            column: 45
          }
        }],
        line: 296
      },
      "8": {
        loc: {
          start: {
            line: 297,
            column: 14
          },
          end: {
            line: 298,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 297,
            column: 38
          },
          end: {
            line: 297,
            column: 39
          }
        }, {
          start: {
            line: 298,
            column: 14
          },
          end: {
            line: 298,
            column: 45
          }
        }],
        line: 297
      },
      "9": {
        loc: {
          start: {
            line: 298,
            column: 14
          },
          end: {
            line: 298,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 298,
            column: 40
          },
          end: {
            line: 298,
            column: 41
          }
        }, {
          start: {
            line: 298,
            column: 44
          },
          end: {
            line: 298,
            column: 45
          }
        }],
        line: 298
      },
      "10": {
        loc: {
          start: {
            line: 325,
            column: 6
          },
          end: {
            line: 364,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 325,
            column: 6
          },
          end: {
            line: 364,
            column: 7
          }
        }, {
          start: {
            line: 362,
            column: 13
          },
          end: {
            line: 364,
            column: 7
          }
        }],
        line: 325
      },
      "11": {
        loc: {
          start: {
            line: 478,
            column: 6
          },
          end: {
            line: 483,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 478,
            column: 6
          },
          end: {
            line: 483,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 478
      },
      "12": {
        loc: {
          start: {
            line: 487,
            column: 6
          },
          end: {
            line: 492,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 487,
            column: 6
          },
          end: {
            line: 492,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 487
      },
      "13": {
        loc: {
          start: {
            line: 499,
            column: 26
          },
          end: {
            line: 499,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 499,
            column: 26
          },
          end: {
            line: 499,
            column: 32
          }
        }, {
          start: {
            line: 499,
            column: 36
          },
          end: {
            line: 499,
            column: 69
          }
        }],
        line: 499
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6434ff45e2fcbefd7b6e5ee479009456047b2798"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2p526bvj2c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2p526bvj2c();
const express =
/* istanbul ignore next */
(cov_2p526bvj2c().s[0]++, require('express'));
const rateLimit =
/* istanbul ignore next */
(cov_2p526bvj2c().s[1]++, require('express-rate-limit'));
const {
  body,
  param,
  validationResult
} =
/* istanbul ignore next */
(cov_2p526bvj2c().s[2]++, require('express-validator'));
const {
  requireAuth,
  requireEmailVerification,
  userRateLimit
} =
/* istanbul ignore next */
(cov_2p526bvj2c().s[3]++, require('../middleware/auth'));
const {
  getProfile,
  updateProfile,
  changePassword,
  enable2FA,
  verify2FASetup,
  disable2FA,
  getSessions,
  revokeSession,
  revokeAllSessions
} =
/* istanbul ignore next */
(cov_2p526bvj2c().s[4]++, require('../controllers/userController'));
const router =
/* istanbul ignore next */
(cov_2p526bvj2c().s[5]++, express.Router());

// Rate limiting for sensitive operations
const sensitiveOperationsLimit =
/* istanbul ignore next */
(cov_2p526bvj2c().s[6]++, rateLimit({
  windowMs: 15 * 60 * 1000,
  // 15 minutes
  max: 5,
  // 5 attempts per window
  message: {
    success: false,
    message: 'Too many sensitive operations. Please try again later.'
  },
  standardHeaders: true,
  legacyHeaders: false
}));
const passwordChangeLimit =
/* istanbul ignore next */
(cov_2p526bvj2c().s[7]++, rateLimit({
  windowMs: 60 * 60 * 1000,
  // 1 hour
  max: 3,
  // 3 password changes per hour
  message: {
    success: false,
    message: 'Too many password change attempts. Please try again later.'
  },
  standardHeaders: true,
  legacyHeaders: false
}));
const twoFALimit =
/* istanbul ignore next */
(cov_2p526bvj2c().s[8]++, rateLimit({
  windowMs: 15 * 60 * 1000,
  // 15 minutes
  max: 10,
  // 10 2FA attempts per window
  message: {
    success: false,
    message: 'Too many 2FA attempts. Please try again later.'
  },
  standardHeaders: true,
  legacyHeaders: false
}));

// Validation middleware
/* istanbul ignore next */
cov_2p526bvj2c().s[9]++;
const handleValidationErrors = (req, res, next) => {
  /* istanbul ignore next */
  cov_2p526bvj2c().f[0]++;
  const errors =
  /* istanbul ignore next */
  (cov_2p526bvj2c().s[10]++, validationResult(req));
  /* istanbul ignore next */
  cov_2p526bvj2c().s[11]++;
  if (!errors.isEmpty()) {
    /* istanbul ignore next */
    cov_2p526bvj2c().b[0][0]++;
    cov_2p526bvj2c().s[12]++;
    return res.status(400).json({
      success: false,
      message: 'Validation failed',
      errors: errors.array()
    });
  } else
  /* istanbul ignore next */
  {
    cov_2p526bvj2c().b[0][1]++;
  }
  cov_2p526bvj2c().s[13]++;
  next();
};

// Profile routes
/* istanbul ignore next */
cov_2p526bvj2c().s[14]++;
router.get('/profile', requireAuth, userRateLimit, getProfile);
/* istanbul ignore next */
cov_2p526bvj2c().s[15]++;
router.put('/profile', requireAuth, requireEmailVerification, userRateLimit, [body('firstName').optional().isLength({
  min: 1,
  max: 50
}).withMessage('First name must be between 1 and 50 characters').matches(/^[a-zA-Z\s'-]+$/).withMessage('First name can only contain letters, spaces, hyphens, and apostrophes'), body('lastName').optional().isLength({
  min: 1,
  max: 50
}).withMessage('Last name must be between 1 and 50 characters').matches(/^[a-zA-Z\s'-]+$/).withMessage('Last name can only contain letters, spaces, hyphens, and apostrophes'), body('dateOfBirth').optional().isISO8601().withMessage('Date of birth must be a valid date').custom(value => {
  /* istanbul ignore next */
  cov_2p526bvj2c().f[1]++;
  const dob =
  /* istanbul ignore next */
  (cov_2p526bvj2c().s[16]++, new Date(value));
  const minAge =
  /* istanbul ignore next */
  (cov_2p526bvj2c().s[17]++, new Date());
  /* istanbul ignore next */
  cov_2p526bvj2c().s[18]++;
  minAge.setFullYear(minAge.getFullYear() - 18);
  /* istanbul ignore next */
  cov_2p526bvj2c().s[19]++;
  if (dob > minAge) {
    /* istanbul ignore next */
    cov_2p526bvj2c().b[1][0]++;
    cov_2p526bvj2c().s[20]++;
    throw new Error('You must be at least 18 years old');
  } else
  /* istanbul ignore next */
  {
    cov_2p526bvj2c().b[1][1]++;
  }
  const maxAge =
  /* istanbul ignore next */
  (cov_2p526bvj2c().s[21]++, new Date());
  /* istanbul ignore next */
  cov_2p526bvj2c().s[22]++;
  maxAge.setFullYear(maxAge.getFullYear() - 120);
  /* istanbul ignore next */
  cov_2p526bvj2c().s[23]++;
  if (dob < maxAge) {
    /* istanbul ignore next */
    cov_2p526bvj2c().b[2][0]++;
    cov_2p526bvj2c().s[24]++;
    throw new Error('Invalid date of birth');
  } else
  /* istanbul ignore next */
  {
    cov_2p526bvj2c().b[2][1]++;
  }
  cov_2p526bvj2c().s[25]++;
  return true;
}), body('phoneNumber').optional().matches(/^\+?[1-9]\d{1,14}$/).withMessage('Phone number must be in international format'), body('country').optional().isLength({
  min: 2,
  max: 2
}).withMessage('Country must be a 2-letter ISO country code').isAlpha().withMessage('Country code must contain only letters'), body('address').optional().isLength({
  min: 5,
  max: 200
}).withMessage('Address must be between 5 and 200 characters'), body('city').optional().isLength({
  min: 1,
  max: 100
}).withMessage('City must be between 1 and 100 characters').matches(/^[a-zA-Z\s'-]+$/).withMessage('City can only contain letters, spaces, hyphens, and apostrophes'), body('postalCode').optional().isLength({
  min: 3,
  max: 20
}).withMessage('Postal code must be between 3 and 20 characters').matches(/^[a-zA-Z0-9\s-]+$/).withMessage('Postal code can only contain letters, numbers, spaces, and hyphens')], handleValidationErrors, updateProfile);

// Password management
/* istanbul ignore next */
cov_2p526bvj2c().s[26]++;
router.put('/password', requireAuth, requireEmailVerification, passwordChangeLimit, [body('currentPassword').notEmpty().withMessage('Current password is required'), body('newPassword').isLength({
  min: 8,
  max: 128
}).withMessage('New password must be between 8 and 128 characters').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).withMessage('New password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'), body('confirmPassword').custom((value, {
  req
}) => {
  /* istanbul ignore next */
  cov_2p526bvj2c().f[2]++;
  cov_2p526bvj2c().s[27]++;
  if (value !== req.body.newPassword) {
    /* istanbul ignore next */
    cov_2p526bvj2c().b[3][0]++;
    cov_2p526bvj2c().s[28]++;
    throw new Error('Password confirmation does not match new password');
  } else
  /* istanbul ignore next */
  {
    cov_2p526bvj2c().b[3][1]++;
  }
  cov_2p526bvj2c().s[29]++;
  return true;
})], handleValidationErrors, changePassword);

// Two-Factor Authentication routes
/* istanbul ignore next */
cov_2p526bvj2c().s[30]++;
router.post('/2fa/enable', requireAuth, requireEmailVerification, sensitiveOperationsLimit, enable2FA);
/* istanbul ignore next */
cov_2p526bvj2c().s[31]++;
router.post('/2fa/verify', requireAuth, requireEmailVerification, twoFALimit, [body('token').matches(/^\d{6}$/).withMessage('2FA token must be a 6-digit number')], handleValidationErrors, verify2FASetup);
/* istanbul ignore next */
cov_2p526bvj2c().s[32]++;
router.post('/2fa/disable', requireAuth, requireEmailVerification, sensitiveOperationsLimit, [body('password').notEmpty().withMessage('Password is required to disable 2FA'), body('token').optional().matches(/^\d{6}$/).withMessage('2FA token must be a 6-digit number')], handleValidationErrors, disable2FA);

// Session management
/* istanbul ignore next */
cov_2p526bvj2c().s[33]++;
router.get('/sessions', requireAuth, userRateLimit, getSessions);
/* istanbul ignore next */
cov_2p526bvj2c().s[34]++;
router.delete('/sessions/:sessionId', requireAuth, sensitiveOperationsLimit, [param('sessionId').isLength({
  min: 1
}).withMessage('Session ID is required').matches(/^[a-zA-Z0-9._-]+$/).withMessage('Invalid session ID format')], handleValidationErrors, revokeSession);
/* istanbul ignore next */
cov_2p526bvj2c().s[35]++;
router.delete('/sessions', requireAuth, sensitiveOperationsLimit, revokeAllSessions);

// Account security endpoints
/* istanbul ignore next */
cov_2p526bvj2c().s[36]++;
router.get('/security/activity', requireAuth, userRateLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_2p526bvj2c().f[3]++;
  cov_2p526bvj2c().s[37]++;
  try {
    const {
      getUserActivitySummary
    } =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[38]++, require('../services/auditService'));
    const userId =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[39]++, req.user.id);
    const days =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[40]++,
    /* istanbul ignore next */
    (cov_2p526bvj2c().b[4][0]++, parseInt(req.query.days)) ||
    /* istanbul ignore next */
    (cov_2p526bvj2c().b[4][1]++, 30));
    /* istanbul ignore next */
    cov_2p526bvj2c().s[41]++;
    if (days > 365) {
      /* istanbul ignore next */
      cov_2p526bvj2c().b[5][0]++;
      cov_2p526bvj2c().s[42]++;
      return res.status(400).json({
        success: false,
        message: 'Maximum activity period is 365 days'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p526bvj2c().b[5][1]++;
    }
    const activity =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[43]++, await getUserActivitySummary(userId, days));
    /* istanbul ignore next */
    cov_2p526bvj2c().s[44]++;
    res.json({
      success: true,
      data: {
        period: `${days} days`,
        activity
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p526bvj2c().s[45]++;
    console.error('Get security activity error:', error);
    /* istanbul ignore next */
    cov_2p526bvj2c().s[46]++;
    res.status(500).json({
      success: false,
      message: 'Internal server error'
    });
  }
});
/* istanbul ignore next */
cov_2p526bvj2c().s[47]++;
router.get('/security/suspicious', requireAuth, userRateLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_2p526bvj2c().f[4]++;
  cov_2p526bvj2c().s[48]++;
  try {
    const {
      detectSuspiciousActivity
    } =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[49]++, require('../services/auditService'));
    const userId =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[50]++, req.user.id);
    const suspiciousPatterns =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[51]++, await detectSuspiciousActivity(userId));
    /* istanbul ignore next */
    cov_2p526bvj2c().s[52]++;
    res.json({
      success: true,
      data: {
        patterns: suspiciousPatterns,
        riskLevel: suspiciousPatterns.length > 0 ?
        /* istanbul ignore next */
        (cov_2p526bvj2c().b[6][0]++, Math.max(...suspiciousPatterns.map(p => {
          /* istanbul ignore next */
          cov_2p526bvj2c().f[5]++;
          cov_2p526bvj2c().s[53]++;
          return p.severity === 'critical' ?
          /* istanbul ignore next */
          (cov_2p526bvj2c().b[7][0]++, 4) :
          /* istanbul ignore next */
          (cov_2p526bvj2c().b[7][1]++, p.severity === 'high' ?
          /* istanbul ignore next */
          (cov_2p526bvj2c().b[8][0]++, 3) :
          /* istanbul ignore next */
          (cov_2p526bvj2c().b[8][1]++, p.severity === 'medium' ?
          /* istanbul ignore next */
          (cov_2p526bvj2c().b[9][0]++, 2) :
          /* istanbul ignore next */
          (cov_2p526bvj2c().b[9][1]++, 1)));
        }))) :
        /* istanbul ignore next */
        (cov_2p526bvj2c().b[6][1]++, 0)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p526bvj2c().s[54]++;
    console.error('Get suspicious activity error:', error);
    /* istanbul ignore next */
    cov_2p526bvj2c().s[55]++;
    res.status(500).json({
      success: false,
      message: 'Internal server error'
    });
  }
});

// Account preferences
/* istanbul ignore next */
cov_2p526bvj2c().s[56]++;
router.get('/preferences', requireAuth, userRateLimit, async (req, res) => {
  /* istanbul ignore next */
  cov_2p526bvj2c().f[6]++;
  cov_2p526bvj2c().s[57]++;
  try {
    const {
      cache
    } =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[58]++, require('../config/redis'));
    const userId =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[59]++, req.user.id);

    // Get user preferences from cache or database
    const cacheKey =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[60]++, `user_preferences:${userId}`);
    let preferences =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[61]++, await cache.get(cacheKey));
    /* istanbul ignore next */
    cov_2p526bvj2c().s[62]++;
    if (!preferences) {
      /* istanbul ignore next */
      cov_2p526bvj2c().b[10][0]++;
      cov_2p526bvj2c().s[63]++;
      // Default preferences
      preferences = {
        notifications: {
          email: {
            loginAlerts: true,
            tradingUpdates: true,
            securityAlerts: true,
            marketingEmails: false,
            newsletter: false
          },
          push: {
            loginAlerts: true,
            tradingUpdates: false,
            priceAlerts: false
          }
        },
        trading: {
          defaultOrderType: 'limit',
          confirmOrders: true,
          showAdvancedOptions: false
        },
        security: {
          sessionTimeout: 30,
          // minutes
          requirePasswordForSensitiveOps: true,
          loginNotifications: true
        },
        display: {
          theme: 'light',
          language: 'en',
          timezone: 'UTC',
          currency: 'USD'
        }
      };

      // Cache for 1 hour
      /* istanbul ignore next */
      cov_2p526bvj2c().s[64]++;
      await cache.setex(cacheKey, 3600, JSON.stringify(preferences));
    } else {
      /* istanbul ignore next */
      cov_2p526bvj2c().b[10][1]++;
      cov_2p526bvj2c().s[65]++;
      preferences = JSON.parse(preferences);
    }
    /* istanbul ignore next */
    cov_2p526bvj2c().s[66]++;
    res.json({
      success: true,
      data: {
        preferences
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p526bvj2c().s[67]++;
    console.error('Get preferences error:', error);
    /* istanbul ignore next */
    cov_2p526bvj2c().s[68]++;
    res.status(500).json({
      success: false,
      message: 'Internal server error'
    });
  }
});
/* istanbul ignore next */
cov_2p526bvj2c().s[69]++;
router.put('/preferences', requireAuth, requireEmailVerification, userRateLimit, [body('preferences').isObject().withMessage('Preferences must be an object'), body('preferences.notifications.email.loginAlerts').optional().isBoolean().withMessage('Login alerts preference must be boolean'), body('preferences.display.theme').optional().isIn(['light', 'dark']).withMessage('Theme must be light or dark'), body('preferences.display.language').optional().isIn(['en', 'id', 'zh', 'ja', 'ko']).withMessage('Unsupported language'), body('preferences.security.sessionTimeout').optional().isInt({
  min: 5,
  max: 480
}).withMessage('Session timeout must be between 5 and 480 minutes')], handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_2p526bvj2c().f[7]++;
  cov_2p526bvj2c().s[70]++;
  try {
    const {
      cache
    } =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[71]++, require('../config/redis'));
    const {
      createAuditLog,
      EVENT_TYPES,
      LOG_LEVELS,
      RISK_LEVELS
    } =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[72]++, require('../services/auditService'));
    const userId =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[73]++, req.user.id);
    const {
      preferences
    } =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[74]++, req.body);

    // Update preferences in cache
    const cacheKey =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[75]++, `user_preferences:${userId}`);
    /* istanbul ignore next */
    cov_2p526bvj2c().s[76]++;
    await cache.setex(cacheKey, 3600, JSON.stringify(preferences));

    // Log preference update
    /* istanbul ignore next */
    cov_2p526bvj2c().s[77]++;
    await createAuditLog({
      userId,
      eventType: EVENT_TYPES.PROFILE_UPDATED,
      level: LOG_LEVELS.INFO,
      riskLevel: RISK_LEVELS.LOW,
      description: 'User preferences updated',
      metadata: {
        updatedPreferences: Object.keys(preferences)
      },
      ipAddress: req.ip,
      userAgent: req.get('User-Agent'),
      sessionId: req.sessionID
    });
    /* istanbul ignore next */
    cov_2p526bvj2c().s[78]++;
    res.json({
      success: true,
      message: 'Preferences updated successfully',
      data: {
        preferences
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p526bvj2c().s[79]++;
    console.error('Update preferences error:', error);
    /* istanbul ignore next */
    cov_2p526bvj2c().s[80]++;
    res.status(500).json({
      success: false,
      message: 'Internal server error'
    });
  }
});

// Account deletion (soft delete)
/* istanbul ignore next */
cov_2p526bvj2c().s[81]++;
router.delete('/account', requireAuth, requireEmailVerification, sensitiveOperationsLimit, [body('password').notEmpty().withMessage('Password is required for account deletion'), body('confirmation').equals('DELETE MY ACCOUNT').withMessage('Please type "DELETE MY ACCOUNT" to confirm'), body('reason').optional().isLength({
  max: 500
}).withMessage('Reason must be less than 500 characters')], handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_2p526bvj2c().f[8]++;
  cov_2p526bvj2c().s[82]++;
  try {
    const {
      User
    } =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[83]++, require('../models/User'));
    const {
      createAuditLog,
      EVENT_TYPES,
      LOG_LEVELS,
      RISK_LEVELS
    } =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[84]++, require('../services/auditService'));
    const userId =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[85]++, req.user.id);
    const {
      password,
      reason
    } =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[86]++, req.body);

    // Get user
    const user =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[87]++, await User.findByPk(userId));
    /* istanbul ignore next */
    cov_2p526bvj2c().s[88]++;
    if (!user) {
      /* istanbul ignore next */
      cov_2p526bvj2c().b[11][0]++;
      cov_2p526bvj2c().s[89]++;
      return res.status(404).json({
        success: false,
        message: 'User not found'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p526bvj2c().b[11][1]++;
    }

    // Verify password
    const isPasswordValid =
    /* istanbul ignore next */
    (cov_2p526bvj2c().s[90]++, await user.comparePassword(password));
    /* istanbul ignore next */
    cov_2p526bvj2c().s[91]++;
    if (!isPasswordValid) {
      /* istanbul ignore next */
      cov_2p526bvj2c().b[12][0]++;
      cov_2p526bvj2c().s[92]++;
      return res.status(400).json({
        success: false,
        message: 'Invalid password'
      });
    } else
    /* istanbul ignore next */
    {
      cov_2p526bvj2c().b[12][1]++;
    }

    // Soft delete user account
    cov_2p526bvj2c().s[93]++;
    await User.update({
      status: 'deleted',
      deletedAt: new Date(),
      deletionReason:
      /* istanbul ignore next */
      (cov_2p526bvj2c().b[13][0]++, reason) ||
      /* istanbul ignore next */
      (cov_2p526bvj2c().b[13][1]++, 'User requested account deletion')
    }, {
      where: {
        id: userId
      }
    });

    // Log account deletion
    /* istanbul ignore next */
    cov_2p526bvj2c().s[94]++;
    await createAuditLog({
      userId,
      eventType: 'account_deleted',
      level: LOG_LEVELS.WARNING,
      riskLevel: RISK_LEVELS.HIGH,
      description: 'User account deleted',
      metadata: {
        reason
      },
      ipAddress: req.ip,
      userAgent: req.get('User-Agent'),
      sessionId: req.sessionID
    });

    // Destroy session
    /* istanbul ignore next */
    cov_2p526bvj2c().s[95]++;
    req.session.destroy();
    /* istanbul ignore next */
    cov_2p526bvj2c().s[96]++;
    res.json({
      success: true,
      message: 'Account deleted successfully. We\'re sorry to see you go.'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2p526bvj2c().s[97]++;
    console.error('Delete account error:', error);
    /* istanbul ignore next */
    cov_2p526bvj2c().s[98]++;
    res.status(500).json({
      success: false,
      message: 'Internal server error'
    });
  }
});
/* istanbul ignore next */
cov_2p526bvj2c().s[99]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,