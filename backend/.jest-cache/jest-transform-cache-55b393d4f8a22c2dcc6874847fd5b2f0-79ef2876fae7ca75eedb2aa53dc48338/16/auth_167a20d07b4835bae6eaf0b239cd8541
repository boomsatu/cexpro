278317fff89384c2db1bbfacc934582c
/* istanbul ignore next */
function cov_1044trggvh() {
  var path = "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\routes\\auth.js";
  var hash = "761f24bb13a156e6b26f69762f91e8b3e28fdf9d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\routes\\auth.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 16
        },
        end: {
          line: 1,
          column: 34
        }
      },
      "1": {
        start: {
          line: 2,
          column: 18
        },
        end: {
          line: 2,
          column: 47
        }
      },
      "2": {
        start: {
          line: 3,
          column: 35
        },
        end: {
          line: 3,
          column: 63
        }
      },
      "3": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 4,
          column: 36
        }
      },
      "4": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 66
        }
      },
      "5": {
        start: {
          line: 6,
          column: 15
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "6": {
        start: {
          line: 7,
          column: 18
        },
        end: {
          line: 7,
          column: 38
        }
      },
      "7": {
        start: {
          line: 8,
          column: 13
        },
        end: {
          line: 8,
          column: 38
        }
      },
      "8": {
        start: {
          line: 9,
          column: 83
        },
        end: {
          line: 9,
          column: 112
        }
      },
      "9": {
        start: {
          line: 10,
          column: 27
        },
        end: {
          line: 10,
          column: 53
        }
      },
      "10": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 56
        }
      },
      "11": {
        start: {
          line: 12,
          column: 19
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "12": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 54
        }
      },
      "13": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 31
        }
      },
      "14": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 27,
          column: 2
        }
      },
      "15": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 36,
          column: 2
        }
      },
      "16": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 76,
          column: 1
        }
      },
      "17": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 90,
          column: 1
        }
      },
      "18": {
        start: {
          line: 92,
          column: 20
        },
        end: {
          line: 97,
          column: 1
        }
      },
      "19": {
        start: {
          line: 100,
          column: 31
        },
        end: {
          line: 110,
          column: 1
        }
      },
      "20": {
        start: {
          line: 101,
          column: 17
        },
        end: {
          line: 101,
          column: 38
        }
      },
      "21": {
        start: {
          line: 102,
          column: 2
        },
        end: {
          line: 108,
          column: 3
        }
      },
      "22": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 107,
          column: 7
        }
      },
      "23": {
        start: {
          line: 109,
          column: 2
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "24": {
        start: {
          line: 113,
          column: 0
        },
        end: {
          line: 203,
          column: 3
        }
      },
      "25": {
        start: {
          line: 114,
          column: 2
        },
        end: {
          line: 202,
          column: 3
        }
      },
      "26": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 124,
          column: 16
        }
      },
      "27": {
        start: {
          line: 127,
          column: 25
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "28": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 142,
          column: 5
        }
      },
      "29": {
        start: {
          line: 137,
          column: 6
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "30": {
        start: {
          line: 145,
          column: 17
        },
        end: {
          line: 154,
          column: 6
        }
      },
      "31": {
        start: {
          line: 157,
          column: 30
        },
        end: {
          line: 157,
          column: 67
        }
      },
      "32": {
        start: {
          line: 158,
          column: 4
        },
        end: {
          line: 158,
          column: 22
        }
      },
      "33": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 164,
          column: 7
        }
      },
      "34": {
        start: {
          line: 167,
          column: 4
        },
        end: {
          line: 176,
          column: 7
        }
      },
      "35": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 187,
          column: 7
        }
      },
      "36": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 189,
          column: 48
        }
      },
      "37": {
        start: {
          line: 191,
          column: 4
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "38": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "39": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 201,
          column: 7
        }
      },
      "40": {
        start: {
          line: 206,
          column: 0
        },
        end: {
          line: 371,
          column: 3
        }
      },
      "41": {
        start: {
          line: 207,
          column: 2
        },
        end: {
          line: 370,
          column: 3
        }
      },
      "42": {
        start: {
          line: 208,
          column: 64
        },
        end: {
          line: 208,
          column: 72
        }
      },
      "43": {
        start: {
          line: 209,
          column: 15
        },
        end: {
          line: 209,
          column: 21
        }
      },
      "44": {
        start: {
          line: 210,
          column: 22
        },
        end: {
          line: 210,
          column: 43
        }
      },
      "45": {
        start: {
          line: 213,
          column: 17
        },
        end: {
          line: 213,
          column: 61
        }
      },
      "46": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "47": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "48": {
        start: {
          line: 222,
          column: 4
        },
        end: {
          line: 236,
          column: 5
        }
      },
      "49": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 229,
          column: 9
        }
      },
      "50": {
        start: {
          line: 231,
          column: 6
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "51": {
        start: {
          line: 239,
          column: 28
        },
        end: {
          line: 239,
          column: 64
        }
      },
      "52": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 256,
          column: 5
        }
      },
      "53": {
        start: {
          line: 241,
          column: 6
        },
        end: {
          line: 241,
          column: 36
        }
      },
      "54": {
        start: {
          line: 243,
          column: 6
        },
        end: {
          line: 250,
          column: 9
        }
      },
      "55": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "56": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "57": {
        start: {
          line: 260,
          column: 6
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "58": {
        start: {
          line: 269,
          column: 6
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "59": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 309,
          column: 5
        }
      },
      "60": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 288,
          column: 7
        }
      },
      "61": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 287,
          column: 11
        }
      },
      "62": {
        start: {
          line: 291,
          column: 25
        },
        end: {
          line: 291,
          column: 97
        }
      },
      "63": {
        start: {
          line: 292,
          column: 6
        },
        end: {
          line: 308,
          column: 7
        }
      },
      "64": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 38
        }
      },
      "65": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 302,
          column: 11
        }
      },
      "66": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "67": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 312,
          column: 36
        }
      },
      "68": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 318,
          column: 7
        }
      },
      "69": {
        start: {
          line: 321,
          column: 42
        },
        end: {
          line: 321,
          column: 62
        }
      },
      "70": {
        start: {
          line: 324,
          column: 22
        },
        end: {
          line: 324,
          column: 41
        }
      },
      "71": {
        start: {
          line: 325,
          column: 4
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "72": {
        start: {
          line: 332,
          column: 26
        },
        end: {
          line: 337,
          column: 5
        }
      },
      "73": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 339,
          column: 58
        }
      },
      "74": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 343,
          column: 7
        }
      },
      "75": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 344,
          column: 54
        }
      },
      "76": {
        start: {
          line: 347,
          column: 4
        },
        end: {
          line: 353,
          column: 7
        }
      },
      "77": {
        start: {
          line: 355,
          column: 4
        },
        end: {
          line: 363,
          column: 7
        }
      },
      "78": {
        start: {
          line: 365,
          column: 4
        },
        end: {
          line: 365,
          column: 41
        }
      },
      "79": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 369,
          column: 7
        }
      },
      "80": {
        start: {
          line: 374,
          column: 0
        },
        end: {
          line: 416,
          column: 3
        }
      },
      "81": {
        start: {
          line: 375,
          column: 2
        },
        end: {
          line: 415,
          column: 3
        }
      },
      "82": {
        start: {
          line: 376,
          column: 28
        },
        end: {
          line: 376,
          column: 31
        }
      },
      "83": {
        start: {
          line: 377,
          column: 27
        },
        end: {
          line: 377,
          column: 35
        }
      },
      "84": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 380,
          column: 32
        }
      },
      "85": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 385,
          column: 5
        }
      },
      "86": {
        start: {
          line: 384,
          column: 6
        },
        end: {
          line: 384,
          column: 51
        }
      },
      "87": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 390,
          column: 5
        }
      },
      "88": {
        start: {
          line: 389,
          column: 6
        },
        end: {
          line: 389,
          column: 52
        }
      },
      "89": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 393,
          column: 35
        }
      },
      "90": {
        start: {
          line: 394,
          column: 4
        },
        end: {
          line: 394,
          column: 36
        }
      },
      "91": {
        start: {
          line: 395,
          column: 4
        },
        end: {
          line: 395,
          column: 33
        }
      },
      "92": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 404,
          column: 7
        }
      },
      "93": {
        start: {
          line: 406,
          column: 4
        },
        end: {
          line: 408,
          column: 7
        }
      },
      "94": {
        start: {
          line: 410,
          column: 4
        },
        end: {
          line: 410,
          column: 42
        }
      },
      "95": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 414,
          column: 7
        }
      },
      "96": {
        start: {
          line: 419,
          column: 0
        },
        end: {
          line: 484,
          column: 3
        }
      },
      "97": {
        start: {
          line: 420,
          column: 2
        },
        end: {
          line: 483,
          column: 3
        }
      },
      "98": {
        start: {
          line: 421,
          column: 23
        },
        end: {
          line: 421,
          column: 72
        }
      },
      "99": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 428,
          column: 5
        }
      },
      "100": {
        start: {
          line: 424,
          column: 6
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "101": {
        start: {
          line: 431,
          column: 20
        },
        end: {
          line: 431,
          column: 45
        }
      },
      "102": {
        start: {
          line: 432,
          column: 4
        },
        end: {
          line: 437,
          column: 5
        }
      },
      "103": {
        start: {
          line: 433,
          column: 6
        },
        end: {
          line: 436,
          column: 9
        }
      },
      "104": {
        start: {
          line: 440,
          column: 17
        },
        end: {
          line: 440,
          column: 48
        }
      },
      "105": {
        start: {
          line: 441,
          column: 4
        },
        end: {
          line: 446,
          column: 5
        }
      },
      "106": {
        start: {
          line: 442,
          column: 6
        },
        end: {
          line: 445,
          column: 9
        }
      },
      "107": {
        start: {
          line: 449,
          column: 19
        },
        end: {
          line: 449,
          column: 39
        }
      },
      "108": {
        start: {
          line: 452,
          column: 26
        },
        end: {
          line: 457,
          column: 5
        }
      },
      "109": {
        start: {
          line: 459,
          column: 4
        },
        end: {
          line: 459,
          column: 65
        }
      },
      "110": {
        start: {
          line: 460,
          column: 4
        },
        end: {
          line: 463,
          column: 7
        }
      },
      "111": {
        start: {
          line: 465,
          column: 4
        },
        end: {
          line: 468,
          column: 7
        }
      },
      "112": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 470,
          column: 49
        }
      },
      "113": {
        start: {
          line: 472,
          column: 4
        },
        end: {
          line: 477,
          column: 5
        }
      },
      "114": {
        start: {
          line: 473,
          column: 6
        },
        end: {
          line: 476,
          column: 9
        }
      },
      "115": {
        start: {
          line: 479,
          column: 4
        },
        end: {
          line: 482,
          column: 7
        }
      },
      "116": {
        start: {
          line: 487,
          column: 0
        },
        end: {
          line: 491,
          column: 3
        }
      },
      "117": {
        start: {
          line: 488,
          column: 2
        },
        end: {
          line: 490,
          column: 5
        }
      },
      "118": {
        start: {
          line: 494,
          column: 0
        },
        end: {
          line: 540,
          column: 3
        }
      },
      "119": {
        start: {
          line: 495,
          column: 2
        },
        end: {
          line: 539,
          column: 3
        }
      },
      "120": {
        start: {
          line: 496,
          column: 22
        },
        end: {
          line: 496,
          column: 30
        }
      },
      "121": {
        start: {
          line: 498,
          column: 4
        },
        end: {
          line: 503,
          column: 5
        }
      },
      "122": {
        start: {
          line: 499,
          column: 6
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "123": {
        start: {
          line: 505,
          column: 17
        },
        end: {
          line: 505,
          column: 63
        }
      },
      "124": {
        start: {
          line: 506,
          column: 4
        },
        end: {
          line: 511,
          column: 5
        }
      },
      "125": {
        start: {
          line: 507,
          column: 6
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "126": {
        start: {
          line: 514,
          column: 4
        },
        end: {
          line: 519,
          column: 7
        }
      },
      "127": {
        start: {
          line: 522,
          column: 4
        },
        end: {
          line: 527,
          column: 7
        }
      },
      "128": {
        start: {
          line: 529,
          column: 4
        },
        end: {
          line: 532,
          column: 7
        }
      },
      "129": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 534,
          column: 54
        }
      },
      "130": {
        start: {
          line: 535,
          column: 4
        },
        end: {
          line: 538,
          column: 7
        }
      },
      "131": {
        start: {
          line: 543,
          column: 0
        },
        end: {
          line: 582,
          column: 3
        }
      },
      "132": {
        start: {
          line: 544,
          column: 2
        },
        end: {
          line: 581,
          column: 3
        }
      },
      "133": {
        start: {
          line: 545,
          column: 22
        },
        end: {
          line: 545,
          column: 30
        }
      },
      "134": {
        start: {
          line: 547,
          column: 17
        },
        end: {
          line: 547,
          column: 57
        }
      },
      "135": {
        start: {
          line: 548,
          column: 4
        },
        end: {
          line: 553,
          column: 5
        }
      },
      "136": {
        start: {
          line: 550,
          column: 6
        },
        end: {
          line: 552,
          column: 9
        }
      },
      "137": {
        start: {
          line: 555,
          column: 4
        },
        end: {
          line: 560,
          column: 5
        }
      },
      "138": {
        start: {
          line: 556,
          column: 6
        },
        end: {
          line: 559,
          column: 9
        }
      },
      "139": {
        start: {
          line: 563,
          column: 30
        },
        end: {
          line: 563,
          column: 67
        }
      },
      "140": {
        start: {
          line: 564,
          column: 4
        },
        end: {
          line: 564,
          column: 22
        }
      },
      "141": {
        start: {
          line: 567,
          column: 4
        },
        end: {
          line: 570,
          column: 7
        }
      },
      "142": {
        start: {
          line: 572,
          column: 4
        },
        end: {
          line: 574,
          column: 7
        }
      },
      "143": {
        start: {
          line: 576,
          column: 4
        },
        end: {
          line: 576,
          column: 55
        }
      },
      "144": {
        start: {
          line: 577,
          column: 4
        },
        end: {
          line: 580,
          column: 7
        }
      },
      "145": {
        start: {
          line: 584,
          column: 0
        },
        end: {
          line: 584,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 100,
            column: 31
          },
          end: {
            line: 100,
            column: 32
          }
        },
        loc: {
          start: {
            line: 100,
            column: 51
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 100
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 113,
            column: 84
          },
          end: {
            line: 113,
            column: 85
          }
        },
        loc: {
          start: {
            line: 113,
            column: 104
          },
          end: {
            line: 203,
            column: 1
          }
        },
        line: 113
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 206,
            column: 74
          },
          end: {
            line: 206,
            column: 75
          }
        },
        loc: {
          start: {
            line: 206,
            column: 94
          },
          end: {
            line: 371,
            column: 1
          }
        },
        line: 206
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 374,
            column: 36
          },
          end: {
            line: 374,
            column: 37
          }
        },
        loc: {
          start: {
            line: 374,
            column: 56
          },
          end: {
            line: 416,
            column: 1
          }
        },
        line: 374
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 419,
            column: 24
          },
          end: {
            line: 419,
            column: 25
          }
        },
        loc: {
          start: {
            line: 419,
            column: 44
          },
          end: {
            line: 484,
            column: 1
          }
        },
        line: 419
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 487,
            column: 31
          },
          end: {
            line: 487,
            column: 32
          }
        },
        loc: {
          start: {
            line: 487,
            column: 51
          },
          end: {
            line: 491,
            column: 1
          }
        },
        line: 487
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 494,
            column: 29
          },
          end: {
            line: 494,
            column: 30
          }
        },
        loc: {
          start: {
            line: 494,
            column: 49
          },
          end: {
            line: 540,
            column: 1
          }
        },
        line: 494
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 543,
            column: 49
          },
          end: {
            line: 543,
            column: 50
          }
        },
        loc: {
          start: {
            line: 543,
            column: 69
          },
          end: {
            line: 582,
            column: 1
          }
        },
        line: 543
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 102,
            column: 2
          },
          end: {
            line: 108,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 2
          },
          end: {
            line: 108,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "1": {
        loc: {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 136
      },
      "2": {
        loc: {
          start: {
            line: 140,
            column: 15
          },
          end: {
            line: 140,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 46
          },
          end: {
            line: 140,
            column: 53
          }
        }, {
          start: {
            line: 140,
            column: 56
          },
          end: {
            line: 140,
            column: 66
          }
        }],
        line: 140
      },
      "3": {
        loc: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "4": {
        loc: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "5": {
        loc: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 236,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "6": {
        loc: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 256,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "7": {
        loc: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "8": {
        loc: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 309,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "9": {
        loc: {
          start: {
            line: 278,
            column: 6
          },
          end: {
            line: 288,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 6
          },
          end: {
            line: 288,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "10": {
        loc: {
          start: {
            line: 291,
            column: 25
          },
          end: {
            line: 291,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 291,
            column: 25
          },
          end: {
            line: 291,
            column: 54
          }
        }, {
          start: {
            line: 291,
            column: 58
          },
          end: {
            line: 291,
            column: 97
          }
        }],
        line: 291
      },
      "11": {
        loc: {
          start: {
            line: 292,
            column: 6
          },
          end: {
            line: 308,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 6
          },
          end: {
            line: 308,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "12": {
        loc: {
          start: {
            line: 336,
            column: 14
          },
          end: {
            line: 336,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 336,
            column: 27
          },
          end: {
            line: 336,
            column: 50
          }
        }, {
          start: {
            line: 336,
            column: 53
          },
          end: {
            line: 336,
            column: 72
          }
        }],
        line: 336
      },
      "13": {
        loc: {
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 383,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 383
      },
      "14": {
        loc: {
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 388,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 388
      },
      "15": {
        loc: {
          start: {
            line: 421,
            column: 23
          },
          end: {
            line: 421,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 421,
            column: 23
          },
          end: {
            line: 421,
            column: 44
          }
        }, {
          start: {
            line: 421,
            column: 48
          },
          end: {
            line: 421,
            column: 72
          }
        }],
        line: 421
      },
      "16": {
        loc: {
          start: {
            line: 423,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 423,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 423
      },
      "17": {
        loc: {
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 4
          },
          end: {
            line: 437,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      },
      "18": {
        loc: {
          start: {
            line: 441,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 4
          },
          end: {
            line: 446,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "19": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 441,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 441,
            column: 13
          }
        }, {
          start: {
            line: 441,
            column: 17
          },
          end: {
            line: 441,
            column: 41
          }
        }],
        line: 441
      },
      "20": {
        loc: {
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 477,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 472,
            column: 4
          },
          end: {
            line: 477,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 472
      },
      "21": {
        loc: {
          start: {
            line: 498,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 4
          },
          end: {
            line: 503,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "22": {
        loc: {
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 511,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 506,
            column: 4
          },
          end: {
            line: 511,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 506
      },
      "23": {
        loc: {
          start: {
            line: 548,
            column: 4
          },
          end: {
            line: 553,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 548,
            column: 4
          },
          end: {
            line: 553,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 548
      },
      "24": {
        loc: {
          start: {
            line: 555,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 555,
            column: 4
          },
          end: {
            line: 560,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 555
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "761f24bb13a156e6b26f69762f91e8b3e28fdf9d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1044trggvh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1044trggvh();
const express =
/* istanbul ignore next */
(cov_1044trggvh().s[0]++, require('express'));
const rateLimit =
/* istanbul ignore next */
(cov_1044trggvh().s[1]++, require('express-rate-limit'));
const {
  body,
  validationResult
} =
/* istanbul ignore next */
(cov_1044trggvh().s[2]++, require('express-validator'));
const passport =
/* istanbul ignore next */
(cov_1044trggvh().s[3]++, require('passport'));
const GoogleStrategy =
/* istanbul ignore next */
(cov_1044trggvh().s[4]++, require('passport-google-oauth20').Strategy);
const crypto =
/* istanbul ignore next */
(cov_1044trggvh().s[5]++, require('crypto'));
const speakeasy =
/* istanbul ignore next */
(cov_1044trggvh().s[6]++, require('speakeasy'));
const User =
/* istanbul ignore next */
(cov_1044trggvh().s[7]++, require('../models/User'));
const {
  generateTokens,
  verifyToken,
  blacklistToken,
  requireAuth,
  optionalAuth
} =
/* istanbul ignore next */
(cov_1044trggvh().s[8]++, require('../middleware/auth'));
const {
  cache,
  session
} =
/* istanbul ignore next */
(cov_1044trggvh().s[9]++, require('../config/redis'));
const emailService =
/* istanbul ignore next */
(cov_1044trggvh().s[10]++, require('../services/emailService'));
const smsService =
/* istanbul ignore next */
(cov_1044trggvh().s[11]++, require('../services/smsService'));
const auditLogger =
/* istanbul ignore next */
(cov_1044trggvh().s[12]++, require('../services/auditLogger'));
const router =
/* istanbul ignore next */
(cov_1044trggvh().s[13]++, express.Router());

// Rate limiting for auth endpoints
const authLimiter =
/* istanbul ignore next */
(cov_1044trggvh().s[14]++, rateLimit({
  windowMs: 15 * 60 * 1000,
  // 15 minutes
  max: 5,
  // limit each IP to 5 requests per windowMs
  message: {
    error: 'Too many authentication attempts, please try again later.',
    code: 'AUTH_RATE_LIMIT_EXCEEDED'
  },
  standardHeaders: true,
  legacyHeaders: false
}));
const registerLimiter =
/* istanbul ignore next */
(cov_1044trggvh().s[15]++, rateLimit({
  windowMs: 60 * 60 * 1000,
  // 1 hour
  max: 3,
  // limit each IP to 3 registration attempts per hour
  message: {
    error: 'Too many registration attempts, please try again later.',
    code: 'REGISTER_RATE_LIMIT_EXCEEDED'
  }
}));

// Validation middleware
const validateRegister =
/* istanbul ignore next */
(cov_1044trggvh().s[16]++, [body('email').isEmail().normalizeEmail().withMessage('Valid email is required'), body('username').isLength({
  min: 3,
  max: 30
}).isAlphanumeric().withMessage('Username must be 3-30 alphanumeric characters'), body('password').isLength({
  min: 8
}).matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/).withMessage('Password must be at least 8 characters with uppercase, lowercase, number and special character'), body('firstName').isLength({
  min: 1,
  max: 50
}).trim().withMessage('First name is required (1-50 characters)'), body('lastName').isLength({
  min: 1,
  max: 50
}).trim().withMessage('Last name is required (1-50 characters)'), body('country').optional().isLength({
  min: 2,
  max: 2
}).withMessage('Country code must be 2 characters'), body('phoneNumber').optional().matches(/^\+?[1-9]\d{1,14}$/).withMessage('Valid phone number is required'), body('dateOfBirth').optional().isISO8601().toDate().withMessage('Valid date of birth is required'), body('termsAccepted').equals('true').withMessage('Terms and conditions must be accepted')]);
const validateLogin =
/* istanbul ignore next */
(cov_1044trggvh().s[17]++, [body('identifier').notEmpty().withMessage('Email or username is required'), body('password').notEmpty().withMessage('Password is required'), body('twoFactorCode').optional().isLength({
  min: 6,
  max: 6
}).isNumeric().withMessage('2FA code must be 6 digits')]);
const validate2FA =
/* istanbul ignore next */
(cov_1044trggvh().s[18]++, [body('code').isLength({
  min: 6,
  max: 6
}).isNumeric().withMessage('2FA code must be 6 digits')]);

// Helper function to handle validation errors
/* istanbul ignore next */
cov_1044trggvh().s[19]++;
const handleValidationErrors = (req, res, next) => {
  /* istanbul ignore next */
  cov_1044trggvh().f[0]++;
  const errors =
  /* istanbul ignore next */
  (cov_1044trggvh().s[20]++, validationResult(req));
  /* istanbul ignore next */
  cov_1044trggvh().s[21]++;
  if (!errors.isEmpty()) {
    /* istanbul ignore next */
    cov_1044trggvh().b[0][0]++;
    cov_1044trggvh().s[22]++;
    return res.status(400).json({
      error: 'Validation failed',
      code: 'VALIDATION_ERROR',
      details: errors.array()
    });
  } else
  /* istanbul ignore next */
  {
    cov_1044trggvh().b[0][1]++;
  }
  cov_1044trggvh().s[23]++;
  next();
};

// Register endpoint
/* istanbul ignore next */
cov_1044trggvh().s[24]++;
router.post('/register', registerLimiter, validateRegister, handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_1044trggvh().f[1]++;
  cov_1044trggvh().s[25]++;
  try {
    const {
      email,
      username,
      password,
      firstName,
      lastName,
      phoneNumber,
      dateOfBirth,
      country
    } =
    /* istanbul ignore next */
    (cov_1044trggvh().s[26]++, req.body);

    // Check if user already exists
    const existingUser =
    /* istanbul ignore next */
    (cov_1044trggvh().s[27]++, await User.findOne({
      where: {
        [User.sequelize.Op.or]: [{
          email
        }, {
          username
        }]
      }
    }));
    /* istanbul ignore next */
    cov_1044trggvh().s[28]++;
    if (existingUser) {
      /* istanbul ignore next */
      cov_1044trggvh().b[1][0]++;
      cov_1044trggvh().s[29]++;
      return res.status(409).json({
        error: 'User already exists',
        code: 'USER_EXISTS',
        field: existingUser.email === email ?
        /* istanbul ignore next */
        (cov_1044trggvh().b[2][0]++, 'email') :
        /* istanbul ignore next */
        (cov_1044trggvh().b[2][1]++, 'username')
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[1][1]++;
    }

    // Create new user
    const user =
    /* istanbul ignore next */
    (cov_1044trggvh().s[30]++, await User.create({
      email,
      username,
      password,
      firstName,
      lastName,
      phoneNumber,
      dateOfBirth,
      country
    }));

    // Generate email verification token
    const verificationToken =
    /* istanbul ignore next */
    (cov_1044trggvh().s[31]++, user.generateEmailVerificationToken());
    /* istanbul ignore next */
    cov_1044trggvh().s[32]++;
    await user.save();

    // Send verification email
    /* istanbul ignore next */
    cov_1044trggvh().s[33]++;
    await emailService.sendVerificationEmail(user.email, verificationToken, {
      firstName: user.firstName,
      username: user.username
    });

    // Log registration
    /* istanbul ignore next */
    cov_1044trggvh().s[34]++;
    await auditLogger.log({
      action: 'USER_REGISTER',
      userId: user.id,
      ip: req.ip,
      userAgent: req.get('User-Agent'),
      details: {
        email: user.email,
        username: user.username
      }
    });
    /* istanbul ignore next */
    cov_1044trggvh().s[35]++;
    res.status(201).json({
      message: 'User registered successfully',
      user: {
        id: user.id,
        email: user.email,
        username: user.username,
        status: user.status
      },
      nextStep: 'EMAIL_VERIFICATION'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1044trggvh().s[36]++;
    console.error('Registration error:', error);
    /* istanbul ignore next */
    cov_1044trggvh().s[37]++;
    if (error.name === 'SequelizeUniqueConstraintError') {
      /* istanbul ignore next */
      cov_1044trggvh().b[3][0]++;
      cov_1044trggvh().s[38]++;
      return res.status(409).json({
        error: 'User already exists',
        code: 'USER_EXISTS'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[3][1]++;
    }
    cov_1044trggvh().s[39]++;
    res.status(500).json({
      error: 'Registration failed',
      code: 'REGISTRATION_ERROR'
    });
  }
});

// Login endpoint
/* istanbul ignore next */
cov_1044trggvh().s[40]++;
router.post('/login', authLimiter, validateLogin, handleValidationErrors, async (req, res) => {
  /* istanbul ignore next */
  cov_1044trggvh().f[2]++;
  cov_1044trggvh().s[41]++;
  try {
    const {
      identifier,
      password,
      twoFactorCode,
      rememberMe
    } =
    /* istanbul ignore next */
    (cov_1044trggvh().s[42]++, req.body);
    const ip =
    /* istanbul ignore next */
    (cov_1044trggvh().s[43]++, req.ip);
    const userAgent =
    /* istanbul ignore next */
    (cov_1044trggvh().s[44]++, req.get('User-Agent'));

    // Find user by email or username
    const user =
    /* istanbul ignore next */
    (cov_1044trggvh().s[45]++, await User.findByEmailOrUsername(identifier));
    /* istanbul ignore next */
    cov_1044trggvh().s[46]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1044trggvh().b[4][0]++;
      cov_1044trggvh().s[47]++;
      return res.status(401).json({
        error: 'Invalid credentials',
        code: 'INVALID_CREDENTIALS'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[4][1]++;
    }

    // Check if account is locked
    cov_1044trggvh().s[48]++;
    if (user.isLocked()) {
      /* istanbul ignore next */
      cov_1044trggvh().b[5][0]++;
      cov_1044trggvh().s[49]++;
      await auditLogger.log({
        action: 'LOGIN_ATTEMPT_LOCKED',
        userId: user.id,
        ip,
        userAgent,
        success: false
      });
      /* istanbul ignore next */
      cov_1044trggvh().s[50]++;
      return res.status(423).json({
        error: 'Account is temporarily locked due to too many failed login attempts',
        code: 'ACCOUNT_LOCKED',
        lockUntil: user.lockUntil
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[5][1]++;
    }

    // Verify password
    const isPasswordValid =
    /* istanbul ignore next */
    (cov_1044trggvh().s[51]++, await user.comparePassword(password));
    /* istanbul ignore next */
    cov_1044trggvh().s[52]++;
    if (!isPasswordValid) {
      /* istanbul ignore next */
      cov_1044trggvh().b[6][0]++;
      cov_1044trggvh().s[53]++;
      await user.incLoginAttempts();
      /* istanbul ignore next */
      cov_1044trggvh().s[54]++;
      await auditLogger.log({
        action: 'LOGIN_FAILED',
        userId: user.id,
        ip,
        userAgent,
        success: false,
        reason: 'INVALID_PASSWORD'
      });
      /* istanbul ignore next */
      cov_1044trggvh().s[55]++;
      return res.status(401).json({
        error: 'Invalid credentials',
        code: 'INVALID_CREDENTIALS'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[6][1]++;
    }

    // Check account status
    cov_1044trggvh().s[56]++;
    if (user.status !== 'active') {
      /* istanbul ignore next */
      cov_1044trggvh().b[7][0]++;
      cov_1044trggvh().s[57]++;
      await auditLogger.log({
        action: 'LOGIN_FAILED',
        userId: user.id,
        ip,
        userAgent,
        success: false,
        reason: 'ACCOUNT_INACTIVE'
      });
      /* istanbul ignore next */
      cov_1044trggvh().s[58]++;
      return res.status(401).json({
        error: 'Account is not active',
        code: 'ACCOUNT_INACTIVE',
        status: user.status
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[7][1]++;
    }

    // Check 2FA if enabled
    cov_1044trggvh().s[59]++;
    if (user.twoFactorEnabled) {
      /* istanbul ignore next */
      cov_1044trggvh().b[8][0]++;
      cov_1044trggvh().s[60]++;
      if (!twoFactorCode) {
        /* istanbul ignore next */
        cov_1044trggvh().b[9][0]++;
        cov_1044trggvh().s[61]++;
        return res.status(200).json({
          message: '2FA code required',
          code: 'TWO_FA_REQUIRED',
          tempToken: jwt.sign({
            userId: user.id,
            step: '2fa'
          }, process.env.JWT_SECRET, {
            expiresIn: '5m'
          })
        });
      } else
      /* istanbul ignore next */
      {
        cov_1044trggvh().b[9][1]++;
      }

      // Verify 2FA code
      const is2FAValid =
      /* istanbul ignore next */
      (cov_1044trggvh().s[62]++,
      /* istanbul ignore next */
      (cov_1044trggvh().b[10][0]++, user.verify2FA(twoFactorCode)) ||
      /* istanbul ignore next */
      (cov_1044trggvh().b[10][1]++, await user.useBackupCode(twoFactorCode)));
      /* istanbul ignore next */
      cov_1044trggvh().s[63]++;
      if (!is2FAValid) {
        /* istanbul ignore next */
        cov_1044trggvh().b[11][0]++;
        cov_1044trggvh().s[64]++;
        await user.incLoginAttempts();
        /* istanbul ignore next */
        cov_1044trggvh().s[65]++;
        await auditLogger.log({
          action: 'LOGIN_FAILED',
          userId: user.id,
          ip,
          userAgent,
          success: false,
          reason: 'INVALID_2FA'
        });
        /* istanbul ignore next */
        cov_1044trggvh().s[66]++;
        return res.status(401).json({
          error: 'Invalid 2FA code',
          code: 'INVALID_2FA_CODE'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1044trggvh().b[11][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[8][1]++;
    }

    // Reset login attempts on successful login
    cov_1044trggvh().s[67]++;
    await user.resetLoginAttempts();

    // Update last login info
    /* istanbul ignore next */
    cov_1044trggvh().s[68]++;
    await user.update({
      lastLoginAt: new Date(),
      lastLoginIp: ip
    });

    // Generate tokens
    const {
      accessToken,
      refreshToken
    } =
    /* istanbul ignore next */
    (cov_1044trggvh().s[69]++, generateTokens(user));

    // Create session
    const sessionId =
    /* istanbul ignore next */
    (cov_1044trggvh().s[70]++, crypto.randomUUID());
    /* istanbul ignore next */
    cov_1044trggvh().s[71]++;
    await session.create(sessionId, user.id, {
      ip,
      userAgent,
      twoFactorVerified: user.twoFactorEnabled
    });

    // Set cookies
    const cookieOptions =
    /* istanbul ignore next */
    (cov_1044trggvh().s[72]++, {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'strict',
      maxAge: rememberMe ?
      /* istanbul ignore next */
      (cov_1044trggvh().b[12][0]++, 7 * 24 * 60 * 60 * 1000) :
      /* istanbul ignore next */
      (cov_1044trggvh().b[12][1]++, 24 * 60 * 60 * 1000) // 7 days or 1 day
    });
    /* istanbul ignore next */
    cov_1044trggvh().s[73]++;
    res.cookie('accessToken', accessToken, cookieOptions);
    /* istanbul ignore next */
    cov_1044trggvh().s[74]++;
    res.cookie('refreshToken', refreshToken, {
      ...cookieOptions,
      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days
    });
    /* istanbul ignore next */
    cov_1044trggvh().s[75]++;
    res.cookie('sessionId', sessionId, cookieOptions);

    // Log successful login
    /* istanbul ignore next */
    cov_1044trggvh().s[76]++;
    await auditLogger.log({
      action: 'LOGIN_SUCCESS',
      userId: user.id,
      ip,
      userAgent,
      success: true
    });
    /* istanbul ignore next */
    cov_1044trggvh().s[77]++;
    res.json({
      message: 'Login successful',
      user: user.toJSON(),
      tokens: {
        accessToken,
        refreshToken
      },
      sessionId
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1044trggvh().s[78]++;
    console.error('Login error:', error);
    /* istanbul ignore next */
    cov_1044trggvh().s[79]++;
    res.status(500).json({
      error: 'Login failed',
      code: 'LOGIN_ERROR'
    });
  }
});

// Logout endpoint
/* istanbul ignore next */
cov_1044trggvh().s[80]++;
router.post('/logout', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_1044trggvh().f[3]++;
  cov_1044trggvh().s[81]++;
  try {
    const {
      token,
      user
    } =
    /* istanbul ignore next */
    (cov_1044trggvh().s[82]++, req);
    const {
      allDevices
    } =
    /* istanbul ignore next */
    (cov_1044trggvh().s[83]++, req.body);

    // Blacklist current token
    /* istanbul ignore next */
    cov_1044trggvh().s[84]++;
    await blacklistToken(token);

    // Destroy session
    /* istanbul ignore next */
    cov_1044trggvh().s[85]++;
    if (req.cookies.sessionId) {
      /* istanbul ignore next */
      cov_1044trggvh().b[13][0]++;
      cov_1044trggvh().s[86]++;
      await session.destroy(req.cookies.sessionId);
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[13][1]++;
    }

    // If logout from all devices, destroy all user sessions
    cov_1044trggvh().s[87]++;
    if (allDevices) {
      /* istanbul ignore next */
      cov_1044trggvh().b[14][0]++;
      cov_1044trggvh().s[88]++;
      await session.destroyAllUserSessions(user.id);
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[14][1]++;
    }

    // Clear cookies
    cov_1044trggvh().s[89]++;
    res.clearCookie('accessToken');
    /* istanbul ignore next */
    cov_1044trggvh().s[90]++;
    res.clearCookie('refreshToken');
    /* istanbul ignore next */
    cov_1044trggvh().s[91]++;
    res.clearCookie('sessionId');

    // Log logout
    /* istanbul ignore next */
    cov_1044trggvh().s[92]++;
    await auditLogger.log({
      action: 'LOGOUT',
      userId: user.id,
      ip: req.ip,
      userAgent: req.get('User-Agent'),
      details: {
        allDevices
      }
    });
    /* istanbul ignore next */
    cov_1044trggvh().s[93]++;
    res.json({
      message: 'Logout successful'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1044trggvh().s[94]++;
    console.error('Logout error:', error);
    /* istanbul ignore next */
    cov_1044trggvh().s[95]++;
    res.status(500).json({
      error: 'Logout failed',
      code: 'LOGOUT_ERROR'
    });
  }
});

// Refresh token endpoint
/* istanbul ignore next */
cov_1044trggvh().s[96]++;
router.post('/refresh', async (req, res) => {
  /* istanbul ignore next */
  cov_1044trggvh().f[4]++;
  cov_1044trggvh().s[97]++;
  try {
    let refreshToken =
    /* istanbul ignore next */
    (cov_1044trggvh().s[98]++,
    /* istanbul ignore next */
    (cov_1044trggvh().b[15][0]++, req.body.refreshToken) ||
    /* istanbul ignore next */
    (cov_1044trggvh().b[15][1]++, req.cookies.refreshToken));
    /* istanbul ignore next */
    cov_1044trggvh().s[99]++;
    if (!refreshToken) {
      /* istanbul ignore next */
      cov_1044trggvh().b[16][0]++;
      cov_1044trggvh().s[100]++;
      return res.status(401).json({
        error: 'Refresh token required',
        code: 'REFRESH_TOKEN_REQUIRED'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[16][1]++;
    }

    // Verify refresh token
    const decoded =
    /* istanbul ignore next */
    (cov_1044trggvh().s[101]++, verifyToken(refreshToken));
    /* istanbul ignore next */
    cov_1044trggvh().s[102]++;
    if (decoded.type !== 'refresh') {
      /* istanbul ignore next */
      cov_1044trggvh().b[17][0]++;
      cov_1044trggvh().s[103]++;
      return res.status(401).json({
        error: 'Invalid token type',
        code: 'INVALID_TOKEN_TYPE'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[17][1]++;
    }

    // Get user
    const user =
    /* istanbul ignore next */
    (cov_1044trggvh().s[104]++, await User.findByPk(decoded.id));
    /* istanbul ignore next */
    cov_1044trggvh().s[105]++;
    if (
    /* istanbul ignore next */
    (cov_1044trggvh().b[19][0]++, !user) ||
    /* istanbul ignore next */
    (cov_1044trggvh().b[19][1]++, user.status !== 'active')) {
      /* istanbul ignore next */
      cov_1044trggvh().b[18][0]++;
      cov_1044trggvh().s[106]++;
      return res.status(401).json({
        error: 'User not found or inactive',
        code: 'USER_NOT_FOUND'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[18][1]++;
    }

    // Generate new tokens
    const tokens =
    /* istanbul ignore next */
    (cov_1044trggvh().s[107]++, generateTokens(user));

    // Update cookies
    const cookieOptions =
    /* istanbul ignore next */
    (cov_1044trggvh().s[108]++, {
      httpOnly: true,
      secure: process.env.NODE_ENV === 'production',
      sameSite: 'strict',
      maxAge: 24 * 60 * 60 * 1000 // 1 day
    });
    /* istanbul ignore next */
    cov_1044trggvh().s[109]++;
    res.cookie('accessToken', tokens.accessToken, cookieOptions);
    /* istanbul ignore next */
    cov_1044trggvh().s[110]++;
    res.cookie('refreshToken', tokens.refreshToken, {
      ...cookieOptions,
      maxAge: 7 * 24 * 60 * 60 * 1000 // 7 days
    });
    /* istanbul ignore next */
    cov_1044trggvh().s[111]++;
    res.json({
      message: 'Token refreshed successfully',
      tokens
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1044trggvh().s[112]++;
    console.error('Token refresh error:', error);
    /* istanbul ignore next */
    cov_1044trggvh().s[113]++;
    if (error.name === 'TokenExpiredError') {
      /* istanbul ignore next */
      cov_1044trggvh().b[20][0]++;
      cov_1044trggvh().s[114]++;
      return res.status(401).json({
        error: 'Refresh token expired',
        code: 'REFRESH_TOKEN_EXPIRED'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[20][1]++;
    }
    cov_1044trggvh().s[115]++;
    res.status(401).json({
      error: 'Invalid refresh token',
      code: 'INVALID_REFRESH_TOKEN'
    });
  }
});

// Get current user
/* istanbul ignore next */
cov_1044trggvh().s[116]++;
router.get('/me', requireAuth, async (req, res) => {
  /* istanbul ignore next */
  cov_1044trggvh().f[5]++;
  cov_1044trggvh().s[117]++;
  res.json({
    user: req.user.toJSON()
  });
});

// Email verification
/* istanbul ignore next */
cov_1044trggvh().s[118]++;
router.post('/verify-email', async (req, res) => {
  /* istanbul ignore next */
  cov_1044trggvh().f[6]++;
  cov_1044trggvh().s[119]++;
  try {
    const {
      token
    } =
    /* istanbul ignore next */
    (cov_1044trggvh().s[120]++, req.body);
    /* istanbul ignore next */
    cov_1044trggvh().s[121]++;
    if (!token) {
      /* istanbul ignore next */
      cov_1044trggvh().b[21][0]++;
      cov_1044trggvh().s[122]++;
      return res.status(400).json({
        error: 'Verification token required',
        code: 'TOKEN_REQUIRED'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[21][1]++;
    }
    const user =
    /* istanbul ignore next */
    (cov_1044trggvh().s[123]++, await User.findByEmailVerificationToken(token));
    /* istanbul ignore next */
    cov_1044trggvh().s[124]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1044trggvh().b[22][0]++;
      cov_1044trggvh().s[125]++;
      return res.status(400).json({
        error: 'Invalid or expired verification token',
        code: 'INVALID_TOKEN'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[22][1]++;
    }

    // Update user
    cov_1044trggvh().s[126]++;
    await user.update({
      emailVerified: true,
      status: 'active',
      emailVerificationToken: null,
      emailVerificationExpires: null
    });

    // Log email verification
    /* istanbul ignore next */
    cov_1044trggvh().s[127]++;
    await auditLogger.log({
      action: 'EMAIL_VERIFIED',
      userId: user.id,
      ip: req.ip,
      userAgent: req.get('User-Agent')
    });
    /* istanbul ignore next */
    cov_1044trggvh().s[128]++;
    res.json({
      message: 'Email verified successfully',
      user: user.toJSON()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1044trggvh().s[129]++;
    console.error('Email verification error:', error);
    /* istanbul ignore next */
    cov_1044trggvh().s[130]++;
    res.status(500).json({
      error: 'Email verification failed',
      code: 'VERIFICATION_ERROR'
    });
  }
});

// Resend verification email
/* istanbul ignore next */
cov_1044trggvh().s[131]++;
router.post('/resend-verification', authLimiter, async (req, res) => {
  /* istanbul ignore next */
  cov_1044trggvh().f[7]++;
  cov_1044trggvh().s[132]++;
  try {
    const {
      email
    } =
    /* istanbul ignore next */
    (cov_1044trggvh().s[133]++, req.body);
    const user =
    /* istanbul ignore next */
    (cov_1044trggvh().s[134]++, await User.findOne({
      where: {
        email
      }
    }));
    /* istanbul ignore next */
    cov_1044trggvh().s[135]++;
    if (!user) {
      /* istanbul ignore next */
      cov_1044trggvh().b[23][0]++;
      cov_1044trggvh().s[136]++;
      // Don't reveal if email exists
      return res.json({
        message: 'If the email exists, a verification email has been sent'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[23][1]++;
    }
    cov_1044trggvh().s[137]++;
    if (user.emailVerified) {
      /* istanbul ignore next */
      cov_1044trggvh().b[24][0]++;
      cov_1044trggvh().s[138]++;
      return res.status(400).json({
        error: 'Email is already verified',
        code: 'EMAIL_ALREADY_VERIFIED'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1044trggvh().b[24][1]++;
    }

    // Generate new verification token
    const verificationToken =
    /* istanbul ignore next */
    (cov_1044trggvh().s[139]++, user.generateEmailVerificationToken());
    /* istanbul ignore next */
    cov_1044trggvh().s[140]++;
    await user.save();

    // Send verification email
    /* istanbul ignore next */
    cov_1044trggvh().s[141]++;
    await emailService.sendVerificationEmail(user.email, verificationToken, {
      firstName: user.firstName,
      username: user.username
    });
    /* istanbul ignore next */
    cov_1044trggvh().s[142]++;
    res.json({
      message: 'Verification email sent'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1044trggvh().s[143]++;
    console.error('Resend verification error:', error);
    /* istanbul ignore next */
    cov_1044trggvh().s[144]++;
    res.status(500).json({
      error: 'Failed to send verification email',
      code: 'VERIFICATION_SEND_ERROR'
    });
  }
});
/* istanbul ignore next */
cov_1044trggvh().s[145]++;
module.exports = router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,