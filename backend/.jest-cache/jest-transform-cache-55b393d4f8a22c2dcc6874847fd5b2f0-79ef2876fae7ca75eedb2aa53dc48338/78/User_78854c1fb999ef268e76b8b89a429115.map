{"version":3,"names":["DataTypes","require","bcrypt","crypto","speakeasy","QRCode","sequelize","User","define","id","type","UUID","defaultValue","UUIDV4","primaryKey","email","STRING","allowNull","unique","validate","isEmail","username","len","isAlphanumeric","password","firstName","lastName","phoneNumber","is","dateOfBirth","DATEONLY","country","role","ENUM","status","emailVerified","BOOLEAN","phoneVerified","kycLevel","INTEGER","min","max","twoFactorEnabled","twoFactorSecret","backupCodes","JSON","lastLoginAt","DATE","lastLoginIp","INET","loginAttempts","lockUntil","passwordResetToken","passwordResetExpires","emailVerificationToken","emailVerificationExpires","preferences","language","timezone","currency","notifications","sms","push","trading","security","marketing","metadata","tradingLevel","riskTolerance","maxDailyTradingVolume","DECIMAL","maxPositionSize","marginTradingEnabled","apiTradingEnabled","referralCode","referredBy","references","model","key","totalTradingVolume","totalTrades","lastTradeAt","vipLevel","makerFeeRate","takerFeeRate","tableName","timestamps","paranoid","indexes","fields","prototype","comparePassword","candidatePassword","compare","isLocked","Date","now","incLoginAttempts","update","updates","resetLoginAttempts","generatePasswordResetToken","token","randomBytes","toString","createHash","digest","generateEmailVerificationToken","setup2FA","secret","generateSecret","name","issuer","length","base32","verify2FA","totp","verify","encoding","window","generateBackupCodes","codes","i","toUpperCase","useBackupCode","code","includes","updatedCodes","filter","c","generate2FAQRCode","Error","otpauthUrl","otpauthURL","label","toDataURL","toJSON","values","Object","assign","get","findByEmailOrUsername","identifier","findOne","where","Sequelize","Op","or","findByPasswordResetToken","hashedToken","gt","findByEmailVerificationToken","beforeCreate","user","salt","genSalt","hash","beforeUpdate","changed","module","exports"],"sources":["User.js"],"sourcesContent":["const { DataTypes } = require('sequelize');\nconst bcrypt = require('bcryptjs');\nconst crypto = require('crypto');\nconst speakeasy = require('speakeasy');\nconst QRCode = require('qrcode');\nconst { sequelize } = require('../config/database');\n\n// User model definition\nconst User = sequelize.define('User', {\n  id: {\n    type: DataTypes.UUID,\n    defaultValue: DataTypes.UUIDV4,\n    primaryKey: true\n  },\n  email: {\n    type: DataTypes.STRING,\n    allowNull: false,\n    unique: true,\n    validate: {\n      isEmail: true\n    }\n  },\n  username: {\n    type: DataTypes.STRING,\n    allowNull: false,\n    unique: true,\n    validate: {\n      len: [3, 30],\n      isAlphanumeric: true\n    }\n  },\n  password: {\n    type: DataTypes.STRING,\n    allowNull: false,\n    validate: {\n      len: [8, 128]\n    }\n  },\n  firstName: {\n    type: DataTypes.STRING,\n    allowNull: false,\n    validate: {\n      len: [1, 50]\n    }\n  },\n  lastName: {\n    type: DataTypes.STRING,\n    allowNull: false,\n    validate: {\n      len: [1, 50]\n    }\n  },\n  phoneNumber: {\n    type: DataTypes.STRING,\n    allowNull: true,\n    validate: {\n      is: /^\\+?[1-9]\\d{1,14}$/\n    }\n  },\n  dateOfBirth: {\n    type: DataTypes.DATEONLY,\n    allowNull: true\n  },\n  country: {\n    type: DataTypes.STRING(2),\n    allowNull: true,\n    validate: {\n      len: [2, 2]\n    }\n  },\n  role: {\n    type: DataTypes.ENUM('user', 'admin', 'moderator', 'support'),\n    defaultValue: 'user'\n  },\n  status: {\n    type: DataTypes.ENUM('pending', 'active', 'suspended', 'banned'),\n    defaultValue: 'pending'\n  },\n  emailVerified: {\n    type: DataTypes.BOOLEAN,\n    defaultValue: false\n  },\n  phoneVerified: {\n    type: DataTypes.BOOLEAN,\n    defaultValue: false\n  },\n  kycLevel: {\n    type: DataTypes.INTEGER,\n    defaultValue: 0,\n    validate: {\n      min: 0,\n      max: 3\n    }\n  },\n  twoFactorEnabled: {\n    type: DataTypes.BOOLEAN,\n    defaultValue: false\n  },\n  twoFactorSecret: {\n    type: DataTypes.STRING,\n    allowNull: true\n  },\n  backupCodes: {\n    type: DataTypes.JSON,\n    allowNull: true\n  },\n  lastLoginAt: {\n    type: DataTypes.DATE,\n    allowNull: true\n  },\n  lastLoginIp: {\n    type: DataTypes.INET,\n    allowNull: true\n  },\n  loginAttempts: {\n    type: DataTypes.INTEGER,\n    defaultValue: 0\n  },\n  lockUntil: {\n    type: DataTypes.DATE,\n    allowNull: true\n  },\n  passwordResetToken: {\n    type: DataTypes.STRING,\n    allowNull: true\n  },\n  passwordResetExpires: {\n    type: DataTypes.DATE,\n    allowNull: true\n  },\n  emailVerificationToken: {\n    type: DataTypes.STRING,\n    allowNull: true\n  },\n  emailVerificationExpires: {\n    type: DataTypes.DATE,\n    allowNull: true\n  },\n  preferences: {\n    type: DataTypes.JSON,\n    defaultValue: {\n      language: 'en',\n      timezone: 'UTC',\n      currency: 'USD',\n      notifications: {\n        email: true,\n        sms: false,\n        push: true,\n        trading: true,\n        security: true,\n        marketing: false\n      }\n    }\n  },\n  metadata: {\n    type: DataTypes.JSON,\n    defaultValue: {}\n  },\n  // Enhanced fields\n  tradingLevel: {\n    type: DataTypes.ENUM('beginner', 'intermediate', 'advanced', 'professional'),\n    defaultValue: 'beginner'\n  },\n  riskTolerance: {\n    type: DataTypes.ENUM('low', 'medium', 'high'),\n    defaultValue: 'medium'\n  },\n  maxDailyTradingVolume: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: true\n  },\n  maxPositionSize: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: true\n  },\n  marginTradingEnabled: {\n    type: DataTypes.BOOLEAN,\n    defaultValue: false\n  },\n  apiTradingEnabled: {\n    type: DataTypes.BOOLEAN,\n    defaultValue: false\n  },\n  referralCode: {\n    type: DataTypes.STRING(20),\n    allowNull: true,\n    unique: true\n  },\n  referredBy: {\n    type: DataTypes.UUID,\n    allowNull: true,\n    references: {\n      model: 'users',\n      key: 'id'\n    }\n  },\n  totalTradingVolume: {\n    type: DataTypes.DECIMAL(30, 8),\n    defaultValue: 0\n  },\n  totalTrades: {\n    type: DataTypes.INTEGER,\n    defaultValue: 0\n  },\n  lastTradeAt: {\n    type: DataTypes.DATE,\n    allowNull: true\n  },\n  vipLevel: {\n    type: DataTypes.INTEGER,\n    defaultValue: 0,\n    validate: {\n      min: 0,\n      max: 10\n    }\n  },\n  makerFeeRate: {\n    type: DataTypes.DECIMAL(5, 4),\n    defaultValue: 0.001\n  },\n  takerFeeRate: {\n    type: DataTypes.DECIMAL(5, 4),\n    defaultValue: 0.001\n  }\n}, {\n  tableName: 'users',\n  timestamps: true,\n  paranoid: true, // Soft delete\n  indexes: [\n    {\n      unique: true,\n      fields: ['email']\n    },\n    {\n      unique: true,\n      fields: ['username']\n    },\n    {\n      fields: ['status']\n    },\n    {\n      fields: ['role']\n    },\n    {\n      fields: ['kycLevel']\n    },\n    {\n      fields: ['createdAt']\n    }\n  ]\n});\n\n// Instance methods\nUser.prototype.comparePassword = async function(candidatePassword) {\n  return bcrypt.compare(candidatePassword, this.password);\n};\n\nUser.prototype.isLocked = function() {\n  return !!(this.lockUntil && this.lockUntil > Date.now());\n};\n\nUser.prototype.incLoginAttempts = async function() {\n  // If we have a previous lock that has expired, restart at 1\n  if (this.lockUntil && this.lockUntil < Date.now()) {\n    return this.update({\n      loginAttempts: 1,\n      lockUntil: null\n    });\n  }\n  \n  const updates = { loginAttempts: this.loginAttempts + 1 };\n  \n  // Lock account after 5 failed attempts for 2 hours\n  if (this.loginAttempts + 1 >= 5 && !this.isLocked()) {\n    updates.lockUntil = Date.now() + 2 * 60 * 60 * 1000; // 2 hours\n  }\n  \n  return this.update(updates);\n};\n\nUser.prototype.resetLoginAttempts = async function() {\n  return this.update({\n    loginAttempts: 0,\n    lockUntil: null\n  });\n};\n\nUser.prototype.generatePasswordResetToken = function() {\n  const token = crypto.randomBytes(32).toString('hex');\n  this.passwordResetToken = crypto.createHash('sha256').update(token).digest('hex');\n  this.passwordResetExpires = Date.now() + 10 * 60 * 1000; // 10 minutes\n  return token;\n};\n\nUser.prototype.generateEmailVerificationToken = function() {\n  const token = crypto.randomBytes(32).toString('hex');\n  this.emailVerificationToken = crypto.createHash('sha256').update(token).digest('hex');\n  this.emailVerificationExpires = Date.now() + 24 * 60 * 60 * 1000; // 24 hours\n  return token;\n};\n\nUser.prototype.setup2FA = function() {\n  const secret = speakeasy.generateSecret({\n    name: `CEX Exchange (${this.email})`,\n    issuer: 'CEX Exchange',\n    length: 32\n  });\n  \n  this.twoFactorSecret = secret.base32;\n  return secret;\n};\n\nUser.prototype.verify2FA = function(token) {\n  if (!this.twoFactorSecret) {\n    return false;\n  }\n  \n  return speakeasy.totp.verify({\n    secret: this.twoFactorSecret,\n    encoding: 'base32',\n    token: token,\n    window: 2 // Allow 2 time steps (60 seconds) of variance\n  });\n};\n\nUser.prototype.generateBackupCodes = function() {\n  const codes = [];\n  for (let i = 0; i < 10; i++) {\n    codes.push(crypto.randomBytes(4).toString('hex').toUpperCase());\n  }\n  this.backupCodes = codes;\n  return codes;\n};\n\nUser.prototype.useBackupCode = async function(code) {\n  if (!this.backupCodes || !this.backupCodes.includes(code.toUpperCase())) {\n    return false;\n  }\n  \n  const updatedCodes = this.backupCodes.filter(c => c !== code.toUpperCase());\n  await this.update({ backupCodes: updatedCodes });\n  return true;\n};\n\nUser.prototype.generate2FAQRCode = async function() {\n  if (!this.twoFactorSecret) {\n    throw new Error('2FA secret not generated');\n  }\n  \n  const otpauthUrl = speakeasy.otpauthURL({\n    secret: this.twoFactorSecret,\n    label: this.email,\n    issuer: 'CEX Exchange',\n    encoding: 'base32'\n  });\n  \n  return QRCode.toDataURL(otpauthUrl);\n};\n\nUser.prototype.toJSON = function() {\n  const values = Object.assign({}, this.get());\n  \n  // Remove sensitive fields\n  delete values.password;\n  delete values.twoFactorSecret;\n  delete values.backupCodes;\n  delete values.passwordResetToken;\n  delete values.emailVerificationToken;\n  \n  return values;\n};\n\n// Static methods\nUser.findByEmailOrUsername = function(identifier) {\n  return this.findOne({\n    where: {\n      [sequelize.Sequelize.Op.or]: [\n        { email: identifier },\n        { username: identifier }\n      ]\n    }\n  });\n};\n\nUser.findByPasswordResetToken = function(token) {\n  const hashedToken = crypto.createHash('sha256').update(token).digest('hex');\n  return this.findOne({\n    where: {\n      passwordResetToken: hashedToken,\n      passwordResetExpires: {\n        [sequelize.Sequelize.Op.gt]: Date.now()\n      }\n    }\n  });\n};\n\nUser.findByEmailVerificationToken = function(token) {\n  const hashedToken = crypto.createHash('sha256').update(token).digest('hex');\n  return this.findOne({\n    where: {\n      emailVerificationToken: hashedToken,\n      emailVerificationExpires: {\n        [sequelize.Sequelize.Op.gt]: Date.now()\n      }\n    }\n  });\n};\n\n// Hooks\nUser.beforeCreate(async (user) => {\n  if (user.password) {\n    const salt = await bcrypt.genSalt(12);\n    user.password = await bcrypt.hash(user.password, salt);\n  }\n});\n\nUser.beforeUpdate(async (user) => {\n  if (user.changed('password')) {\n    const salt = await bcrypt.genSalt(12);\n    user.password = await bcrypt.hash(user.password, salt);\n  }\n});\n\nmodule.exports = User;"],"mappings":"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","ignoreList":[]}