{"version":3,"names":["cov_1scmijhg5l","actualCoverage","DataTypes","s","require","sequelize","User","SuspiciousActivity","define","id","type","UUID","defaultValue","UUIDV4","primaryKey","user_id","allowNull","references","model","key","comment","activity_type","ENUM","severity","confidence_score","DECIMAL","risk_score","INTEGER","title","STRING","description","TEXT","ip_address","user_agent","device_fingerprint","session_id","country_code","country_name","city","timezone","amount","currency","transaction_id","order_id","pattern_indicators","JSONB","anomaly_details","baseline_comparison","detection_method","detection_rule_id","model_version","status","priority","assigned_to","investigation_notes","resolution","resolution_action","detected_at","DATE","NOW","occurred_at","investigated_at","resolved_at","requires_sar","BOOLEAN","sar_filed","sar_reference","regulatory_reported","related_activities","ARRAY","parent_case_id","tags","metadata","created_at","updated_at","tableName","timestamps","createdAt","updatedAt","indexes","fields","validate","confidenceScoreValid","f","score","parseFloat","b","Error","riskScoreValid","resolutionConsistency","resolvedStatuses","includes","belongsTo","foreignKey","as","prototype","isHighRisk","requiresImmediateAction","isResolved","getAgeInHours","now","Date","detected","Math","floor","assignTo","investigatorId","transaction","save","addNote","note","timestamp","toISOString","newNote","resolve","action","markAsFalsePositive","reason","escalate","linkRelatedActivity","relatedActivityId","push","createActivity","activityData","priorityMap","create","getUnassignedActivities","where","findAll","include","order","getHighRiskActivities","riskThreshold","Op","gte","notIn","getActivitiesByUser","userId","includeResolved","getActivitiesByType","activityType","days","startDate","getOverdueActivities","hoursThreshold","thresholdDate","lte","getStatistics","stats","attributes","fn","col","literal","raw","detectPatterns","activities","patterns","frequency","length","avg_risk_score","reduce","sum","a","escalating_risk","time_clustering","recent","slice","every","activity","index","timeGaps","i","gap","some","module","exports"],"sources":["SuspiciousActivity.js"],"sourcesContent":["const { DataTypes } = require('sequelize');\nconst { sequelize } = require('../config/database');\nconst User = require('./User');\n\n/**\n * Model SuspiciousActivity untuk melacak dan menganalisis aktivitas mencurigakan\n * Digunakan untuk fraud detection, AML compliance, dan security monitoring\n */\nconst SuspiciousActivity = sequelize.define('SuspiciousActivity', {\n  id: {\n    type: DataTypes.UUID,\n    defaultValue: DataTypes.UUIDV4,\n    primaryKey: true\n  },\n  \n  // Foreign key\n  user_id: {\n    type: DataTypes.UUID,\n    allowNull: true,\n    references: {\n      model: 'users',\n      key: 'id'\n    },\n    comment: 'User associated with the activity (null for anonymous)'\n  },\n  \n  // Activity identification\n  activity_type: {\n    type: DataTypes.ENUM(\n      'login_anomaly',\n      'trading_pattern',\n      'withdrawal_pattern',\n      'deposit_pattern',\n      'ip_anomaly',\n      'device_anomaly',\n      'velocity_check',\n      'amount_anomaly',\n      'time_anomaly',\n      'geographic_anomaly',\n      'api_abuse',\n      'account_takeover',\n      'money_laundering',\n      'market_manipulation',\n      'wash_trading',\n      'pump_dump',\n      'insider_trading',\n      'kyc_fraud',\n      'identity_theft',\n      'multiple_accounts',\n      'bot_activity',\n      'ddos_attempt',\n      'brute_force',\n      'social_engineering',\n      'phishing_attempt',\n      'other'\n    ),\n    allowNull: false,\n    comment: 'Type of suspicious activity detected'\n  },\n  \n  severity: {\n    type: DataTypes.ENUM('low', 'medium', 'high', 'critical'),\n    allowNull: false,\n    defaultValue: 'medium',\n    comment: 'Severity level of the suspicious activity'\n  },\n  \n  confidence_score: {\n    type: DataTypes.DECIMAL(5, 4),\n    allowNull: false,\n    comment: 'Confidence score (0.0000 to 1.0000)'\n  },\n  \n  risk_score: {\n    type: DataTypes.INTEGER,\n    allowNull: false,\n    comment: 'Risk score (0-100, higher = more risky)'\n  },\n  \n  // Activity details\n  title: {\n    type: DataTypes.STRING(200),\n    allowNull: false,\n    comment: 'Brief title describing the activity'\n  },\n  \n  description: {\n    type: DataTypes.TEXT,\n    allowNull: false,\n    comment: 'Detailed description of the suspicious activity'\n  },\n  \n  // Context information\n  ip_address: {\n    type: DataTypes.STRING(45),\n    allowNull: true,\n    comment: 'IP address associated with the activity'\n  },\n  \n  user_agent: {\n    type: DataTypes.TEXT,\n    allowNull: true,\n    comment: 'User agent string'\n  },\n  \n  device_fingerprint: {\n    type: DataTypes.STRING(255),\n    allowNull: true,\n    comment: 'Device fingerprint hash'\n  },\n  \n  session_id: {\n    type: DataTypes.STRING(255),\n    allowNull: true,\n    comment: 'Session ID when activity occurred'\n  },\n  \n  // Geographic information\n  country_code: {\n    type: DataTypes.STRING(2),\n    allowNull: true,\n    comment: 'ISO country code'\n  },\n  \n  country_name: {\n    type: DataTypes.STRING(100),\n    allowNull: true,\n    comment: 'Country name'\n  },\n  \n  city: {\n    type: DataTypes.STRING(100),\n    allowNull: true,\n    comment: 'City name'\n  },\n  \n  timezone: {\n    type: DataTypes.STRING(50),\n    allowNull: true,\n    comment: 'Timezone'\n  },\n  \n  // Financial details\n  amount: {\n    type: DataTypes.DECIMAL(36, 18),\n    allowNull: true,\n    comment: 'Amount involved in the activity'\n  },\n  \n  currency: {\n    type: DataTypes.STRING(10),\n    allowNull: true,\n    comment: 'Currency of the amount'\n  },\n  \n  transaction_id: {\n    type: DataTypes.UUID,\n    allowNull: true,\n    comment: 'Related transaction ID'\n  },\n  \n  order_id: {\n    type: DataTypes.UUID,\n    allowNull: true,\n    comment: 'Related order ID'\n  },\n  \n  // Pattern analysis\n  pattern_indicators: {\n    type: DataTypes.JSONB,\n    allowNull: true,\n    comment: 'Specific pattern indicators that triggered the alert'\n  },\n  \n  anomaly_details: {\n    type: DataTypes.JSONB,\n    allowNull: true,\n    comment: 'Details about the anomaly detected'\n  },\n  \n  baseline_comparison: {\n    type: DataTypes.JSONB,\n    allowNull: true,\n    comment: 'Comparison with user baseline behavior'\n  },\n  \n  // Detection information\n  detection_method: {\n    type: DataTypes.ENUM('rule_based', 'ml_model', 'statistical', 'manual', 'external_feed'),\n    allowNull: false,\n    comment: 'Method used to detect the activity'\n  },\n  \n  detection_rule_id: {\n    type: DataTypes.STRING(100),\n    allowNull: true,\n    comment: 'ID of the rule that triggered the detection'\n  },\n  \n  model_version: {\n    type: DataTypes.STRING(50),\n    allowNull: true,\n    comment: 'Version of ML model used for detection'\n  },\n  \n  // Status and workflow\n  status: {\n    type: DataTypes.ENUM('new', 'investigating', 'escalated', 'resolved', 'false_positive', 'confirmed'),\n    allowNull: false,\n    defaultValue: 'new',\n    comment: 'Current status of the investigation'\n  },\n  \n  priority: {\n    type: DataTypes.ENUM('low', 'normal', 'high', 'urgent'),\n    allowNull: false,\n    defaultValue: 'normal',\n    comment: 'Investigation priority'\n  },\n  \n  // Investigation details\n  assigned_to: {\n    type: DataTypes.UUID,\n    allowNull: true,\n    comment: 'User ID of assigned investigator'\n  },\n  \n  investigation_notes: {\n    type: DataTypes.TEXT,\n    allowNull: true,\n    comment: 'Investigation notes and findings'\n  },\n  \n  resolution: {\n    type: DataTypes.TEXT,\n    allowNull: true,\n    comment: 'Resolution details'\n  },\n  \n  resolution_action: {\n    type: DataTypes.ENUM(\n      'no_action',\n      'warning_issued',\n      'account_restricted',\n      'account_suspended',\n      'account_closed',\n      'transaction_blocked',\n      'withdrawal_blocked',\n      'trading_restricted',\n      'kyc_required',\n      'manual_review',\n      'reported_authorities',\n      'other'\n    ),\n    allowNull: true,\n    comment: 'Action taken as resolution'\n  },\n  \n  // Timing\n  detected_at: {\n    type: DataTypes.DATE,\n    allowNull: false,\n    defaultValue: DataTypes.NOW,\n    comment: 'When the activity was detected'\n  },\n  \n  occurred_at: {\n    type: DataTypes.DATE,\n    allowNull: true,\n    comment: 'When the suspicious activity actually occurred'\n  },\n  \n  investigated_at: {\n    type: DataTypes.DATE,\n    allowNull: true,\n    comment: 'When investigation started'\n  },\n  \n  resolved_at: {\n    type: DataTypes.DATE,\n    allowNull: true,\n    comment: 'When the case was resolved'\n  },\n  \n  // Compliance and reporting\n  requires_sar: {\n    type: DataTypes.BOOLEAN,\n    allowNull: false,\n    defaultValue: false,\n    comment: 'Whether this requires a Suspicious Activity Report'\n  },\n  \n  sar_filed: {\n    type: DataTypes.BOOLEAN,\n    allowNull: false,\n    defaultValue: false,\n    comment: 'Whether SAR has been filed'\n  },\n  \n  sar_reference: {\n    type: DataTypes.STRING(100),\n    allowNull: true,\n    comment: 'SAR reference number'\n  },\n  \n  regulatory_reported: {\n    type: DataTypes.BOOLEAN,\n    allowNull: false,\n    defaultValue: false,\n    comment: 'Whether reported to regulatory authorities'\n  },\n  \n  // Related activities\n  related_activities: {\n    type: DataTypes.ARRAY(DataTypes.UUID),\n    allowNull: true,\n    comment: 'IDs of related suspicious activities'\n  },\n  \n  parent_case_id: {\n    type: DataTypes.UUID,\n    allowNull: true,\n    comment: 'Parent case ID if this is part of a larger investigation'\n  },\n  \n  // Metadata\n  tags: {\n    type: DataTypes.ARRAY(DataTypes.STRING),\n    allowNull: true,\n    comment: 'Tags for categorization and search'\n  },\n  \n  metadata: {\n    type: DataTypes.JSONB,\n    allowNull: true,\n    comment: 'Additional metadata and context'\n  },\n  \n  // Timestamps\n  created_at: {\n    type: DataTypes.DATE,\n    defaultValue: DataTypes.NOW,\n    allowNull: false\n  },\n  \n  updated_at: {\n    type: DataTypes.DATE,\n    defaultValue: DataTypes.NOW,\n    allowNull: false\n  }\n}, {\n  tableName: 'suspicious_activities',\n  timestamps: true,\n  createdAt: 'created_at',\n  updatedAt: 'updated_at',\n  indexes: [\n    {\n      fields: ['user_id', 'activity_type']\n    },\n    {\n      fields: ['activity_type', 'severity']\n    },\n    {\n      fields: ['status', 'priority']\n    },\n    {\n      fields: ['risk_score']\n    },\n    {\n      fields: ['confidence_score']\n    },\n    {\n      fields: ['detected_at']\n    },\n    {\n      fields: ['occurred_at']\n    },\n    {\n      fields: ['ip_address']\n    },\n    {\n      fields: ['country_code']\n    },\n    {\n      fields: ['assigned_to']\n    },\n    {\n      fields: ['requires_sar', 'sar_filed']\n    },\n    {\n      fields: ['parent_case_id']\n    },\n    {\n      fields: ['transaction_id']\n    },\n    {\n      fields: ['order_id']\n    },\n    {\n      fields: ['detection_method']\n    }\n  ],\n  validate: {\n    confidenceScoreValid() {\n      const score = parseFloat(this.confidence_score);\n      if (score < 0 || score > 1) {\n        throw new Error('Confidence score must be between 0 and 1');\n      }\n    },\n    riskScoreValid() {\n      if (this.risk_score < 0 || this.risk_score > 100) {\n        throw new Error('Risk score must be between 0 and 100');\n      }\n    },\n    resolutionConsistency() {\n      const resolvedStatuses = ['resolved', 'false_positive', 'confirmed'];\n      if (resolvedStatuses.includes(this.status)) {\n        if (!this.resolved_at) {\n          throw new Error('Resolved activities must have resolved_at timestamp');\n        }\n      }\n    }\n  }\n});\n\n// Associations\nSuspiciousActivity.belongsTo(User, { foreignKey: 'user_id', as: 'user' });\nSuspiciousActivity.belongsTo(User, { foreignKey: 'assigned_to', as: 'investigator' });\n// Associations are defined in models/index.js\n\n// Instance methods\nSuspiciousActivity.prototype.isHighRisk = function() {\n  return this.severity === 'critical' || this.risk_score >= 80;\n};\n\nSuspiciousActivity.prototype.requiresImmediateAction = function() {\n  return this.severity === 'critical' && this.priority === 'urgent';\n};\n\nSuspiciousActivity.prototype.isResolved = function() {\n  return ['resolved', 'false_positive', 'confirmed'].includes(this.status);\n};\n\nSuspiciousActivity.prototype.getAgeInHours = function() {\n  const now = new Date();\n  const detected = new Date(this.detected_at);\n  return Math.floor((now - detected) / (1000 * 60 * 60));\n};\n\nSuspiciousActivity.prototype.assignTo = async function(investigatorId, transaction = null) {\n  this.assigned_to = investigatorId;\n  this.status = 'investigating';\n  this.investigated_at = new Date();\n  \n  return await this.save({ transaction });\n};\n\nSuspiciousActivity.prototype.addNote = async function(note, transaction = null) {\n  const timestamp = new Date().toISOString();\n  const newNote = `[${timestamp}] ${note}`;\n  \n  if (this.investigation_notes) {\n    this.investigation_notes += '\\n\\n' + newNote;\n  } else {\n    this.investigation_notes = newNote;\n  }\n  \n  return await this.save({ transaction });\n};\n\nSuspiciousActivity.prototype.resolve = async function(resolution, action = 'no_action', transaction = null) {\n  this.status = 'resolved';\n  this.resolution = resolution;\n  this.resolution_action = action;\n  this.resolved_at = new Date();\n  \n  return await this.save({ transaction });\n};\n\nSuspiciousActivity.prototype.markAsFalsePositive = async function(reason, transaction = null) {\n  this.status = 'false_positive';\n  this.resolution = `False positive: ${reason}`;\n  this.resolution_action = 'no_action';\n  this.resolved_at = new Date();\n  \n  return await this.save({ transaction });\n};\n\nSuspiciousActivity.prototype.escalate = async function(reason, transaction = null) {\n  this.status = 'escalated';\n  this.priority = 'urgent';\n  \n  await this.addNote(`Escalated: ${reason}`, transaction);\n  \n  return await this.save({ transaction });\n};\n\nSuspiciousActivity.prototype.linkRelatedActivity = async function(relatedActivityId, transaction = null) {\n  if (!this.related_activities) {\n    this.related_activities = [];\n  }\n  \n  if (!this.related_activities.includes(relatedActivityId)) {\n    this.related_activities.push(relatedActivityId);\n    return await this.save({ transaction });\n  }\n  \n  return this;\n};\n\n// Static methods\nSuspiciousActivity.createActivity = async function(activityData, transaction = null) {\n  // Auto-calculate occurred_at if not provided\n  if (!activityData.occurred_at) {\n    activityData.occurred_at = activityData.detected_at || new Date();\n  }\n  \n  // Auto-assign priority based on severity\n  if (!activityData.priority) {\n    const priorityMap = {\n      'low': 'low',\n      'medium': 'normal',\n      'high': 'high',\n      'critical': 'urgent'\n    };\n    activityData.priority = priorityMap[activityData.severity] || 'normal';\n  }\n  \n  return await SuspiciousActivity.create(activityData, { transaction });\n};\n\nSuspiciousActivity.getUnassignedActivities = async function(severity = null) {\n  const where = {\n    assigned_to: null,\n    status: 'new'\n  };\n  \n  if (severity) {\n    where.severity = severity;\n  }\n  \n  return await SuspiciousActivity.findAll({\n    where,\n    include: [{ model: User, as: 'user' }],\n    order: [['risk_score', 'DESC'], ['detected_at', 'ASC']]\n  });\n};\n\nSuspiciousActivity.getHighRiskActivities = async function(riskThreshold = 80) {\n  return await SuspiciousActivity.findAll({\n    where: {\n      risk_score: { [sequelize.Op.gte]: riskThreshold },\n      status: { [sequelize.Op.notIn]: ['resolved', 'false_positive'] }\n    },\n    include: [\n      { model: User, as: 'user' },\n      { model: User, as: 'investigator' }\n    ],\n    order: [['risk_score', 'DESC']]\n  });\n};\n\nSuspiciousActivity.getActivitiesByUser = async function(userId, includeResolved = false) {\n  const where = { user_id: userId };\n  \n  if (!includeResolved) {\n    where.status = { [sequelize.Op.notIn]: ['resolved', 'false_positive'] };\n  }\n  \n  return await SuspiciousActivity.findAll({\n    where,\n    order: [['detected_at', 'DESC']]\n  });\n};\n\nSuspiciousActivity.getActivitiesByType = async function(activityType, days = 30) {\n  const startDate = new Date(Date.now() - days * 24 * 60 * 60 * 1000);\n  \n  return await SuspiciousActivity.findAll({\n    where: {\n      activity_type: activityType,\n      detected_at: { [sequelize.Op.gte]: startDate }\n    },\n    include: [{ model: User, as: 'user' }],\n    order: [['detected_at', 'DESC']]\n  });\n};\n\nSuspiciousActivity.getOverdueActivities = async function(hoursThreshold = 24) {\n  const thresholdDate = new Date(Date.now() - hoursThreshold * 60 * 60 * 1000);\n  \n  return await SuspiciousActivity.findAll({\n    where: {\n      detected_at: { [sequelize.Op.lte]: thresholdDate },\n      status: { [sequelize.Op.notIn]: ['resolved', 'false_positive'] }\n    },\n    include: [\n      { model: User, as: 'user' },\n      { model: User, as: 'investigator' }\n    ],\n    order: [['detected_at', 'ASC']]\n  });\n};\n\nSuspiciousActivity.getStatistics = async function(days = 30) {\n  const startDate = new Date(Date.now() - days * 24 * 60 * 60 * 1000);\n  \n  const stats = await SuspiciousActivity.findAll({\n    where: {\n      detected_at: { [sequelize.Op.gte]: startDate }\n    },\n    attributes: [\n      [sequelize.fn('COUNT', sequelize.col('id')), 'total_activities'],\n      [sequelize.fn('COUNT', sequelize.literal('CASE WHEN status = \\'new\\' THEN 1 END')), 'new_activities'],\n      [sequelize.fn('COUNT', sequelize.literal('CASE WHEN status = \\'investigating\\' THEN 1 END')), 'investigating'],\n      [sequelize.fn('COUNT', sequelize.literal('CASE WHEN status = \\'resolved\\' THEN 1 END')), 'resolved'],\n      [sequelize.fn('COUNT', sequelize.literal('CASE WHEN status = \\'false_positive\\' THEN 1 END')), 'false_positives'],\n      [sequelize.fn('COUNT', sequelize.literal('CASE WHEN severity = \\'critical\\' THEN 1 END')), 'critical_activities'],\n      [sequelize.fn('AVG', sequelize.col('risk_score')), 'avg_risk_score'],\n      [sequelize.fn('AVG', sequelize.col('confidence_score')), 'avg_confidence_score']\n    ],\n    raw: true\n  });\n  \n  return stats[0] || {};\n};\n\nSuspiciousActivity.detectPatterns = async function(userId, activityType, days = 7) {\n  const startDate = new Date(Date.now() - days * 24 * 60 * 60 * 1000);\n  \n  const activities = await SuspiciousActivity.findAll({\n    where: {\n      user_id: userId,\n      activity_type: activityType,\n      detected_at: { [sequelize.Op.gte]: startDate }\n    },\n    order: [['detected_at', 'ASC']]\n  });\n  \n  // Simple pattern detection\n  const patterns = {\n    frequency: activities.length,\n    avg_risk_score: activities.reduce((sum, a) => sum + a.risk_score, 0) / activities.length || 0,\n    escalating_risk: false,\n    time_clustering: false\n  };\n  \n  // Check for escalating risk\n  if (activities.length >= 3) {\n    const recent = activities.slice(-3);\n    patterns.escalating_risk = recent.every((activity, index) => {\n      return index === 0 || activity.risk_score >= recent[index - 1].risk_score;\n    });\n  }\n  \n  // Check for time clustering (multiple activities within short time)\n  if (activities.length >= 2) {\n    const timeGaps = [];\n    for (let i = 1; i < activities.length; i++) {\n      const gap = new Date(activities[i].detected_at) - new Date(activities[i-1].detected_at);\n      timeGaps.push(gap / (1000 * 60 * 60)); // Convert to hours\n    }\n    patterns.time_clustering = timeGaps.some(gap => gap < 1); // Activities within 1 hour\n  }\n  \n  return patterns;\n};\n\nmodule.exports = SuspiciousActivity;"],"mappingseY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ,MAAM;EAAEE;AAAU,CAAC;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,WAAW,CAAC;AAC1C,MAAM;EAAEC;AAAU,CAAC;AAAA;AAAA,CAAAL,cAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,oBAAoB,CAAC;AACnD,MAAME,IAAI;AAAA;AAAA,CAAAN,cAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA;AACA,MAAMG,kBAAkB;AAAA;AAAA,CAAAP,cAAA,GAAAG,CAAA,OAAGE,SAAS,CAACG,MAAM,CAAC,oBAAoB,EAAE;EAChEC,EAAE,EAAE;IACFC,IAAI,EAAER,SAAS,CAACS,IAAI;IACpBC,YAAY,EAAEV,SAAS,CAACW,MAAM;IAC9BC,UAAU,EAAE;EACd,CAAC;EAED;EACAC,OAAO,EAAE;IACPL,IAAI,EAAER,SAAS,CAACS,IAAI;IACpBK,SAAS,EAAE,IAAI;IACfC,UAAU,EAAE;MACVC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE;IACP,CAAC;IACDC,OAAO,EAAE;EACX,CAAC;EAED;EACAC,aAAa,EAAE;IACbX,IAAI,EAAER,SAAS,CAACoB,IAAI,CAClB,eAAe,EACf,iBAAiB,EACjB,oBAAoB,EACpB,iBAAiB,EACjB,YAAY,EACZ,gBAAgB,EAChB,gBAAgB,EAChB,gBAAgB,EAChB,cAAc,EACd,oBAAoB,EACpB,WAAW,EACX,kBAAkB,EAClB,kBAAkB,EAClB,qBAAqB,EACrB,cAAc,EACd,WAAW,EACX,iBAAiB,EACjB,WAAW,EACX,gBAAgB,EAChB,mBAAmB,EACnB,cAAc,EACd,cAAc,EACd,aAAa,EACb,oBAAoB,EACpB,kBAAkB,EAClB,OACF,CAAC;IACDN,SAAS,EAAE,KAAK;IAChBI,OAAO,EAAE;EACX,CAAC;EAEDG,QAAQ,EAAE;IACRb,IAAI,EAAER,SAAS,CAACoB,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,CAAC;IACzDN,SAAS,EAAE,KAAK;IAChBJ,YAAY,EAAE,QAAQ;IACtBQ,OAAO,EAAE;EACX,CAAC;EAEDI,gBAAgB,EAAE;IAChBd,IAAI,EAAER,SAAS,CAACuB,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7BT,SAAS,EAAE,KAAK;IAChBI,OAAO,EAAE;EACX,CAAC;EAEDM,UAAU,EAAE;IACVhB,IAAI,EAAER,SAAS,CAACyB,OAAO;IACvBX,SAAS,EAAE,KAAK;IAChBI,OAAO,EAAE;EACX,CAAC;EAED;EACAQ,KAAK,EAAE;IACLlB,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,GAAG,CAAC;IAC3Bb,SAAS,EAAE,KAAK;IAChBI,OAAO,EAAE;EACX,CAAC;EAEDU,WAAW,EAAE;IACXpB,IAAI,EAAER,SAAS,CAAC6B,IAAI;IACpBf,SAAS,EAAE,KAAK;IAChBI,OAAO,EAAE;EACX,CAAC;EAED;EACAY,UAAU,EAAE;IACVtB,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,EAAE,CAAC;IAC1Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDa,UAAU,EAAE;IACVvB,IAAI,EAAER,SAAS,CAAC6B,IAAI;IACpBf,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDc,kBAAkB,EAAE;IAClBxB,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,GAAG,CAAC;IAC3Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDe,UAAU,EAAE;IACVzB,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,GAAG,CAAC;IAC3Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED;EACAgB,YAAY,EAAE;IACZ1B,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,CAAC,CAAC;IACzBb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDiB,YAAY,EAAE;IACZ3B,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,GAAG,CAAC;IAC3Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDkB,IAAI,EAAE;IACJ5B,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,GAAG,CAAC;IAC3Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDmB,QAAQ,EAAE;IACR7B,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,EAAE,CAAC;IAC1Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED;EACAoB,MAAM,EAAE;IACN9B,IAAI,EAAER,SAAS,CAACuB,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC;IAC/BT,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDqB,QAAQ,EAAE;IACR/B,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,EAAE,CAAC;IAC1Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDsB,cAAc,EAAE;IACdhC,IAAI,EAAER,SAAS,CAACS,IAAI;IACpBK,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDuB,QAAQ,EAAE;IACRjC,IAAI,EAAER,SAAS,CAACS,IAAI;IACpBK,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED;EACAwB,kBAAkB,EAAE;IAClBlC,IAAI,EAAER,SAAS,CAAC2C,KAAK;IACrB7B,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED0B,eAAe,EAAE;IACfpC,IAAI,EAAER,SAAS,CAAC2C,KAAK;IACrB7B,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED2B,mBAAmB,EAAE;IACnBrC,IAAI,EAAER,SAAS,CAAC2C,KAAK;IACrB7B,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED;EACA4B,gBAAgB,EAAE;IAChBtC,IAAI,EAAER,SAAS,CAACoB,IAAI,CAAC,YAAY,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE,eAAe,CAAC;IACxFN,SAAS,EAAE,KAAK;IAChBI,OAAO,EAAE;EACX,CAAC;EAED6B,iBAAiB,EAAE;IACjBvC,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,GAAG,CAAC;IAC3Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED8B,aAAa,EAAE;IACbxC,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,EAAE,CAAC;IAC1Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED;EACA+B,MAAM,EAAE;IACNzC,IAAI,EAAER,SAAS,CAACoB,IAAI,CAAC,KAAK,EAAE,eAAe,EAAE,WAAW,EAAE,UAAU,EAAE,gBAAgB,EAAE,WAAW,CAAC;IACpGN,SAAS,EAAE,KAAK;IAChBJ,YAAY,EAAE,KAAK;IACnBQ,OAAO,EAAE;EACX,CAAC;EAEDgC,QAAQ,EAAE;IACR1C,IAAI,EAAER,SAAS,CAACoB,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;IACvDN,SAAS,EAAE,KAAK;IAChBJ,YAAY,EAAE,QAAQ;IACtBQ,OAAO,EAAE;EACX,CAAC;EAED;EACAiC,WAAW,EAAE;IACX3C,IAAI,EAAER,SAAS,CAACS,IAAI;IACpBK,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDkC,mBAAmB,EAAE;IACnB5C,IAAI,EAAER,SAAS,CAAC6B,IAAI;IACpBf,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDmC,UAAU,EAAE;IACV7C,IAAI,EAAER,SAAS,CAAC6B,IAAI;IACpBf,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDoC,iBAAiB,EAAE;IACjB9C,IAAI,EAAER,SAAS,CAACoB,IAAI,CAClB,WAAW,EACX,gBAAgB,EAChB,oBAAoB,EACpB,mBAAmB,EACnB,gBAAgB,EAChB,qBAAqB,EACrB,oBAAoB,EACpB,oBAAoB,EACpB,cAAc,EACd,eAAe,EACf,sBAAsB,EACtB,OACF,CAAC;IACDN,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED;EACAqC,WAAW,EAAE;IACX/C,IAAI,EAAER,SAAS,CAACwD,IAAI;IACpB1C,SAAS,EAAE,KAAK;IAChBJ,YAAY,EAAEV,SAAS,CAACyD,GAAG;IAC3BvC,OAAO,EAAE;EACX,CAAC;EAEDwC,WAAW,EAAE;IACXlD,IAAI,EAAER,SAAS,CAACwD,IAAI;IACpB1C,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDyC,eAAe,EAAE;IACfnD,IAAI,EAAER,SAAS,CAACwD,IAAI;IACpB1C,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED0C,WAAW,EAAE;IACXpD,IAAI,EAAER,SAAS,CAACwD,IAAI;IACpB1C,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED;EACA2C,YAAY,EAAE;IACZrD,IAAI,EAAER,SAAS,CAAC8D,OAAO;IACvBhD,SAAS,EAAE,KAAK;IAChBJ,YAAY,EAAE,KAAK;IACnBQ,OAAO,EAAE;EACX,CAAC;EAED6C,SAAS,EAAE;IACTvD,IAAI,EAAER,SAAS,CAAC8D,OAAO;IACvBhD,SAAS,EAAE,KAAK;IAChBJ,YAAY,EAAE,KAAK;IACnBQ,OAAO,EAAE;EACX,CAAC;EAED8C,aAAa,EAAE;IACbxD,IAAI,EAAER,SAAS,CAAC2B,MAAM,CAAC,GAAG,CAAC;IAC3Bb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED+C,mBAAmB,EAAE;IACnBzD,IAAI,EAAER,SAAS,CAAC8D,OAAO;IACvBhD,SAAS,EAAE,KAAK;IAChBJ,YAAY,EAAE,KAAK;IACnBQ,OAAO,EAAE;EACX,CAAC;EAED;EACAgD,kBAAkB,EAAE;IAClB1D,IAAI,EAAER,SAAS,CAACmE,KAAK,CAACnE,SAAS,CAACS,IAAI,CAAC;IACrCK,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDkD,cAAc,EAAE;IACd5D,IAAI,EAAER,SAAS,CAACS,IAAI;IACpBK,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED;EACAmD,IAAI,EAAE;IACJ7D,IAAI,EAAER,SAAS,CAACmE,KAAK,CAACnE,SAAS,CAAC2B,MAAM,CAAC;IACvCb,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAEDoD,QAAQ,EAAE;IACR9D,IAAI,EAAER,SAAS,CAAC2C,KAAK;IACrB7B,SAAS,EAAE,IAAI;IACfI,OAAO,EAAE;EACX,CAAC;EAED;EACAqD,UAAU,EAAE;IACV/D,IAAI,EAAER,SAAS,CAACwD,IAAI;IACpB9C,YAAY,EAAEV,SAAS,CAACyD,GAAG;IAC3B3C,SAAS,EAAE;EACb,CAAC;EAED0D,UAAU,EAAE;IACVhE,IAAI,EAAER,SAAS,CAACwD,IAAI;IACpB9C,YAAY,EAAEV,SAAS,CAACyD,GAAG;IAC3B3C,SAAS,EAAE;EACb;AACF,CAAC,EAAE;EACD2D,SAAS,EAAE,uBAAuB;EAClCC,UAAU,EAAE,IAAI;EAChBC,SAAS,EAAE,YAAY;EACvBC,SAAS,EAAE,YAAY;EACvBC,OAAO,EAAE,CACP;IACEC,MAAM,EAAE,CAAC,SAAS,EAAE,eAAe;EACrC,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,eAAe,EAAE,UAAU;EACtC,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,QAAQ,EAAE,UAAU;EAC/B,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,YAAY;EACvB,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,kBAAkB;EAC7B,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,aAAa;EACxB,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,aAAa;EACxB,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,YAAY;EACvB,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,cAAc;EACzB,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,aAAa;EACxB,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,cAAc,EAAE,WAAW;EACtC,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,gBAAgB;EAC3B,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,gBAAgB;EAC3B,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,UAAU;EACrB,CAAC,EACD;IACEA,MAAM,EAAE,CAAC,kBAAkB;EAC7B,CAAC,CACF;EACDC,QAAQ,EAAE;IACRC,oBAAoBA,CAAA,EAAG;MAAA;MAAAlF,cAAA,GAAAmF,CAAA;MACrB,MAAMC,KAAK;MAAA;MAAA,CAAApF,cAAA,GAAAG,CAAA,OAAGkF,UAAU,CAAC,IAAI,CAAC7D,gBAAgB,CAAC;MAAC;MAAAxB,cAAA,GAAAG,CAAA;MAChD;MAAI;MAAA,CAAAH,cAAA,GAAAsF,CAAA,UAAAF,KAAK,GAAG,CAAC;MAAA;MAAA,CAAApF,cAAA,GAAAsF,CAAA,UAAIF,KAAK,GAAG,CAAC,GAAE;QAAA;QAAApF,cAAA,GAAAsF,CAAA;QAAAtF,cAAA,GAAAG,CAAA;QAC1B,MAAM,IAAIoF,KAAK,CAAC,0CAA0C,CAAC;MAC7D,CAAC;MAAA;MAAA;QAAAvF,cAAA,GAAAsF,CAAA;MAAA;IACH,CAAC;IACDE,cAAcA,CAAA,EAAG;MAAA;MAAAxF,cAAA,GAAAmF,CAAA;MAAAnF,cAAA,GAAAG,CAAA;MACf;MAAI;MAAA,CAAAH,cAAA,GAAAsF,CAAA,cAAI,CAAC5D,UAAU,GAAG,CAAC;MAAA;MAAA,CAAA1B,cAAA,GAAAsF,CAAA,UAAI,IAAI,CAAC5D,UAAU,GAAG,GAAG,GAAE;QAAA;QAAA1B,cAAA,GAAAsF,CAAA;QAAAtF,cAAA,GAAAG,CAAA;QAChD,MAAM,IAAIoF,KAAK,CAAC,sCAAsC,CAAC;MACzD,CAAC;MAAA;MAAA;QAAAvF,cAAA,GAAAsF,CAAA;MAAA;IACH,CAAC;IACDG,qBAAqBA,CAAA,EAAG;MAAA;MAAAzF,cAAA,GAAAmF,CAAA;MACtB,MAAMO,gBAAgB;MAAA;MAAA,CAAA1F,cAAA,GAAAG,CAAA,OAAG,CAAC,UAAU,EAAE,gBAAgB,EAAE,WAAW,CAAC;MAAC;MAAAH,cAAA,GAAAG,CAAA;MACrE,IAAIuF,gBAAgB,CAACC,QAAQ,CAAC,IAAI,CAACxC,MAAM,CAAC,EAAE;QAAA;QAAAnD,cAAA,GAAAsF,CAAA;QAAAtF,cAAA,GAAAG,CAAA;QAC1C,IAAI,CAAC,IAAI,CAAC2D,WAAW,EAAE;UAAA;UAAA9D,cAAA,GAAAsF,CAAA;UAAAtF,cAAA,GAAAG,CAAA;UACrB,MAAM,IAAIoF,KAAK,CAAC,qDAAqD,CAAC;QACxE,CAAC;QAAA;QAAA;UAAAvF,cAAA,GAAAsF,CAAA;QAAA;MACH,CAAC;MAAA;MAAA;QAAAtF,cAAA,GAAAsF,CAAA;MAAA;IACH;EACF;AACF,CAAC,CAAC;;AAEF;AAAA;AAAAtF,cAAA,GAAAG,CAAA;AACAI,kBAAkB,CAACqF,SAAS,CAACtF,IAAI,EAAE;EAAEuF,UAAU,EAAE,SAAS;EAAEC,EAAE,EAAE;AAAO,CAAC,CAAC;AAAC;AAAA9F,cAAA,GAAAG,CAAA;AAC1EI,kBAAkB,CAACqF,SAAS,CAACtF,IAAI,EAAE;EAAEuF,UAAU,EAAE,aAAa;EAAEC,EAAE,EAAE;AAAe,CAAC,CAAC;AACrF;;AAEA;AAAA;AAAA9F,cAAA,GAAAG,CAAA;AACAI,kBAAkB,CAACwF,SAAS,CAACC,UAAU,GAAG,YAAW;EAAA;EAAAhG,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EACnD,OAAO,2BAAAH,cAAA,GAAAsF,CAAA,cAAI,CAAC/D,QAAQ,KAAK,UAAU;EAAA;EAAA,CAAAvB,cAAA,GAAAsF,CAAA,UAAI,IAAI,CAAC5D,UAAU,IAAI,EAAE;AAC9D,CAAC;AAAC;AAAA1B,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwF,SAAS,CAACE,uBAAuB,GAAG,YAAW;EAAA;EAAAjG,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EAChE,OAAO,2BAAAH,cAAA,GAAAsF,CAAA,cAAI,CAAC/D,QAAQ,KAAK,UAAU;EAAA;EAAA,CAAAvB,cAAA,GAAAsF,CAAA,UAAI,IAAI,CAAClC,QAAQ,KAAK,QAAQ;AACnE,CAAC;AAAC;AAAApD,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwF,SAAS,CAACG,UAAU,GAAG,YAAW;EAAA;EAAAlG,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EACnD,OAAO,CAAC,UAAU,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAACwF,QAAQ,CAAC,IAAI,CAACxC,MAAM,CAAC;AAC1E,CAAC;AAAC;AAAAnD,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwF,SAAS,CAACI,aAAa,GAAG,YAAW;EAAA;EAAAnG,cAAA,GAAAmF,CAAA;EACtD,MAAMiB,GAAG;EAAA;EAAA,CAAApG,cAAA,GAAAG,CAAA,QAAG,IAAIkG,IAAI,CAAC,CAAC;EACtB,MAAMC,QAAQ;EAAA;EAAA,CAAAtG,cAAA,GAAAG,CAAA,QAAG,IAAIkG,IAAI,CAAC,IAAI,CAAC5C,WAAW,CAAC;EAAC;EAAAzD,cAAA,GAAAG,CAAA;EAC5C,OAAOoG,IAAI,CAACC,KAAK,CAAC,CAACJ,GAAG,GAAGE,QAAQ,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACxD,CAAC;AAAC;AAAAtG,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwF,SAAS,CAACU,QAAQ,GAAG,gBAAeC,cAAc,EAAEC,WAAW;AAAA;AAAA,CAAA3G,cAAA,GAAAsF,CAAA,UAAG,IAAI,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EACzF,IAAI,CAACkD,WAAW,GAAGqD,cAAc;EAAC;EAAA1G,cAAA,GAAAG,CAAA;EAClC,IAAI,CAACgD,MAAM,GAAG,eAAe;EAAC;EAAAnD,cAAA,GAAAG,CAAA;EAC9B,IAAI,CAAC0D,eAAe,GAAG,IAAIwC,IAAI,CAAC,CAAC;EAAC;EAAArG,cAAA,GAAAG,CAAA;EAElC,OAAO,MAAM,IAAI,CAACyG,IAAI,CAAC;IAAED;EAAY,CAAC,CAAC;AACzC,CAAC;AAAC;AAAA3G,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwF,SAAS,CAACc,OAAO,GAAG,gBAAeC,IAAI,EAAEH,WAAW;AAAA;AAAA,CAAA3G,cAAA,GAAAsF,CAAA,UAAG,IAAI,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAC9E,MAAM4B,SAAS;EAAA;EAAA,CAAA/G,cAAA,GAAAG,CAAA,QAAG,IAAIkG,IAAI,CAAC,CAAC,CAACW,WAAW,CAAC,CAAC;EAC1C,MAAMC,OAAO;EAAA;EAAA,CAAAjH,cAAA,GAAAG,CAAA,QAAG,IAAI4G,SAAS,KAAKD,IAAI,EAAE;EAAC;EAAA9G,cAAA,GAAAG,CAAA;EAEzC,IAAI,IAAI,CAACmD,mBAAmB,EAAE;IAAA;IAAAtD,cAAA,GAAAsF,CAAA;IAAAtF,cAAA,GAAAG,CAAA;IAC5B,IAAI,CAACmD,mBAAmB,IAAI,MAAM,GAAG2D,OAAO;EAC9C,CAAC,MAAM;IAAA;IAAAjH,cAAA,GAAAsF,CAAA;IAAAtF,cAAA,GAAAG,CAAA;IACL,IAAI,CAACmD,mBAAmB,GAAG2D,OAAO;EACpC;EAAC;EAAAjH,cAAA,GAAAG,CAAA;EAED,OAAO,MAAM,IAAI,CAACyG,IAAI,CAAC;IAAED;EAAY,CAAC,CAAC;AACzC,CAAC;AAAC;AAAA3G,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwF,SAAS,CAACmB,OAAO,GAAG,gBAAe3D,UAAU,EAAE4D,MAAM;AAAA;AAAA,CAAAnH,cAAA,GAAAsF,CAAA,WAAG,WAAW,GAAEqB,WAAW;AAAA;AAAA,CAAA3G,cAAA,GAAAsF,CAAA,WAAG,IAAI,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EAC1G,IAAI,CAACgD,MAAM,GAAG,UAAU;EAAC;EAAAnD,cAAA,GAAAG,CAAA;EACzB,IAAI,CAACoD,UAAU,GAAGA,UAAU;EAAC;EAAAvD,cAAA,GAAAG,CAAA;EAC7B,IAAI,CAACqD,iBAAiB,GAAG2D,MAAM;EAAC;EAAAnH,cAAA,GAAAG,CAAA;EAChC,IAAI,CAAC2D,WAAW,GAAG,IAAIuC,IAAI,CAAC,CAAC;EAAC;EAAArG,cAAA,GAAAG,CAAA;EAE9B,OAAO,MAAM,IAAI,CAACyG,IAAI,CAAC;IAAED;EAAY,CAAC,CAAC;AACzC,CAAC;AAAC;AAAA3G,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwF,SAAS,CAACqB,mBAAmB,GAAG,gBAAeC,MAAM,EAAEV,WAAW;AAAA;AAAA,CAAA3G,cAAA,GAAAsF,CAAA,WAAG,IAAI,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EAC5F,IAAI,CAACgD,MAAM,GAAG,gBAAgB;EAAC;EAAAnD,cAAA,GAAAG,CAAA;EAC/B,IAAI,CAACoD,UAAU,GAAG,mBAAmB8D,MAAM,EAAE;EAAC;EAAArH,cAAA,GAAAG,CAAA;EAC9C,IAAI,CAACqD,iBAAiB,GAAG,WAAW;EAAC;EAAAxD,cAAA,GAAAG,CAAA;EACrC,IAAI,CAAC2D,WAAW,GAAG,IAAIuC,IAAI,CAAC,CAAC;EAAC;EAAArG,cAAA,GAAAG,CAAA;EAE9B,OAAO,MAAM,IAAI,CAACyG,IAAI,CAAC;IAAED;EAAY,CAAC,CAAC;AACzC,CAAC;AAAC;AAAA3G,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwF,SAAS,CAACuB,QAAQ,GAAG,gBAAeD,MAAM,EAAEV,WAAW;AAAA;AAAA,CAAA3G,cAAA,GAAAsF,CAAA,WAAG,IAAI,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EACjF,IAAI,CAACgD,MAAM,GAAG,WAAW;EAAC;EAAAnD,cAAA,GAAAG,CAAA;EAC1B,IAAI,CAACiD,QAAQ,GAAG,QAAQ;EAAC;EAAApD,cAAA,GAAAG,CAAA;EAEzB,MAAM,IAAI,CAAC0G,OAAO,CAAC,cAAcQ,MAAM,EAAE,EAAEV,WAAW,CAAC;EAAC;EAAA3G,cAAA,GAAAG,CAAA;EAExD,OAAO,MAAM,IAAI,CAACyG,IAAI,CAAC;IAAED;EAAY,CAAC,CAAC;AACzC,CAAC;AAAC;AAAA3G,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwF,SAAS,CAACwB,mBAAmB,GAAG,gBAAeC,iBAAiB,EAAEb,WAAW;AAAA;AAAA,CAAA3G,cAAA,GAAAsF,CAAA,WAAG,IAAI,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EACvG,IAAI,CAAC,IAAI,CAACiE,kBAAkB,EAAE;IAAA;IAAApE,cAAA,GAAAsF,CAAA;IAAAtF,cAAA,GAAAG,CAAA;IAC5B,IAAI,CAACiE,kBAAkB,GAAG,EAAE;EAC9B,CAAC;EAAA;EAAA;IAAApE,cAAA,GAAAsF,CAAA;EAAA;EAAAtF,cAAA,GAAAG,CAAA;EAED,IAAI,CAAC,IAAI,CAACiE,kBAAkB,CAACuB,QAAQ,CAAC6B,iBAAiB,CAAC,EAAE;IAAA;IAAAxH,cAAA,GAAAsF,CAAA;IAAAtF,cAAA,GAAAG,CAAA;IACxD,IAAI,CAACiE,kBAAkB,CAACqD,IAAI,CAACD,iBAAiB,CAAC;IAAC;IAAAxH,cAAA,GAAAG,CAAA;IAChD,OAAO,MAAM,IAAI,CAACyG,IAAI,CAAC;MAAED;IAAY,CAAC,CAAC;EACzC,CAAC;EAAA;EAAA;IAAA3G,cAAA,GAAAsF,CAAA;EAAA;EAAAtF,cAAA,GAAAG,CAAA;EAED,OAAO,IAAI;AACb,CAAC;;AAED;AAAA;AAAAH,cAAA,GAAAG,CAAA;AACAI,kBAAkB,CAACmH,cAAc,GAAG,gBAAeC,YAAY,EAAEhB,WAAW;AAAA;AAAA,CAAA3G,cAAA,GAAAsF,CAAA,WAAG,IAAI,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EACnF;EACA,IAAI,CAACwH,YAAY,CAAC/D,WAAW,EAAE;IAAA;IAAA5D,cAAA,GAAAsF,CAAA;IAAAtF,cAAA,GAAAG,CAAA;IAC7BwH,YAAY,CAAC/D,WAAW;IAAG;IAAA,CAAA5D,cAAA,GAAAsF,CAAA,WAAAqC,YAAY,CAAClE,WAAW;IAAA;IAAA,CAAAzD,cAAA,GAAAsF,CAAA,WAAI,IAAIe,IAAI,CAAC,CAAC;EACnE,CAAC;EAAA;EAAA;IAAArG,cAAA,GAAAsF,CAAA;EAAA;;EAED;EAAAtF,cAAA,GAAAG,CAAA;EACA,IAAI,CAACwH,YAAY,CAACvE,QAAQ,EAAE;IAAA;IAAApD,cAAA,GAAAsF,CAAA;IAC1B,MAAMsC,WAAW;IAAA;IAAA,CAAA5H,cAAA,GAAAG,CAAA,QAAG;MAClB,KAAK,EAAE,KAAK;MACZ,QAAQ,EAAE,QAAQ;MAClB,MAAM,EAAE,MAAM;MACd,UAAU,EAAE;IACd,CAAC;IAAC;IAAAH,cAAA,GAAAG,CAAA;IACFwH,YAAY,CAACvE,QAAQ;IAAG;IAAA,CAAApD,cAAA,GAAAsF,CAAA,WAAAsC,WAAW,CAACD,YAAY,CAACpG,QAAQ,CAAC;IAAA;IAAA,CAAAvB,cAAA,GAAAsF,CAAA,WAAI,QAAQ;EACxE,CAAC;EAAA;EAAA;IAAAtF,cAAA,GAAAsF,CAAA;EAAA;EAAAtF,cAAA,GAAAG,CAAA;EAED,OAAO,MAAMI,kBAAkB,CAACsH,MAAM,CAACF,YAAY,EAAE;IAAEhB;EAAY,CAAC,CAAC;AACvE,CAAC;AAAC;AAAA3G,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACuH,uBAAuB,GAAG,gBAAevG,QAAQ;AAAA;AAAA,CAAAvB,cAAA,GAAAsF,CAAA,WAAG,IAAI,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAC3E,MAAM4C,KAAK;EAAA;EAAA,CAAA/H,cAAA,GAAAG,CAAA,QAAG;IACZkD,WAAW,EAAE,IAAI;IACjBF,MAAM,EAAE;EACV,CAAC;EAAC;EAAAnD,cAAA,GAAAG,CAAA;EAEF,IAAIoB,QAAQ,EAAE;IAAA;IAAAvB,cAAA,GAAAsF,CAAA;IAAAtF,cAAA,GAAAG,CAAA;IACZ4H,KAAK,CAACxG,QAAQ,GAAGA,QAAQ;EAC3B,CAAC;EAAA;EAAA;IAAAvB,cAAA,GAAAsF,CAAA;EAAA;EAAAtF,cAAA,GAAAG,CAAA;EAED,OAAO,MAAMI,kBAAkB,CAACyH,OAAO,CAAC;IACtCD,KAAK;IACLE,OAAO,EAAE,CAAC;MAAE/G,KAAK,EAAEZ,IAAI;MAAEwF,EAAE,EAAE;IAAO,CAAC,CAAC;IACtCoC,KAAK,EAAE,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,KAAK,CAAC;EACxD,CAAC,CAAC;AACJ,CAAC;AAAC;AAAAlI,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAAC4H,qBAAqB,GAAG,gBAAeC,aAAa;AAAA;AAAA,CAAApI,cAAA,GAAAsF,CAAA,WAAG,EAAE,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAAAnF,cAAA,GAAAG,CAAA;EAC5E,OAAO,MAAMI,kBAAkB,CAACyH,OAAO,CAAC;IACtCD,KAAK,EAAE;MACLrG,UAAU,EAAE;QAAE,CAACrB,SAAS,CAACgI,EAAE,CAACC,GAAG,GAAGF;MAAc,CAAC;MACjDjF,MAAM,EAAE;QAAE,CAAC9C,SAAS,CAACgI,EAAE,CAACE,KAAK,GAAG,CAAC,UAAU,EAAE,gBAAgB;MAAE;IACjE,CAAC;IACDN,OAAO,EAAE,CACP;MAAE/G,KAAK,EAAEZ,IAAI;MAAEwF,EAAE,EAAE;IAAO,CAAC,EAC3B;MAAE5E,KAAK,EAAEZ,IAAI;MAAEwF,EAAE,EAAE;IAAe,CAAC,CACpC;IACDoC,KAAK,EAAE,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC;AAAC;AAAAlI,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACiI,mBAAmB,GAAG,gBAAeC,MAAM,EAAEC,eAAe;AAAA;AAAA,CAAA1I,cAAA,GAAAsF,CAAA,WAAG,KAAK,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EACvF,MAAM4C,KAAK;EAAA;EAAA,CAAA/H,cAAA,GAAAG,CAAA,QAAG;IAAEY,OAAO,EAAE0H;EAAO,CAAC;EAAC;EAAAzI,cAAA,GAAAG,CAAA;EAElC,IAAI,CAACuI,eAAe,EAAE;IAAA;IAAA1I,cAAA,GAAAsF,CAAA;IAAAtF,cAAA,GAAAG,CAAA;IACpB4H,KAAK,CAAC5E,MAAM,GAAG;MAAE,CAAC9C,SAAS,CAACgI,EAAE,CAACE,KAAK,GAAG,CAAC,UAAU,EAAE,gBAAgB;IAAE,CAAC;EACzE,CAAC;EAAA;EAAA;IAAAvI,cAAA,GAAAsF,CAAA;EAAA;EAAAtF,cAAA,GAAAG,CAAA;EAED,OAAO,MAAMI,kBAAkB,CAACyH,OAAO,CAAC;IACtCD,KAAK;IACLG,KAAK,EAAE,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC;EACjC,CAAC,CAAC;AACJ,CAAC;AAAC;AAAAlI,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACoI,mBAAmB,GAAG,gBAAeC,YAAY,EAAEC,IAAI;AAAA;AAAA,CAAA7I,cAAA,GAAAsF,CAAA,WAAG,EAAE,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAC/E,MAAM2D,SAAS;EAAA;EAAA,CAAA9I,cAAA,GAAAG,CAAA,QAAG,IAAIkG,IAAI,CAACA,IAAI,CAACD,GAAG,CAAC,CAAC,GAAGyC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;EAAC;EAAA7I,cAAA,GAAAG,CAAA;EAEpE,OAAO,MAAMI,kBAAkB,CAACyH,OAAO,CAAC;IACtCD,KAAK,EAAE;MACL1G,aAAa,EAAEuH,YAAY;MAC3BnF,WAAW,EAAE;QAAE,CAACpD,SAAS,CAACgI,EAAE,CAACC,GAAG,GAAGQ;MAAU;IAC/C,CAAC;IACDb,OAAO,EAAE,CAAC;MAAE/G,KAAK,EAAEZ,IAAI;MAAEwF,EAAE,EAAE;IAAO,CAAC,CAAC;IACtCoC,KAAK,EAAE,CAAC,CAAC,aAAa,EAAE,MAAM,CAAC;EACjC,CAAC,CAAC;AACJ,CAAC;AAAC;AAAAlI,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACwI,oBAAoB,GAAG,gBAAeC,cAAc;AAAA;AAAA,CAAAhJ,cAAA,GAAAsF,CAAA,WAAG,EAAE,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAC5E,MAAM8D,aAAa;EAAA;EAAA,CAAAjJ,cAAA,GAAAG,CAAA,QAAG,IAAIkG,IAAI,CAACA,IAAI,CAACD,GAAG,CAAC,CAAC,GAAG4C,cAAc,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;EAAC;EAAAhJ,cAAA,GAAAG,CAAA;EAE7E,OAAO,MAAMI,kBAAkB,CAACyH,OAAO,CAAC;IACtCD,KAAK,EAAE;MACLtE,WAAW,EAAE;QAAE,CAACpD,SAAS,CAACgI,EAAE,CAACa,GAAG,GAAGD;MAAc,CAAC;MAClD9F,MAAM,EAAE;QAAE,CAAC9C,SAAS,CAACgI,EAAE,CAACE,KAAK,GAAG,CAAC,UAAU,EAAE,gBAAgB;MAAE;IACjE,CAAC;IACDN,OAAO,EAAE,CACP;MAAE/G,KAAK,EAAEZ,IAAI;MAAEwF,EAAE,EAAE;IAAO,CAAC,EAC3B;MAAE5E,KAAK,EAAEZ,IAAI;MAAEwF,EAAE,EAAE;IAAe,CAAC,CACpC;IACDoC,KAAK,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC;EAChC,CAAC,CAAC;AACJ,CAAC;AAAC;AAAAlI,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAAC4I,aAAa,GAAG,gBAAeN,IAAI;AAAA;AAAA,CAAA7I,cAAA,GAAAsF,CAAA,WAAG,EAAE,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EAC3D,MAAM2D,SAAS;EAAA;EAAA,CAAA9I,cAAA,GAAAG,CAAA,QAAG,IAAIkG,IAAI,CAACA,IAAI,CAACD,GAAG,CAAC,CAAC,GAAGyC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;EAEnE,MAAMO,KAAK;EAAA;EAAA,CAAApJ,cAAA,GAAAG,CAAA,QAAG,MAAMI,kBAAkB,CAACyH,OAAO,CAAC;IAC7CD,KAAK,EAAE;MACLtE,WAAW,EAAE;QAAE,CAACpD,SAAS,CAACgI,EAAE,CAACC,GAAG,GAAGQ;MAAU;IAC/C,CAAC;IACDO,UAAU,EAAE,CACV,CAAChJ,SAAS,CAACiJ,EAAE,CAAC,OAAO,EAAEjJ,SAAS,CAACkJ,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,kBAAkB,CAAC,EAChE,CAAClJ,SAAS,CAACiJ,EAAE,CAAC,OAAO,EAAEjJ,SAAS,CAACmJ,OAAO,CAAC,uCAAuC,CAAC,CAAC,EAAE,gBAAgB,CAAC,EACrG,CAACnJ,SAAS,CAACiJ,EAAE,CAAC,OAAO,EAAEjJ,SAAS,CAACmJ,OAAO,CAAC,iDAAiD,CAAC,CAAC,EAAE,eAAe,CAAC,EAC9G,CAACnJ,SAAS,CAACiJ,EAAE,CAAC,OAAO,EAAEjJ,SAAS,CAACmJ,OAAO,CAAC,4CAA4C,CAAC,CAAC,EAAE,UAAU,CAAC,EACpG,CAACnJ,SAAS,CAACiJ,EAAE,CAAC,OAAO,EAAEjJ,SAAS,CAACmJ,OAAO,CAAC,kDAAkD,CAAC,CAAC,EAAE,iBAAiB,CAAC,EACjH,CAACnJ,SAAS,CAACiJ,EAAE,CAAC,OAAO,EAAEjJ,SAAS,CAACmJ,OAAO,CAAC,8CAA8C,CAAC,CAAC,EAAE,qBAAqB,CAAC,EACjH,CAACnJ,SAAS,CAACiJ,EAAE,CAAC,KAAK,EAAEjJ,SAAS,CAACkJ,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,gBAAgB,CAAC,EACpE,CAAClJ,SAAS,CAACiJ,EAAE,CAAC,KAAK,EAAEjJ,SAAS,CAACkJ,GAAG,CAAC,kBAAkB,CAAC,CAAC,EAAE,sBAAsB,CAAC,CACjF;IACDE,GAAG,EAAE;EACP,CAAC,CAAC;EAAC;EAAAzJ,cAAA,GAAAG,CAAA;EAEH,OAAO,2BAAAH,cAAA,GAAAsF,CAAA,WAAA8D,KAAK,CAAC,CAAC,CAAC;EAAA;EAAA,CAAApJ,cAAA,GAAAsF,CAAA,WAAI,CAAC,CAAC;AACvB,CAAC;AAAC;AAAAtF,cAAA,GAAAG,CAAA;AAEFI,kBAAkB,CAACmJ,cAAc,GAAG,gBAAejB,MAAM,EAAEG,YAAY,EAAEC,IAAI;AAAA;AAAA,CAAA7I,cAAA,GAAAsF,CAAA,WAAG,CAAC,GAAE;EAAA;EAAAtF,cAAA,GAAAmF,CAAA;EACjF,MAAM2D,SAAS;EAAA;EAAA,CAAA9I,cAAA,GAAAG,CAAA,QAAG,IAAIkG,IAAI,CAACA,IAAI,CAACD,GAAG,CAAC,CAAC,GAAGyC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;EAEnE,MAAMc,UAAU;EAAA;EAAA,CAAA3J,cAAA,GAAAG,CAAA,QAAG,MAAMI,kBAAkB,CAACyH,OAAO,CAAC;IAClDD,KAAK,EAAE;MACLhH,OAAO,EAAE0H,MAAM;MACfpH,aAAa,EAAEuH,YAAY;MAC3BnF,WAAW,EAAE;QAAE,CAACpD,SAAS,CAACgI,EAAE,CAACC,GAAG,GAAGQ;MAAU;IAC/C,CAAC;IACDZ,KAAK,EAAE,CAAC,CAAC,aAAa,EAAE,KAAK,CAAC;EAChC,CAAC,CAAC;;EAEF;EACA,MAAM0B,QAAQ;EAAA;EAAA,CAAA5J,cAAA,GAAAG,CAAA,QAAG;IACf0J,SAAS,EAAEF,UAAU,CAACG,MAAM;IAC5BC,cAAc;IAAE;IAAA,CAAA/J,cAAA,GAAAsF,CAAA,WAAAqE,UAAU,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;MAAA;MAAAlK,cAAA,GAAAmF,CAAA;MAAAnF,cAAA,GAAAG,CAAA;MAAA,OAAA8J,GAAG,GAAGC,CAAC,CAACxI,UAAU;IAAD,CAAC,EAAE,CAAC,CAAC,GAAGiI,UAAU,CAACG,MAAM;IAAA;IAAA,CAAA9J,cAAA,GAAAsF,CAAA,WAAI,CAAC;IAC7F6E,eAAe,EAAE,KAAK;IACtBC,eAAe,EAAE;EACnB,CAAC;;EAED;EAAA;EAAApK,cAAA,GAAAG,CAAA;EACA,IAAIwJ,UAAU,CAACG,MAAM,IAAI,CAAC,EAAE;IAAA;IAAA9J,cAAA,GAAAsF,CAAA;IAC1B,MAAM+E,MAAM;IAAA;IAAA,CAAArK,cAAA,GAAAG,CAAA,QAAGwJ,UAAU,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC;IAAC;IAAAtK,cAAA,GAAAG,CAAA;IACpCyJ,QAAQ,CAACO,eAAe,GAAGE,MAAM,CAACE,KAAK,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAAA;MAAAzK,cAAA,GAAAmF,CAAA;MAAAnF,cAAA,GAAAG,CAAA;MAC3D,OAAO,2BAAAH,cAAA,GAAAsF,CAAA,WAAAmF,KAAK,KAAK,CAAC;MAAA;MAAA,CAAAzK,cAAA,GAAAsF,CAAA,WAAIkF,QAAQ,CAAC9I,UAAU,IAAI2I,MAAM,CAACI,KAAK,GAAG,CAAC,CAAC,CAAC/I,UAAU;IAC3E,CAAC,CAAC;EACJ,CAAC;EAAA;EAAA;IAAA1B,cAAA,GAAAsF,CAAA;EAAA;;EAED;EAAAtF,cAAA,GAAAG,CAAA;EACA,IAAIwJ,UAAU,CAACG,MAAM,IAAI,CAAC,EAAE;IAAA;IAAA9J,cAAA,GAAAsF,CAAA;IAC1B,MAAMoF,QAAQ;IAAA;IAAA,CAAA1K,cAAA,GAAAG,CAAA,SAAG,EAAE;IAAC;IAAAH,cAAA,GAAAG,CAAA;IACpB,KAAK,IAAIwK,CAAC;IAAA;IAAA,CAAA3K,cAAA,GAAAG,CAAA,SAAG,CAAC,GAAEwK,CAAC,GAAGhB,UAAU,CAACG,MAAM,EAAEa,CAAC,EAAE,EAAE;MAC1C,MAAMC,GAAG;MAAA;MAAA,CAAA5K,cAAA,GAAAG,CAAA,SAAG,IAAIkG,IAAI,CAACsD,UAAU,CAACgB,CAAC,CAAC,CAAClH,WAAW,CAAC,GAAG,IAAI4C,IAAI,CAACsD,UAAU,CAACgB,CAAC,GAAC,CAAC,CAAC,CAAClH,WAAW,CAAC;MAAC;MAAAzD,cAAA,GAAAG,CAAA;MACxFuK,QAAQ,CAACjD,IAAI,CAACmD,GAAG,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACzC;IAAC;IAAA5K,cAAA,GAAAG,CAAA;IACDyJ,QAAQ,CAACQ,eAAe,GAAGM,QAAQ,CAACG,IAAI,CAACD,GAAG,IAAI;MAAA;MAAA5K,cAAA,GAAAmF,CAAA;MAAAnF,cAAA,GAAAG,CAAA;MAAA,OAAAyK,GAAG,GAAG,CAAC;IAAD,CAAC,CAAC,CAAC,CAAC;EAC5D,CAAC;EAAA;EAAA;IAAA5K,cAAA,GAAAsF,CAAA;EAAA;EAAAtF,cAAA,GAAAG,CAAA;EAED,OAAOyJ,QAAQ;AACjB,CAAC;AAAC;AAAA5J,cAAA,GAAAG,CAAA;AAEF2K,MAAM,CAACC,OAAO,GAAGxK,kBAAkB","ignoreList":[]}