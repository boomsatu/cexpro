{"version":3,"names":["cov_hm5cql00u","actualCoverage","DataTypes","s","require","sequelize","Market","User","Order","define","id","type","UUID","defaultValue","UUIDV4","primaryKey","order_id","STRING","allowNull","unique","comment","user_id","references","model","key","market_id","side","ENUM","time_in_force","price","DECIMAL","quantity","filled_quantity","remaining_quantity","stop_price","trailing_amount","trailing_percent","status","average_price","total_value","fee_amount","fee_currency","client_order_id","source","risk_score","is_margin","BOOLEAN","leverage","expires_at","DATE","filled_at","cancelled_at","notes","TEXT","order_source","margin_type","position_side","reduce_only","post_only","iceberg_qty","strategy_id","parent_order_id","order_group_id","trigger_price","trigger_condition","working_type","price_protect","self_trade_prevention","commission_asset","commission_rate","created_at","NOW","updated_at","tableName","timestamps","createdAt","updatedAt","indexes","fields","belongsTo","foreignKey","as","prototype","isActive","f","includes","isFilled","isPartiallyFilled","canCancel","canModify","getFillPercentage","parseFloat","b","updateFill","fillQuantity","fillPrice","currentFilled","newFilled","totalQuantity","currentValue","newValue","Date","cancel","reason","Error","generateOrderId","timestamp","now","toString","random","Math","substring","toUpperCase","getActiveOrders","userId","marketId","where","findAll","include","attributes","order","getOrderHistory","limit","offset","findAndCountAll","getOrderBook","orderBy","module","exports"],"sources":["Order.js"],"sourcesContent":["const { DataTypes } = require('sequelize');\nconst { sequelize } = require('../config/database');\nconst Market = require('./Market');\nconst User = require('./User');\n\n/**\n * Model Order untuk mengelola semua trading orders\n * Mendukung berbagai tipe order dan status lifecycle\n */\nconst Order = sequelize.define('Order', {\n  id: {\n    type: DataTypes.UUID,\n    defaultValue: DataTypes.UUIDV4,\n    primaryKey: true\n  },\n  \n  // Order identification\n  order_id: {\n    type: DataTypes.STRING(32),\n    allowNull: false,\n    unique: true,\n    comment: 'Unique order identifier for API'\n  },\n  \n  // Foreign keys\n  user_id: {\n    type: DataTypes.UUID,\n    allowNull: false,\n    references: {\n      model: 'users',\n      key: 'id'\n    },\n    comment: 'User who placed the order'\n  },\n  \n  market_id: {\n    type: DataTypes.UUID,\n    allowNull: false,\n    references: {\n      model: 'markets',\n      key: 'id'\n    },\n    comment: 'Market where order is placed'\n  },\n  \n  // Order basic information\n  side: {\n    type: DataTypes.ENUM('buy', 'sell'),\n    allowNull: false,\n    comment: 'Order side: buy or sell'\n  },\n  \n  type: {\n    type: DataTypes.ENUM('market', 'limit', 'stop', 'stop_limit', 'trailing_stop'),\n    allowNull: false,\n    comment: 'Order type'\n  },\n  \n  time_in_force: {\n    type: DataTypes.ENUM('GTC', 'IOC', 'FOK', 'GTD'),\n    defaultValue: 'GTC',\n    allowNull: false,\n    comment: 'Time in force: GTC=Good Till Cancelled, IOC=Immediate or Cancel, FOK=Fill or Kill, GTD=Good Till Date'\n  },\n  \n  // Price and quantity\n  price: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: true,\n    comment: 'Order price (null for market orders)'\n  },\n  \n  quantity: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: false,\n    comment: 'Original order quantity'\n  },\n  \n  filled_quantity: {\n    type: DataTypes.DECIMAL(20, 8),\n    defaultValue: 0,\n    allowNull: false,\n    comment: 'Quantity that has been filled'\n  },\n  \n  remaining_quantity: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: false,\n    comment: 'Remaining quantity to be filled'\n  },\n  \n  // Stop order parameters\n  stop_price: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: true,\n    comment: 'Stop price for stop orders'\n  },\n  \n  trailing_amount: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: true,\n    comment: 'Trailing amount for trailing stop orders'\n  },\n  \n  trailing_percent: {\n    type: DataTypes.DECIMAL(5, 4),\n    allowNull: true,\n    comment: 'Trailing percentage for trailing stop orders'\n  },\n  \n  // Order status and lifecycle\n  status: {\n    type: DataTypes.ENUM(\n      'pending',      // Order received but not yet processed\n      'open',         // Order is active in order book\n      'partially_filled', // Order is partially executed\n      'filled',       // Order is completely executed\n      'cancelled',    // Order was cancelled by user\n      'rejected',     // Order was rejected by system\n      'expired'       // Order expired (GTD orders)\n    ),\n    defaultValue: 'pending',\n    allowNull: false,\n    comment: 'Current order status'\n  },\n  \n  // Financial calculations\n  average_price: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: true,\n    comment: 'Volume weighted average price of fills'\n  },\n  \n  total_value: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: true,\n    comment: 'Total value of filled quantity'\n  },\n  \n  fee_amount: {\n    type: DataTypes.DECIMAL(20, 8),\n    defaultValue: 0,\n    allowNull: false,\n    comment: 'Total fee paid for this order'\n  },\n  \n  fee_currency: {\n    type: DataTypes.STRING(10),\n    allowNull: true,\n    comment: 'Currency in which fee is paid'\n  },\n  \n  // Order metadata\n  client_order_id: {\n    type: DataTypes.STRING(64),\n    allowNull: true,\n    comment: 'Client-provided order identifier'\n  },\n  \n  source: {\n    type: DataTypes.ENUM('web', 'mobile', 'api', 'admin'),\n    defaultValue: 'web',\n    allowNull: false,\n    comment: 'Source of the order'\n  },\n  \n  // Risk management\n  risk_score: {\n    type: DataTypes.DECIMAL(5, 2),\n    allowNull: true,\n    comment: 'Risk score assigned by risk management system'\n  },\n  \n  is_margin: {\n    type: DataTypes.BOOLEAN,\n    defaultValue: false,\n    comment: 'Whether this is a margin order'\n  },\n  \n  leverage: {\n    type: DataTypes.DECIMAL(5, 2),\n    allowNull: true,\n    comment: 'Leverage used for margin orders'\n  },\n  \n  // Timing\n  expires_at: {\n    type: DataTypes.DATE,\n    allowNull: true,\n    comment: 'Expiration time for GTD orders'\n  },\n  \n  filled_at: {\n    type: DataTypes.DATE,\n    allowNull: true,\n    comment: 'Time when order was completely filled'\n  },\n  \n  cancelled_at: {\n    type: DataTypes.DATE,\n    allowNull: true,\n    comment: 'Time when order was cancelled'\n  },\n  \n  // Additional data\n  notes: {\n    type: DataTypes.TEXT,\n    allowNull: true,\n    comment: 'Additional notes or rejection reason'\n  },\n\n  // Enhanced fields\n  order_source: {\n    type: DataTypes.ENUM('manual', 'api', 'algo', 'copy_trading', 'bot'),\n    defaultValue: 'manual',\n    allowNull: false\n  },\n  \n  margin_type: {\n    type: DataTypes.ENUM('cross', 'isolated'),\n    allowNull: true,\n    comment: 'Margin type for margin orders'\n  },\n  \n  position_side: {\n    type: DataTypes.ENUM('long', 'short', 'both'),\n    allowNull: true,\n    comment: 'Position side for futures trading'\n  },\n  \n  reduce_only: {\n    type: DataTypes.BOOLEAN,\n    defaultValue: false,\n    comment: 'Whether this order can only reduce position size'\n  },\n  \n  post_only: {\n    type: DataTypes.BOOLEAN,\n    defaultValue: false,\n    comment: 'Whether this order should only be posted as maker'\n  },\n  \n  iceberg_qty: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: true,\n    comment: 'Visible quantity for iceberg orders'\n  },\n  \n  strategy_id: {\n    type: DataTypes.UUID,\n    allowNull: true,\n    comment: 'Associated trading strategy ID'\n  },\n  \n  parent_order_id: {\n    type: DataTypes.UUID,\n    allowNull: true,\n    references: {\n      model: 'orders',\n      key: 'id'\n    },\n    comment: 'Parent order for bracket/OCO orders'\n  },\n  \n  order_group_id: {\n    type: DataTypes.UUID,\n    allowNull: true,\n    comment: 'Group ID for related orders (OCO, bracket)'\n  },\n  \n  trigger_price: {\n    type: DataTypes.DECIMAL(20, 8),\n    allowNull: true,\n    comment: 'Trigger price for conditional orders'\n  },\n  \n  trigger_condition: {\n    type: DataTypes.ENUM('>=', '<=', '=='),\n    allowNull: true,\n    comment: 'Trigger condition for conditional orders'\n  },\n  \n  working_type: {\n    type: DataTypes.ENUM('mark_price', 'contract_price'),\n    allowNull: true,\n    comment: 'Price type used for stop orders'\n  },\n  \n  price_protect: {\n    type: DataTypes.BOOLEAN,\n    defaultValue: false,\n    comment: 'Whether price protection is enabled'\n  },\n  \n  self_trade_prevention: {\n    type: DataTypes.ENUM('none', 'expire_taker', 'expire_maker', 'expire_both'),\n    defaultValue: 'expire_taker',\n    allowNull: false\n  },\n  \n  commission_asset: {\n    type: DataTypes.STRING(10),\n    allowNull: true,\n    comment: 'Asset used to pay commission'\n  },\n  \n  commission_rate: {\n    type: DataTypes.DECIMAL(10, 6),\n    allowNull: true,\n    comment: 'Commission rate applied to this order'\n  },\n  \n  // Timestamps\n  created_at: {\n    type: DataTypes.DATE,\n    defaultValue: DataTypes.NOW,\n    allowNull: false\n  },\n  \n  updated_at: {\n    type: DataTypes.DATE,\n    defaultValue: DataTypes.NOW,\n    allowNull: false\n  }\n}, {\n  tableName: 'orders',\n  timestamps: true,\n  createdAt: 'created_at',\n  updatedAt: 'updated_at',\n  indexes: [\n    {\n      unique: true,\n      fields: ['order_id']\n    },\n    {\n      fields: ['user_id']\n    },\n    {\n      fields: ['market_id']\n    },\n    {\n      fields: ['status']\n    },\n    {\n      fields: ['side']\n    },\n    {\n      fields: ['type']\n    },\n    {\n      fields: ['created_at']\n    },\n    {\n      fields: ['user_id', 'status']\n    },\n    {\n      fields: ['market_id', 'status']\n    },\n    {\n      fields: ['market_id', 'side', 'status']\n    },\n    {\n      fields: ['price', 'created_at'] // For order book sorting\n    }\n  ]\n});\n\n// Associations\nOrder.belongsTo(User, { foreignKey: 'user_id', as: 'user' });\nOrder.belongsTo(Market, { foreignKey: 'market_id', as: 'market' });\n\n// Instance methods\nOrder.prototype.isActive = function() {\n  return ['pending', 'open', 'partially_filled'].includes(this.status);\n};\n\nOrder.prototype.isFilled = function() {\n  return this.status === 'filled';\n};\n\nOrder.prototype.isPartiallyFilled = function() {\n  return this.status === 'partially_filled';\n};\n\nOrder.prototype.canCancel = function() {\n  return ['pending', 'open', 'partially_filled'].includes(this.status);\n};\n\nOrder.prototype.canModify = function() {\n  return ['pending', 'open'].includes(this.status);\n};\n\nOrder.prototype.getFillPercentage = function() {\n  if (parseFloat(this.quantity) === 0) return 0;\n  return (parseFloat(this.filled_quantity) / parseFloat(this.quantity)) * 100;\n};\n\nOrder.prototype.updateFill = function(fillQuantity, fillPrice) {\n  const currentFilled = parseFloat(this.filled_quantity);\n  const newFilled = currentFilled + parseFloat(fillQuantity);\n  const totalQuantity = parseFloat(this.quantity);\n  \n  // Update filled quantity\n  this.filled_quantity = newFilled;\n  this.remaining_quantity = totalQuantity - newFilled;\n  \n  // Update average price (volume weighted)\n  if (this.average_price) {\n    const currentValue = currentFilled * parseFloat(this.average_price);\n    const newValue = parseFloat(fillQuantity) * parseFloat(fillPrice);\n    this.average_price = (currentValue + newValue) / newFilled;\n  } else {\n    this.average_price = fillPrice;\n  }\n  \n  // Update total value\n  this.total_value = newFilled * parseFloat(this.average_price);\n  \n  // Update status\n  if (newFilled >= totalQuantity) {\n    this.status = 'filled';\n    this.filled_at = new Date();\n  } else {\n    this.status = 'partially_filled';\n  }\n};\n\nOrder.prototype.cancel = function(reason = null) {\n  if (!this.canCancel()) {\n    throw new Error('Order cannot be cancelled');\n  }\n  \n  this.status = 'cancelled';\n  this.cancelled_at = new Date();\n  if (reason) {\n    this.notes = reason;\n  }\n};\n\n// Static methods\nOrder.generateOrderId = function() {\n  const timestamp = Date.now().toString(36);\n  const random = Math.random().toString(36).substring(2, 8);\n  return `${timestamp}${random}`.toUpperCase();\n};\n\nOrder.getActiveOrders = async function(userId = null, marketId = null) {\n  const where = {\n    status: ['pending', 'open', 'partially_filled']\n  };\n  \n  if (userId) where.user_id = userId;\n  if (marketId) where.market_id = marketId;\n  \n  return await Order.findAll({\n    where,\n    include: [\n      { model: Market, as: 'market' },\n      { model: User, as: 'user', attributes: ['id', 'username', 'email'] }\n    ],\n    order: [['created_at', 'DESC']]\n  });\n};\n\nOrder.getOrderHistory = async function(userId, limit = 50, offset = 0) {\n  return await Order.findAndCountAll({\n    where: { user_id: userId },\n    include: [\n      { model: Market, as: 'market' }\n    ],\n    order: [['created_at', 'DESC']],\n    limit,\n    offset\n  });\n};\n\nOrder.getOrderBook = async function(marketId, side = null, limit = 50) {\n  const where = {\n    market_id: marketId,\n    status: ['open', 'partially_filled'],\n    type: ['limit'] // Only limit orders appear in order book\n  };\n  \n  if (side) where.side = side;\n  \n  const orderBy = side === 'buy' ? [['price', 'DESC'], ['created_at', 'ASC']] : [['price', 'ASC'], ['created_at', 'ASC']];\n  \n  return await Order.findAll({\n    where,\n    attributes: ['id', 'price', 'remaining_quantity', 'created_at'],\n    order: orderBy,\n    limit\n  });\n};\n\nmodule.exports = Order;"],"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","ignoreList":[]}