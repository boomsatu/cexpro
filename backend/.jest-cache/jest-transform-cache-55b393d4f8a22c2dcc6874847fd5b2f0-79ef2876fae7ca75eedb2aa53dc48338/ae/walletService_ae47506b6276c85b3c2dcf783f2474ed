6778ed48ab120a8973035fb31a817293
/* istanbul ignore next */
function cov_2ogpizxbuj() {
  var path = "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\services\\walletService.js";
  var hash = "ca12ab843f4c6a730f32f1513903762a6b0f6b16";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\services\\walletService.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 15
        },
        end: {
          line: 1,
          column: 32
        }
      },
      "1": {
        start: {
          line: 2,
          column: 25
        },
        end: {
          line: 2,
          column: 41
        }
      },
      "2": {
        start: {
          line: 3,
          column: 14
        },
        end: {
          line: 3,
          column: 30
        }
      },
      "3": {
        start: {
          line: 4,
          column: 16
        },
        end: {
          line: 4,
          column: 40
        }
      },
      "4": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 5,
          column: 37
        }
      },
      "5": {
        start: {
          line: 6,
          column: 14
        },
        end: {
          line: 6,
          column: 31
        }
      },
      "6": {
        start: {
          line: 7,
          column: 15
        },
        end: {
          line: 7,
          column: 35
        }
      },
      "7": {
        start: {
          line: 8,
          column: 14
        },
        end: {
          line: 8,
          column: 40
        }
      },
      "8": {
        start: {
          line: 9,
          column: 15
        },
        end: {
          line: 9,
          column: 42
        }
      },
      "9": {
        start: {
          line: 10,
          column: 16
        },
        end: {
          line: 10,
          column: 44
        }
      },
      "10": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "11": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "12": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "13": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 12
        }
      },
      "14": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 81,
          column: 6
        }
      },
      "15": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 88,
          column: 6
        }
      },
      "16": {
        start: {
          line: 91,
          column: 4
        },
        end: {
          line: 105,
          column: 6
        }
      },
      "17": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 107,
          column: 29
        }
      },
      "18": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "19": {
        start: {
          line: 116,
          column: 6
        },
        end: {
          line: 116,
          column: 34
        }
      },
      "20": {
        start: {
          line: 119,
          column: 6
        },
        end: {
          line: 119,
          column: 51
        }
      },
      "21": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 122,
          column: 34
        }
      },
      "22": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 124,
          column: 61
        }
      },
      "23": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 127,
          column: 65
        }
      },
      "24": {
        start: {
          line: 128,
          column: 6
        },
        end: {
          line: 128,
          column: 18
        }
      },
      "25": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 217,
          column: 5
        }
      },
      "26": {
        start: {
          line: 138,
          column: 6
        },
        end: {
          line: 140,
          column: 7
        }
      },
      "27": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 61
        }
      },
      "28": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 144,
          column: 7
        }
      },
      "29": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 47
        }
      },
      "30": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 154,
          column: 8
        }
      },
      "31": {
        start: {
          line: 156,
          column: 6
        },
        end: {
          line: 158,
          column: 7
        }
      },
      "32": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 83
        }
      },
      "33": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 161,
          column: 85
        }
      },
      "34": {
        start: {
          line: 164,
          column: 21
        },
        end: {
          line: 189,
          column: 8
        }
      },
      "35": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "36": {
        start: {
          line: 201,
          column: 6
        },
        end: {
          line: 201,
          column: 48
        }
      },
      "37": {
        start: {
          line: 204,
          column: 6
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "38": {
        start: {
          line: 212,
          column: 6
        },
        end: {
          line: 212,
          column: 20
        }
      },
      "39": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 215,
          column: 53
        }
      },
      "40": {
        start: {
          line: 216,
          column: 6
        },
        end: {
          line: 216,
          column: 18
        }
      },
      "41": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "42": {
        start: {
          line: 225,
          column: 28
        },
        end: {
          line: 225,
          column: 50
        }
      },
      "43": {
        start: {
          line: 227,
          column: 6
        },
        end: {
          line: 242,
          column: 7
        }
      },
      "44": {
        start: {
          line: 230,
          column: 10
        },
        end: {
          line: 230,
          column: 71
        }
      },
      "45": {
        start: {
          line: 234,
          column: 10
        },
        end: {
          line: 234,
          column: 72
        }
      },
      "46": {
        start: {
          line: 238,
          column: 10
        },
        end: {
          line: 238,
          column: 72
        }
      },
      "47": {
        start: {
          line: 241,
          column: 10
        },
        end: {
          line: 241,
          column: 63
        }
      },
      "48": {
        start: {
          line: 245,
          column: 6
        },
        end: {
          line: 245,
          column: 76
        }
      },
      "49": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 246,
          column: 18
        }
      },
      "50": {
        start: {
          line: 254,
          column: 4
        },
        end: {
          line: 296,
          column: 5
        }
      },
      "51": {
        start: {
          line: 255,
          column: 22
        },
        end: {
          line: 255,
          column: 85
        }
      },
      "52": {
        start: {
          line: 256,
          column: 29
        },
        end: {
          line: 256,
          column: 73
        }
      },
      "53": {
        start: {
          line: 259,
          column: 27
        },
        end: {
          line: 259,
          column: 84
        }
      },
      "54": {
        start: {
          line: 262,
          column: 24
        },
        end: {
          line: 262,
          column: 58
        }
      },
      "55": {
        start: {
          line: 263,
          column: 23
        },
        end: {
          line: 263,
          column: 82
        }
      },
      "56": {
        start: {
          line: 265,
          column: 47
        },
        end: {
          line: 265,
          column: 51
        }
      },
      "57": {
        start: {
          line: 267,
          column: 6
        },
        end: {
          line: 281,
          column: 7
        }
      },
      "58": {
        start: {
          line: 269,
          column: 29
        },
        end: {
          line: 269,
          column: 92
        }
      },
      "59": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 39
        }
      },
      "60": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 43
        }
      },
      "61": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 45
        }
      },
      "62": {
        start: {
          line: 275,
          column: 43
        },
        end: {
          line: 278,
          column: 10
        }
      },
      "63": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 32
        }
      },
      "64": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 55
        }
      },
      "65": {
        start: {
          line: 283,
          column: 6
        },
        end: {
          line: 291,
          column: 8
        }
      },
      "66": {
        start: {
          line: 294,
          column: 6
        },
        end: {
          line: 294,
          column: 63
        }
      },
      "67": {
        start: {
          line: 295,
          column: 6
        },
        end: {
          line: 295,
          column: 18
        }
      },
      "68": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 326,
          column: 5
        }
      },
      "69": {
        start: {
          line: 306,
          column: 29
        },
        end: {
          line: 306,
          column: 74
        }
      },
      "70": {
        start: {
          line: 307,
          column: 27
        },
        end: {
          line: 307,
          column: 85
        }
      },
      "71": {
        start: {
          line: 310,
          column: 22
        },
        end: {
          line: 310,
          column: 67
        }
      },
      "72": {
        start: {
          line: 311,
          column: 24
        },
        end: {
          line: 311,
          column: 62
        }
      },
      "73": {
        start: {
          line: 313,
          column: 6
        },
        end: {
          line: 321,
          column: 8
        }
      },
      "74": {
        start: {
          line: 324,
          column: 6
        },
        end: {
          line: 324,
          column: 64
        }
      },
      "75": {
        start: {
          line: 325,
          column: 6
        },
        end: {
          line: 325,
          column: 18
        }
      },
      "76": {
        start: {
          line: 333,
          column: 4
        },
        end: {
          line: 359,
          column: 5
        }
      },
      "77": {
        start: {
          line: 334,
          column: 22
        },
        end: {
          line: 334,
          column: 44
        }
      },
      "78": {
        start: {
          line: 335,
          column: 29
        },
        end: {
          line: 335,
          column: 74
        }
      },
      "79": {
        start: {
          line: 336,
          column: 27
        },
        end: {
          line: 336,
          column: 85
        }
      },
      "80": {
        start: {
          line: 339,
          column: 24
        },
        end: {
          line: 339,
          column: 59
        }
      },
      "81": {
        start: {
          line: 340,
          column: 23
        },
        end: {
          line: 340,
          column: 82
        }
      },
      "82": {
        start: {
          line: 343,
          column: 22
        },
        end: {
          line: 343,
          column: 86
        }
      },
      "83": {
        start: {
          line: 344,
          column: 24
        },
        end: {
          line: 344,
          column: 58
        }
      },
      "84": {
        start: {
          line: 346,
          column: 6
        },
        end: {
          line: 354,
          column: 8
        }
      },
      "85": {
        start: {
          line: 357,
          column: 6
        },
        end: {
          line: 357,
          column: 64
        }
      },
      "86": {
        start: {
          line: 358,
          column: 6
        },
        end: {
          line: 358,
          column: 18
        }
      },
      "87": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 408,
          column: 5
        }
      },
      "88": {
        start: {
          line: 367,
          column: 24
        },
        end: {
          line: 367,
          column: 82
        }
      },
      "89": {
        start: {
          line: 368,
          column: 22
        },
        end: {
          line: 368,
          column: 43
        }
      },
      "90": {
        start: {
          line: 371,
          column: 25
        },
        end: {
          line: 371,
          column: 45
        }
      },
      "91": {
        start: {
          line: 374,
          column: 6
        },
        end: {
          line: 382,
          column: 7
        }
      },
      "92": {
        start: {
          line: 374,
          column: 19
        },
        end: {
          line: 374,
          column: 20
        }
      },
      "93": {
        start: {
          line: 375,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "94": {
        start: {
          line: 376,
          column: 10
        },
        end: {
          line: 376,
          column: 62
        }
      },
      "95": {
        start: {
          line: 379,
          column: 32
        },
        end: {
          line: 379,
          column: 50
        }
      },
      "96": {
        start: {
          line: 380,
          column: 10
        },
        end: {
          line: 380,
          column: 51
        }
      },
      "97": {
        start: {
          line: 385,
          column: 22
        },
        end: {
          line: 385,
          column: 92
        }
      },
      "98": {
        start: {
          line: 386,
          column: 26
        },
        end: {
          line: 393,
          column: 8
        }
      },
      "99": {
        start: {
          line: 395,
          column: 6
        },
        end: {
          line: 403,
          column: 8
        }
      },
      "100": {
        start: {
          line: 400,
          column: 40
        },
        end: {
          line: 400,
          column: 58
        }
      },
      "101": {
        start: {
          line: 406,
          column: 6
        },
        end: {
          line: 406,
          column: 71
        }
      },
      "102": {
        start: {
          line: 407,
          column: 6
        },
        end: {
          line: 407,
          column: 18
        }
      },
      "103": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 439,
          column: 5
        }
      },
      "104": {
        start: {
          line: 416,
          column: 26
        },
        end: {
          line: 419,
          column: 7
        }
      },
      "105": {
        start: {
          line: 421,
          column: 6
        },
        end: {
          line: 423,
          column: 7
        }
      },
      "106": {
        start: {
          line: 422,
          column: 8
        },
        end: {
          line: 422,
          column: 54
        }
      },
      "107": {
        start: {
          line: 425,
          column: 6
        },
        end: {
          line: 427,
          column: 7
        }
      },
      "108": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 426,
          column: 45
        }
      },
      "109": {
        start: {
          line: 429,
          column: 22
        },
        end: {
          line: 432,
          column: 8
        }
      },
      "110": {
        start: {
          line: 434,
          column: 6
        },
        end: {
          line: 434,
          column: 21
        }
      },
      "111": {
        start: {
          line: 437,
          column: 6
        },
        end: {
          line: 437,
          column: 58
        }
      },
      "112": {
        start: {
          line: 438,
          column: 6
        },
        end: {
          line: 438,
          column: 18
        }
      },
      "113": {
        start: {
          line: 446,
          column: 4
        },
        end: {
          line: 470,
          column: 5
        }
      },
      "114": {
        start: {
          line: 448,
          column: 21
        },
        end: {
          line: 448,
          column: 54
        }
      },
      "115": {
        start: {
          line: 449,
          column: 6
        },
        end: {
          line: 451,
          column: 7
        }
      },
      "116": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 450,
          column: 22
        }
      },
      "117": {
        start: {
          line: 453,
          column: 21
        },
        end: {
          line: 459,
          column: 8
        }
      },
      "118": {
        start: {
          line: 461,
          column: 6
        },
        end: {
          line: 463,
          column: 7
        }
      },
      "119": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 462,
          column: 50
        }
      },
      "120": {
        start: {
          line: 465,
          column: 6
        },
        end: {
          line: 465,
          column: 20
        }
      },
      "121": {
        start: {
          line: 468,
          column: 6
        },
        end: {
          line: 468,
          column: 63
        }
      },
      "122": {
        start: {
          line: 469,
          column: 6
        },
        end: {
          line: 469,
          column: 18
        }
      },
      "123": {
        start: {
          line: 477,
          column: 4
        },
        end: {
          line: 513,
          column: 5
        }
      },
      "124": {
        start: {
          line: 478,
          column: 25
        },
        end: {
          line: 481,
          column: 7
        }
      },
      "125": {
        start: {
          line: 483,
          column: 6
        },
        end: {
          line: 485,
          column: 7
        }
      },
      "126": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 52
        }
      },
      "127": {
        start: {
          line: 487,
          column: 6
        },
        end: {
          line: 489,
          column: 9
        }
      },
      "128": {
        start: {
          line: 492,
          column: 21
        },
        end: {
          line: 492,
          column: 53
        }
      },
      "129": {
        start: {
          line: 493,
          column: 6
        },
        end: {
          line: 499,
          column: 7
        }
      },
      "130": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 44
        }
      },
      "131": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "132": {
        start: {
          line: 496,
          column: 10
        },
        end: {
          line: 496,
          column: 50
        }
      },
      "133": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 48
        }
      },
      "134": {
        start: {
          line: 502,
          column: 6
        },
        end: {
          line: 506,
          column: 9
        }
      },
      "135": {
        start: {
          line: 508,
          column: 6
        },
        end: {
          line: 508,
          column: 18
        }
      },
      "136": {
        start: {
          line: 511,
          column: 6
        },
        end: {
          line: 511,
          column: 61
        }
      },
      "137": {
        start: {
          line: 512,
          column: 6
        },
        end: {
          line: 512,
          column: 18
        }
      },
      "138": {
        start: {
          line: 520,
          column: 4
        },
        end: {
          line: 566,
          column: 5
        }
      },
      "139": {
        start: {
          line: 521,
          column: 21
        },
        end: {
          line: 521,
          column: 52
        }
      },
      "140": {
        start: {
          line: 523,
          column: 6
        },
        end: {
          line: 525,
          column: 7
        }
      },
      "141": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 524,
          column: 44
        }
      },
      "142": {
        start: {
          line: 528,
          column: 30
        },
        end: {
          line: 528,
          column: 54
        }
      },
      "143": {
        start: {
          line: 529,
          column: 25
        },
        end: {
          line: 536,
          column: 7
        }
      },
      "144": {
        start: {
          line: 539,
          column: 24
        },
        end: {
          line: 559,
          column: 8
        }
      },
      "145": {
        start: {
          line: 561,
          column: 6
        },
        end: {
          line: 561,
          column: 23
        }
      },
      "146": {
        start: {
          line: 564,
          column: 6
        },
        end: {
          line: 564,
          column: 60
        }
      },
      "147": {
        start: {
          line: 565,
          column: 6
        },
        end: {
          line: 565,
          column: 18
        }
      },
      "148": {
        start: {
          line: 573,
          column: 4
        },
        end: {
          line: 631,
          column: 5
        }
      },
      "149": {
        start: {
          line: 575,
          column: 22
        },
        end: {
          line: 575,
          column: 65
        }
      },
      "150": {
        start: {
          line: 578,
          column: 27
        },
        end: {
          line: 578,
          column: 96
        }
      },
      "151": {
        start: {
          line: 578,
          column: 45
        },
        end: {
          line: 578,
          column: 95
        }
      },
      "152": {
        start: {
          line: 580,
          column: 6
        },
        end: {
          line: 582,
          column: 7
        }
      },
      "153": {
        start: {
          line: 581,
          column: 8
        },
        end: {
          line: 581,
          column: 71
        }
      },
      "154": {
        start: {
          line: 585,
          column: 28
        },
        end: {
          line: 588,
          column: 7
        }
      },
      "155": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 587,
          column: 72
        }
      },
      "156": {
        start: {
          line: 590,
          column: 31
        },
        end: {
          line: 590,
          column: 33
        }
      },
      "157": {
        start: {
          line: 592,
          column: 6
        },
        end: {
          line: 616,
          column: 7
        }
      },
      "158": {
        start: {
          line: 594,
          column: 19
        },
        end: {
          line: 613,
          column: 10
        }
      },
      "159": {
        start: {
          line: 615,
          column: 8
        },
        end: {
          line: 615,
          column: 34
        }
      },
      "160": {
        start: {
          line: 619,
          column: 6
        },
        end: {
          line: 624,
          column: 9
        }
      },
      "161": {
        start: {
          line: 626,
          column: 6
        },
        end: {
          line: 626,
          column: 30
        }
      },
      "162": {
        start: {
          line: 629,
          column: 6
        },
        end: {
          line: 629,
          column: 64
        }
      },
      "163": {
        start: {
          line: 630,
          column: 6
        },
        end: {
          line: 630,
          column: 18
        }
      },
      "164": {
        start: {
          line: 638,
          column: 4
        },
        end: {
          line: 663,
          column: 5
        }
      },
      "165": {
        start: {
          line: 639,
          column: 6
        },
        end: {
          line: 646,
          column: 9
        }
      },
      "166": {
        start: {
          line: 649,
          column: 6
        },
        end: {
          line: 649,
          column: 42
        }
      },
      "167": {
        start: {
          line: 652,
          column: 6
        },
        end: {
          line: 656,
          column: 9
        }
      },
      "168": {
        start: {
          line: 658,
          column: 6
        },
        end: {
          line: 658,
          column: 18
        }
      },
      "169": {
        start: {
          line: 661,
          column: 6
        },
        end: {
          line: 661,
          column: 53
        }
      },
      "170": {
        start: {
          line: 662,
          column: 6
        },
        end: {
          line: 662,
          column: 18
        }
      },
      "171": {
        start: {
          line: 670,
          column: 4
        },
        end: {
          line: 696,
          column: 5
        }
      },
      "172": {
        start: {
          line: 671,
          column: 6
        },
        end: {
          line: 680,
          column: 9
        }
      },
      "173": {
        start: {
          line: 683,
          column: 6
        },
        end: {
          line: 683,
          column: 42
        }
      },
      "174": {
        start: {
          line: 686,
          column: 6
        },
        end: {
          line: 689,
          column: 9
        }
      },
      "175": {
        start: {
          line: 691,
          column: 6
        },
        end: {
          line: 691,
          column: 18
        }
      },
      "176": {
        start: {
          line: 694,
          column: 6
        },
        end: {
          line: 694,
          column: 55
        }
      },
      "177": {
        start: {
          line: 695,
          column: 6
        },
        end: {
          line: 695,
          column: 18
        }
      },
      "178": {
        start: {
          line: 703,
          column: 4
        },
        end: {
          line: 725,
          column: 5
        }
      },
      "179": {
        start: {
          line: 704,
          column: 26
        },
        end: {
          line: 704,
          column: 46
        }
      },
      "180": {
        start: {
          line: 705,
          column: 6
        },
        end: {
          line: 707,
          column: 7
        }
      },
      "181": {
        start: {
          line: 706,
          column: 8
        },
        end: {
          line: 706,
          column: 37
        }
      },
      "182": {
        start: {
          line: 709,
          column: 20
        },
        end: {
          line: 718,
          column: 8
        }
      },
      "183": {
        start: {
          line: 720,
          column: 6
        },
        end: {
          line: 720,
          column: 19
        }
      },
      "184": {
        start: {
          line: 723,
          column: 6
        },
        end: {
          line: 723,
          column: 63
        }
      },
      "185": {
        start: {
          line: 724,
          column: 6
        },
        end: {
          line: 724,
          column: 18
        }
      },
      "186": {
        start: {
          line: 735,
          column: 4
        },
        end: {
          line: 739,
          column: 6
        }
      },
      "187": {
        start: {
          line: 743,
          column: 4
        },
        end: {
          line: 743,
          column: 51
        }
      },
      "188": {
        start: {
          line: 748,
          column: 23
        },
        end: {
          line: 756,
          column: 6
        }
      },
      "189": {
        start: {
          line: 758,
          column: 4
        },
        end: {
          line: 758,
          column: 57
        }
      },
      "190": {
        start: {
          line: 763,
          column: 4
        },
        end: {
          line: 763,
          column: 50
        }
      },
      "191": {
        start: {
          line: 767,
          column: 23
        },
        end: {
          line: 771,
          column: 5
        }
      },
      "192": {
        start: {
          line: 773,
          column: 4
        },
        end: {
          line: 773,
          column: 39
        }
      },
      "193": {
        start: {
          line: 777,
          column: 27
        },
        end: {
          line: 777,
          column: 62
        }
      },
      "194": {
        start: {
          line: 778,
          column: 4
        },
        end: {
          line: 778,
          column: 79
        }
      },
      "195": {
        start: {
          line: 782,
          column: 4
        },
        end: {
          line: 782,
          column: 76
        }
      },
      "196": {
        start: {
          line: 787,
          column: 4
        },
        end: {
          line: 787,
          column: 58
        }
      },
      "197": {
        start: {
          line: 792,
          column: 4
        },
        end: {
          line: 794,
          column: 15
        }
      },
      "198": {
        start: {
          line: 793,
          column: 6
        },
        end: {
          line: 793,
          column: 37
        }
      },
      "199": {
        start: {
          line: 798,
          column: 4
        },
        end: {
          line: 810,
          column: 5
        }
      },
      "200": {
        start: {
          line: 800,
          column: 6
        },
        end: {
          line: 800,
          column: 37
        }
      },
      "201": {
        start: {
          line: 803,
          column: 6
        },
        end: {
          line: 803,
          column: 44
        }
      },
      "202": {
        start: {
          line: 806,
          column: 6
        },
        end: {
          line: 806,
          column: 26
        }
      },
      "203": {
        start: {
          line: 809,
          column: 6
        },
        end: {
          line: 809,
          column: 66
        }
      },
      "204": {
        start: {
          line: 815,
          column: 4
        },
        end: {
          line: 815,
          column: 47
        }
      },
      "205": {
        start: {
          line: 820,
          column: 4
        },
        end: {
          line: 820,
          column: 52
        }
      },
      "206": {
        start: {
          line: 825,
          column: 25
        },
        end: {
          line: 825,
          column: 29
        }
      },
      "207": {
        start: {
          line: 827,
          column: 4
        },
        end: {
          line: 834,
          column: 5
        }
      },
      "208": {
        start: {
          line: 828,
          column: 22
        },
        end: {
          line: 828,
          column: 62
        }
      },
      "209": {
        start: {
          line: 829,
          column: 23
        },
        end: {
          line: 829,
          column: 70
        }
      },
      "210": {
        start: {
          line: 831,
          column: 6
        },
        end: {
          line: 833,
          column: 7
        }
      },
      "211": {
        start: {
          line: 832,
          column: 8
        },
        end: {
          line: 832,
          column: 39
        }
      },
      "212": {
        start: {
          line: 842,
          column: 4
        },
        end: {
          line: 842,
          column: 31
        }
      },
      "213": {
        start: {
          line: 843,
          column: 4
        },
        end: {
          line: 843,
          column: 33
        }
      },
      "214": {
        start: {
          line: 844,
          column: 4
        },
        end: {
          line: 844,
          column: 32
        }
      },
      "215": {
        start: {
          line: 846,
          column: 4
        },
        end: {
          line: 846,
          column: 45
        }
      },
      "216": {
        start: {
          line: 851,
          column: 22
        },
        end: {
          line: 851,
          column: 41
        }
      },
      "217": {
        start: {
          line: 853,
          column: 0
        },
        end: {
          line: 853,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 21,
            column: 3
          }
        },
        loc: {
          start: {
            line: 21,
            column: 16
          },
          end: {
            line: 108,
            column: 3
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 113,
            column: 2
          },
          end: {
            line: 113,
            column: 3
          }
        },
        loc: {
          start: {
            line: 113,
            column: 28
          },
          end: {
            line: 130,
            column: 3
          }
        },
        line: 113
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 135,
            column: 2
          },
          end: {
            line: 135,
            column: 3
          }
        },
        loc: {
          start: {
            line: 135,
            column: 73
          },
          end: {
            line: 218,
            column: 3
          }
        },
        line: 135
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 223,
            column: 2
          },
          end: {
            line: 223,
            column: 3
          }
        },
        loc: {
          start: {
            line: 223,
            column: 63
          },
          end: {
            line: 248,
            column: 3
          }
        },
        line: 223
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 253,
            column: 2
          },
          end: {
            line: 253,
            column: 3
          }
        },
        loc: {
          start: {
            line: 253,
            column: 56
          },
          end: {
            line: 297,
            column: 3
          }
        },
        line: 253
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 302,
            column: 2
          },
          end: {
            line: 302,
            column: 3
          }
        },
        loc: {
          start: {
            line: 302,
            column: 57
          },
          end: {
            line: 327,
            column: 3
          }
        },
        line: 302
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 332,
            column: 2
          },
          end: {
            line: 332,
            column: 3
          }
        },
        loc: {
          start: {
            line: 332,
            column: 57
          },
          end: {
            line: 360,
            column: 3
          }
        },
        line: 332
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 365,
            column: 2
          },
          end: {
            line: 365,
            column: 3
          }
        },
        loc: {
          start: {
            line: 365,
            column: 65
          },
          end: {
            line: 409,
            column: 3
          }
        },
        line: 365
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 400,
            column: 34
          },
          end: {
            line: 400,
            column: 35
          }
        },
        loc: {
          start: {
            line: 400,
            column: 40
          },
          end: {
            line: 400,
            column: 58
          }
        },
        line: 400
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 414,
            column: 2
          },
          end: {
            line: 414,
            column: 3
          }
        },
        loc: {
          start: {
            line: 414,
            column: 67
          },
          end: {
            line: 440,
            column: 3
          }
        },
        line: 414
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 445,
            column: 2
          },
          end: {
            line: 445,
            column: 3
          }
        },
        loc: {
          start: {
            line: 445,
            column: 36
          },
          end: {
            line: 471,
            column: 3
          }
        },
        line: 445
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 476,
            column: 2
          },
          end: {
            line: 476,
            column: 3
          }
        },
        loc: {
          start: {
            line: 476,
            column: 73
          },
          end: {
            line: 514,
            column: 3
          }
        },
        line: 476
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 519,
            column: 2
          },
          end: {
            line: 519,
            column: 3
          }
        },
        loc: {
          start: {
            line: 519,
            column: 37
          },
          end: {
            line: 567,
            column: 3
          }
        },
        line: 519
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 572,
            column: 2
          },
          end: {
            line: 572,
            column: 3
          }
        },
        loc: {
          start: {
            line: 572,
            column: 75
          },
          end: {
            line: 632,
            column: 3
          }
        },
        line: 572
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 578,
            column: 40
          },
          end: {
            line: 578,
            column: 41
          }
        },
        loc: {
          start: {
            line: 578,
            column: 45
          },
          end: {
            line: 578,
            column: 95
          }
        },
        line: 578
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 585,
            column: 43
          },
          end: {
            line: 585,
            column: 44
          }
        },
        loc: {
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 587,
            column: 72
          }
        },
        line: 586
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 637,
            column: 2
          },
          end: {
            line: 637,
            column: 3
          }
        },
        loc: {
          start: {
            line: 637,
            column: 48
          },
          end: {
            line: 664,
            column: 3
          }
        },
        line: 637
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 669,
            column: 2
          },
          end: {
            line: 669,
            column: 3
          }
        },
        loc: {
          start: {
            line: 669,
            column: 42
          },
          end: {
            line: 697,
            column: 3
          }
        },
        line: 669
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 702,
            column: 2
          },
          end: {
            line: 702,
            column: 3
          }
        },
        loc: {
          start: {
            line: 702,
            column: 38
          },
          end: {
            line: 726,
            column: 3
          }
        },
        line: 702
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 732,
            column: 2
          },
          end: {
            line: 732,
            column: 3
          }
        },
        loc: {
          start: {
            line: 732,
            column: 25
          },
          end: {
            line: 740,
            column: 3
          }
        },
        line: 732
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 742,
            column: 2
          },
          end: {
            line: 742,
            column: 3
          }
        },
        loc: {
          start: {
            line: 742,
            column: 31
          },
          end: {
            line: 744,
            column: 3
          }
        },
        line: 742
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 746,
            column: 2
          },
          end: {
            line: 746,
            column: 3
          }
        },
        loc: {
          start: {
            line: 746,
            column: 54
          },
          end: {
            line: 759,
            column: 3
          }
        },
        line: 746
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 761,
            column: 2
          },
          end: {
            line: 761,
            column: 3
          }
        },
        loc: {
          start: {
            line: 761,
            column: 32
          },
          end: {
            line: 764,
            column: 3
          }
        },
        line: 761
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 766,
            column: 2
          },
          end: {
            line: 766,
            column: 3
          }
        },
        loc: {
          start: {
            line: 766,
            column: 33
          },
          end: {
            line: 774,
            column: 3
          }
        },
        line: 766
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 776,
            column: 2
          },
          end: {
            line: 776,
            column: 3
          }
        },
        loc: {
          start: {
            line: 776,
            column: 28
          },
          end: {
            line: 779,
            column: 3
          }
        },
        line: 776
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 781,
            column: 2
          },
          end: {
            line: 781,
            column: 3
          }
        },
        loc: {
          start: {
            line: 781,
            column: 26
          },
          end: {
            line: 783,
            column: 3
          }
        },
        line: 781
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 785,
            column: 2
          },
          end: {
            line: 785,
            column: 3
          }
        },
        loc: {
          start: {
            line: 785,
            column: 42
          },
          end: {
            line: 788,
            column: 3
          }
        },
        line: 785
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 790,
            column: 2
          },
          end: {
            line: 790,
            column: 3
          }
        },
        loc: {
          start: {
            line: 790,
            column: 25
          },
          end: {
            line: 795,
            column: 3
          }
        },
        line: 790
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 792,
            column: 16
          },
          end: {
            line: 792,
            column: 17
          }
        },
        loc: {
          start: {
            line: 792,
            column: 22
          },
          end: {
            line: 794,
            column: 5
          }
        },
        line: 792
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 797,
            column: 2
          },
          end: {
            line: 797,
            column: 3
          }
        },
        loc: {
          start: {
            line: 797,
            column: 34
          },
          end: {
            line: 811,
            column: 3
          }
        },
        line: 797
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 813,
            column: 2
          },
          end: {
            line: 813,
            column: 3
          }
        },
        loc: {
          start: {
            line: 813,
            column: 28
          },
          end: {
            line: 816,
            column: 3
          }
        },
        line: 813
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 818,
            column: 2
          },
          end: {
            line: 818,
            column: 3
          }
        },
        loc: {
          start: {
            line: 818,
            column: 35
          },
          end: {
            line: 821,
            column: 3
          }
        },
        line: 818
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 823,
            column: 2
          },
          end: {
            line: 823,
            column: 3
          }
        },
        loc: {
          start: {
            line: 823,
            column: 17
          },
          end: {
            line: 835,
            column: 3
          }
        },
        line: 823
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 840,
            column: 2
          },
          end: {
            line: 840,
            column: 3
          }
        },
        loc: {
          start: {
            line: 840,
            column: 12
          },
          end: {
            line: 847,
            column: 3
          }
        },
        line: 840
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 135,
            column: 39
          },
          end: {
            line: 135,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 52
          },
          end: {
            line: 135,
            column: 57
          }
        }],
        line: 135
      },
      "1": {
        loc: {
          start: {
            line: 135,
            column: 59
          },
          end: {
            line: 135,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 69
          },
          end: {
            line: 135,
            column: 71
          }
        }],
        line: 135
      },
      "2": {
        loc: {
          start: {
            line: 138,
            column: 6
          },
          end: {
            line: 140,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 6
          },
          end: {
            line: 140,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "3": {
        loc: {
          start: {
            line: 138,
            column: 10
          },
          end: {
            line: 138,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 10
          },
          end: {
            line: 138,
            column: 17
          }
        }, {
          start: {
            line: 138,
            column: 21
          },
          end: {
            line: 138,
            column: 30
          }
        }],
        line: 138
      },
      "4": {
        loc: {
          start: {
            line: 142,
            column: 6
          },
          end: {
            line: 144,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 6
          },
          end: {
            line: 144,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "5": {
        loc: {
          start: {
            line: 156,
            column: 6
          },
          end: {
            line: 158,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 6
          },
          end: {
            line: 158,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "6": {
        loc: {
          start: {
            line: 156,
            column: 10
          },
          end: {
            line: 156,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 10
          },
          end: {
            line: 156,
            column: 24
          }
        }, {
          start: {
            line: 156,
            column: 28
          },
          end: {
            line: 156,
            column: 50
          }
        }],
        line: 156
      },
      "7": {
        loc: {
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 176,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 20
          },
          end: {
            line: 176,
            column: 37
          }
        }, {
          start: {
            line: 176,
            column: 41
          },
          end: {
            line: 176,
            column: 46
          }
        }],
        line: 176
      },
      "8": {
        loc: {
          start: {
            line: 223,
            column: 49
          },
          end: {
            line: 223,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 223,
            column: 59
          },
          end: {
            line: 223,
            column: 61
          }
        }],
        line: 223
      },
      "9": {
        loc: {
          start: {
            line: 227,
            column: 6
          },
          end: {
            line: 242,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 228,
            column: 19
          }
        }, {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 230,
            column: 71
          }
        }, {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 232,
            column: 19
          }
        }, {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 234,
            column: 72
          }
        }, {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 236,
            column: 19
          }
        }, {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 238,
            column: 72
          }
        }, {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 241,
            column: 63
          }
        }],
        line: 227
      },
      "10": {
        loc: {
          start: {
            line: 253,
            column: 42
          },
          end: {
            line: 253,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 253,
            column: 52
          },
          end: {
            line: 253,
            column: 54
          }
        }],
        line: 253
      },
      "11": {
        loc: {
          start: {
            line: 255,
            column: 22
          },
          end: {
            line: 255,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 255,
            column: 40
          },
          end: {
            line: 255,
            column: 61
          }
        }, {
          start: {
            line: 255,
            column: 64
          },
          end: {
            line: 255,
            column: 85
          }
        }],
        line: 255
      },
      "12": {
        loc: {
          start: {
            line: 267,
            column: 6
          },
          end: {
            line: 281,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 267,
            column: 6
          },
          end: {
            line: 281,
            column: 7
          }
        }, {
          start: {
            line: 273,
            column: 13
          },
          end: {
            line: 281,
            column: 7
          }
        }],
        line: 267
      },
      "13": {
        loc: {
          start: {
            line: 267,
            column: 10
          },
          end: {
            line: 267,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 10
          },
          end: {
            line: 267,
            column: 31
          }
        }, {
          start: {
            line: 267,
            column: 35
          },
          end: {
            line: 267,
            column: 51
          }
        }],
        line: 267
      },
      "14": {
        loc: {
          start: {
            line: 284,
            column: 17
          },
          end: {
            line: 284,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 284,
            column: 53
          },
          end: {
            line: 284,
            column: 62
          }
        }, {
          start: {
            line: 284,
            column: 65
          },
          end: {
            line: 284,
            column: 74
          }
        }],
        line: 284
      },
      "15": {
        loc: {
          start: {
            line: 302,
            column: 43
          },
          end: {
            line: 302,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 302,
            column: 53
          },
          end: {
            line: 302,
            column: 55
          }
        }],
        line: 302
      },
      "16": {
        loc: {
          start: {
            line: 332,
            column: 43
          },
          end: {
            line: 332,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 332,
            column: 53
          },
          end: {
            line: 332,
            column: 55
          }
        }],
        line: 332
      },
      "17": {
        loc: {
          start: {
            line: 365,
            column: 51
          },
          end: {
            line: 365,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 365,
            column: 61
          },
          end: {
            line: 365,
            column: 63
          }
        }],
        line: 365
      },
      "18": {
        loc: {
          start: {
            line: 367,
            column: 24
          },
          end: {
            line: 367,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 367,
            column: 24
          },
          end: {
            line: 367,
            column: 41
          }
        }, {
          start: {
            line: 367,
            column: 45
          },
          end: {
            line: 367,
            column: 82
          }
        }],
        line: 367
      },
      "19": {
        loc: {
          start: {
            line: 368,
            column: 22
          },
          end: {
            line: 368,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 368,
            column: 22
          },
          end: {
            line: 368,
            column: 37
          }
        }, {
          start: {
            line: 368,
            column: 41
          },
          end: {
            line: 368,
            column: 43
          }
        }],
        line: 368
      },
      "20": {
        loc: {
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 375,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: 377,
            column: 15
          },
          end: {
            line: 381,
            column: 9
          }
        }],
        line: 375
      },
      "21": {
        loc: {
          start: {
            line: 385,
            column: 22
          },
          end: {
            line: 385,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 47
          },
          end: {
            line: 385,
            column: 68
          }
        }, {
          start: {
            line: 385,
            column: 71
          },
          end: {
            line: 385,
            column: 92
          }
        }],
        line: 385
      },
      "22": {
        loc: {
          start: {
            line: 414,
            column: 31
          },
          end: {
            line: 414,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 414,
            column: 42
          },
          end: {
            line: 414,
            column: 46
          }
        }],
        line: 414
      },
      "23": {
        loc: {
          start: {
            line: 414,
            column: 48
          },
          end: {
            line: 414,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 414,
            column: 61
          },
          end: {
            line: 414,
            column: 65
          }
        }],
        line: 414
      },
      "24": {
        loc: {
          start: {
            line: 421,
            column: 6
          },
          end: {
            line: 423,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 6
          },
          end: {
            line: 423,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 421
      },
      "25": {
        loc: {
          start: {
            line: 425,
            column: 6
          },
          end: {
            line: 427,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 6
          },
          end: {
            line: 427,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "26": {
        loc: {
          start: {
            line: 449,
            column: 6
          },
          end: {
            line: 451,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 449,
            column: 6
          },
          end: {
            line: 451,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 449
      },
      "27": {
        loc: {
          start: {
            line: 461,
            column: 6
          },
          end: {
            line: 463,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 461,
            column: 6
          },
          end: {
            line: 463,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 461
      },
      "28": {
        loc: {
          start: {
            line: 476,
            column: 50
          },
          end: {
            line: 476,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 476,
            column: 67
          },
          end: {
            line: 476,
            column: 71
          }
        }],
        line: 476
      },
      "29": {
        loc: {
          start: {
            line: 483,
            column: 6
          },
          end: {
            line: 485,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 483,
            column: 6
          },
          end: {
            line: 485,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 483
      },
      "30": {
        loc: {
          start: {
            line: 493,
            column: 6
          },
          end: {
            line: 499,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 493,
            column: 6
          },
          end: {
            line: 499,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 493
      },
      "31": {
        loc: {
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "32": {
        loc: {
          start: {
            line: 523,
            column: 6
          },
          end: {
            line: 525,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 523,
            column: 6
          },
          end: {
            line: 525,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 523
      },
      "33": {
        loc: {
          start: {
            line: 572,
            column: 49
          },
          end: {
            line: 572,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 572,
            column: 68
          },
          end: {
            line: 572,
            column: 73
          }
        }],
        line: 572
      },
      "34": {
        loc: {
          start: {
            line: 578,
            column: 45
          },
          end: {
            line: 578,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 578,
            column: 45
          },
          end: {
            line: 578,
            column: 79
          }
        }, {
          start: {
            line: 578,
            column: 83
          },
          end: {
            line: 578,
            column: 95
          }
        }],
        line: 578
      },
      "35": {
        loc: {
          start: {
            line: 580,
            column: 6
          },
          end: {
            line: 582,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 580,
            column: 6
          },
          end: {
            line: 582,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 580
      },
      "36": {
        loc: {
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 587,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 586,
            column: 8
          },
          end: {
            line: 586,
            column: 32
          }
        }, {
          start: {
            line: 587,
            column: 8
          },
          end: {
            line: 587,
            column: 72
          }
        }],
        line: 586
      },
      "37": {
        loc: {
          start: {
            line: 702,
            column: 23
          },
          end: {
            line: 702,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 702,
            column: 32
          },
          end: {
            line: 702,
            column: 36
          }
        }],
        line: 702
      },
      "38": {
        loc: {
          start: {
            line: 705,
            column: 6
          },
          end: {
            line: 707,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 705,
            column: 6
          },
          end: {
            line: 707,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 705
      },
      "39": {
        loc: {
          start: {
            line: 758,
            column: 11
          },
          end: {
            line: 758,
            column: 56
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 758,
            column: 24
          },
          end: {
            line: 758,
            column: 52
          }
        }, {
          start: {
            line: 758,
            column: 55
          },
          end: {
            line: 758,
            column: 56
          }
        }],
        line: 758
      },
      "40": {
        loc: {
          start: {
            line: 773,
            column: 11
          },
          end: {
            line: 773,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 773,
            column: 11
          },
          end: {
            line: 773,
            column: 33
          }
        }, {
          start: {
            line: 773,
            column: 37
          },
          end: {
            line: 773,
            column: 38
          }
        }],
        line: 773
      },
      "41": {
        loc: {
          start: {
            line: 778,
            column: 11
          },
          end: {
            line: 778,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 778,
            column: 61
          },
          end: {
            line: 778,
            column: 67
          }
        }, {
          start: {
            line: 778,
            column: 70
          },
          end: {
            line: 778,
            column: 78
          }
        }],
        line: 778
      },
      "42": {
        loc: {
          start: {
            line: 827,
            column: 4
          },
          end: {
            line: 834,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 827,
            column: 4
          },
          end: {
            line: 834,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 827
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0, 0, 0, 0, 0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ca12ab843f4c6a730f32f1513903762a6b0f6b16"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ogpizxbuj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ogpizxbuj();
const crypto =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[0]++, require('crypto'));
const {
  BIP32Factory
} =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[1]++, require('bip32'));
const bip39 =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[2]++, require('bip39'));
const bitcoin =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[3]++, require('bitcoinjs-lib'));
const ecc =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[4]++, require('tiny-secp256k1'));
const bip32 =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[5]++, BIP32Factory(ecc));
const {
  Op
} =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[6]++, require('sequelize'));
const redis =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[7]++, require('../config/redis'));
const Wallet =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[8]++, require('../models/Wallet'));
const Balance =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[9]++, require('../models/Balance'));
const Transaction =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[10]++, require('../models/Transaction'));
const User =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[11]++, require('../models/User'));
const EventEmitter =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[12]++, require('events'));

/**
 * Wallet Service
 * Mengelola sistem dompet multi-signature dengan arsitektur hot/warm/cold wallet,
 * HD wallet generation, address management, dan blockchain integration
 */
class WalletService extends EventEmitter {
  constructor() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[0]++;
    cov_2ogpizxbuj().s[13]++;
    super();

    // Configuration
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[14]++;
    this.config = {
      // HD Wallet configuration
      hdWallet: {
        masterSeedEntropy: 256,
        // bits
        derivationPaths: {
          bitcoin: "m/44'/0'/0'",
          ethereum: "m/44'/60'/0'",
          litecoin: "m/44'/2'/0'",
          dogecoin: "m/44'/3'/0'"
        },
        addressGap: 20,
        // unused addresses to maintain
        maxAddressIndex: 1000000
      },
      // Multi-signature configuration
      multisig: {
        defaultThreshold: 2,
        maxSigners: 15,
        minSigners: 2
      },
      // Wallet types and their security levels
      walletTypes: {
        hot: {
          maxBalance: 1000000,
          // USD equivalent
          autoConsolidation: true,
          requiresApproval: false
        },
        warm: {
          maxBalance: 10000000,
          // USD equivalent
          autoConsolidation: false,
          requiresApproval: true
        },
        cold: {
          maxBalance: Infinity,
          autoConsolidation: false,
          requiresApproval: true,
          offlineSigningRequired: true
        }
      },
      // Security settings
      security: {
        encryptionAlgorithm: 'aes-256-gcm',
        keyDerivationRounds: 100000,
        backupRequired: true,
        auditTrail: true
      },
      // Operational limits
      limits: {
        dailyWithdrawalLimit: 100000,
        // USD
        maxPendingTransactions: 100,
        consolidationThreshold: 0.1,
        // BTC equivalent
        dustThreshold: 0.00001 // BTC
      }
    };

    // Cache for frequently accessed data
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[15]++;
    this.cache = {
      wallets: new Map(),
      addresses: new Map(),
      balances: new Map()
    };

    // Network configurations
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[16]++;
    this.networks = {
      bitcoin: bitcoin.networks.bitcoin,
      testnet: bitcoin.networks.testnet,
      litecoin: {
        messagePrefix: '\x19Litecoin Signed Message:\n',
        bech32: 'ltc',
        bip32: {
          public: 0x019da462,
          private: 0x019d9cfe
        },
        pubKeyHash: 0x30,
        scriptHash: 0x32,
        wif: 0xb0
      }
    };
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[17]++;
    this.initializeService();
  }

  /**
   * Initialize wallet service
   */
  async initializeService() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[1]++;
    cov_2ogpizxbuj().s[18]++;
    try {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[19]++;
      // Load master keys from secure storage
      await this.loadMasterKeys();

      // Initialize blockchain connections
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[20]++;
      await this.initializeBlockchainConnections();

      // Start background tasks
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[21]++;
      this.startBackgroundTasks();
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[22]++;
      console.log('Wallet service initialized successfully');
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[23]++;
      console.error('Error initializing wallet service:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[24]++;
      throw error;
    }
  }

  /**
   * Create new wallet for user
   */
  async createWallet(userId, currency, walletType =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[0][0]++, 'hot'), options =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[2]++;
    cov_2ogpizxbuj().s[25]++;
    try {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[26]++;
      // Validate parameters
      if (
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[3][0]++, !userId) ||
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[3][1]++, !currency)) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[2][0]++;
        cov_2ogpizxbuj().s[27]++;
        throw new Error('User ID and currency are required');
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[2][1]++;
      }
      cov_2ogpizxbuj().s[28]++;
      if (!['hot', 'warm', 'cold'].includes(walletType)) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[4][0]++;
        cov_2ogpizxbuj().s[29]++;
        throw new Error('Invalid wallet type');
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[4][1]++;
      }

      // Check if user already has a wallet for this currency and type
      const existingWallet =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[30]++, await Wallet.findOne({
        where: {
          user_id: userId,
          currency: currency.toLowerCase(),
          wallet_type: walletType,
          status: 'active'
        }
      }));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[6][0]++, existingWallet) &&
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[6][1]++, !options.allowMultiple)) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[5][0]++;
        cov_2ogpizxbuj().s[32]++;
        throw new Error(`User already has a ${walletType} wallet for ${currency}`);
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[5][1]++;
      }

      // Generate wallet data
      const walletData =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[33]++, await this.generateWalletData(currency, walletType, options));

      // Create wallet record
      const wallet =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[34]++, await Wallet.create({
        user_id: userId,
        wallet_type: walletType,
        currency: currency.toLowerCase(),
        network: walletData.network,
        address: walletData.address,
        public_key: walletData.publicKey,
        derivation_path: walletData.derivationPath,
        address_index: walletData.addressIndex,
        parent_wallet_id: walletData.parentWalletId,
        multisig_config: walletData.multisigConfig,
        status: 'active',
        is_primary:
        /* istanbul ignore next */
        (cov_2ogpizxbuj().b[7][0]++, options.isPrimary) ||
        /* istanbul ignore next */
        (cov_2ogpizxbuj().b[7][1]++, false),
        current_balance: 0,
        pending_balance: 0,
        encryption_key_id: walletData.encryptionKeyId,
        backup_status: 'pending',
        risk_score: this.calculateRiskScore(walletType),
        monitoring_enabled: true,
        daily_withdrawal_limit: this.config.limits.dailyWithdrawalLimit,
        metadata: {
          createdBy: 'system',
          walletVersion: '1.0',
          ...options.metadata
        }
      }));

      // Create initial balance record
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[35]++;
      await Balance.create({
        user_id: userId,
        currency: currency.toLowerCase(),
        currency_type: this.getCurrencyType(currency),
        available: 0,
        locked: 0
      });

      // Cache wallet
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[36]++;
      this.cache.wallets.set(wallet.id, wallet);

      // Emit event
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[37]++;
      this.emit('walletCreated', {
        walletId: wallet.id,
        userId,
        currency,
        walletType,
        address: wallet.address
      });
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[38]++;
      return wallet;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[39]++;
      console.error('Error creating wallet:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[40]++;
      throw error;
    }
  }

  /**
   * Generate wallet data based on currency and type
   */
  async generateWalletData(currency, walletType, options =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[8][0]++, {})) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[3]++;
    cov_2ogpizxbuj().s[41]++;
    try {
      const currencyLower =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[42]++, currency.toLowerCase());
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[43]++;
      switch (currencyLower) {
        case 'btc':
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[9][0]++;
        case 'bitcoin':
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[9][1]++;
          cov_2ogpizxbuj().s[44]++;
          return await this.generateBitcoinWallet(walletType, options);
        case 'eth':
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[9][2]++;
        case 'ethereum':
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[9][3]++;
          cov_2ogpizxbuj().s[45]++;
          return await this.generateEthereumWallet(walletType, options);
        case 'ltc':
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[9][4]++;
        case 'litecoin':
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[9][5]++;
          cov_2ogpizxbuj().s[46]++;
          return await this.generateLitecoinWallet(walletType, options);
        default:
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[9][6]++;
          cov_2ogpizxbuj().s[47]++;
          throw new Error(`Unsupported currency: ${currency}`);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[48]++;
      console.error(`Error generating wallet data for ${currency}:`, error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[49]++;
      throw error;
    }
  }

  /**
   * Generate Bitcoin wallet
   */
  async generateBitcoinWallet(walletType, options =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[10][0]++, {})) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[4]++;
    cov_2ogpizxbuj().s[50]++;
    try {
      const network =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[51]++, options.testnet ?
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[11][0]++, this.networks.testnet) :
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[11][1]++, this.networks.bitcoin));
      const derivationPath =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[52]++, this.config.hdWallet.derivationPaths.bitcoin);

      // Get next address index
      const addressIndex =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[53]++, await this.getNextAddressIndex('bitcoin', derivationPath));

      // Generate HD wallet
      const masterKey =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[54]++, await this.getMasterKey('bitcoin'));
      const childKey =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[55]++, masterKey.derivePath(`${derivationPath}/0/${addressIndex}`));
      let address,
        publicKey,
        multisigConfig =
        /* istanbul ignore next */
        (cov_2ogpizxbuj().s[56]++, null);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[57]++;
      if (
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[13][0]++, walletType === 'cold') ||
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[13][1]++, options.multisig)) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[12][0]++;
        // Generate multi-signature wallet
        const multisigData =
        /* istanbul ignore next */
        (cov_2ogpizxbuj().s[58]++, await this.generateMultisigWallet('bitcoin', childKey, options));
        /* istanbul ignore next */
        cov_2ogpizxbuj().s[59]++;
        address = multisigData.address;
        /* istanbul ignore next */
        cov_2ogpizxbuj().s[60]++;
        publicKey = multisigData.publicKey;
        /* istanbul ignore next */
        cov_2ogpizxbuj().s[61]++;
        multisigConfig = multisigData.config;
      } else {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[12][1]++;
        // Generate single-signature wallet
        const {
          address: singleAddress
        } =
        /* istanbul ignore next */
        (cov_2ogpizxbuj().s[62]++, bitcoin.payments.p2wpkh({
          pubkey: childKey.publicKey,
          network
        }));
        /* istanbul ignore next */
        cov_2ogpizxbuj().s[63]++;
        address = singleAddress;
        /* istanbul ignore next */
        cov_2ogpizxbuj().s[64]++;
        publicKey = childKey.publicKey.toString('hex');
      }
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[65]++;
      return {
        network: network === this.networks.testnet ?
        /* istanbul ignore next */
        (cov_2ogpizxbuj().b[14][0]++, 'testnet') :
        /* istanbul ignore next */
        (cov_2ogpizxbuj().b[14][1]++, 'mainnet'),
        address,
        publicKey,
        derivationPath: `${derivationPath}/0/${addressIndex}`,
        addressIndex,
        multisigConfig,
        encryptionKeyId: await this.generateEncryptionKey()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[66]++;
      console.error('Error generating Bitcoin wallet:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[67]++;
      throw error;
    }
  }

  /**
   * Generate Ethereum wallet
   */
  async generateEthereumWallet(walletType, options =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[15][0]++, {})) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[5]++;
    cov_2ogpizxbuj().s[68]++;
    try {
      // Ethereum wallet generation logic
      // This is a simplified implementation
      const derivationPath =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[69]++, this.config.hdWallet.derivationPaths.ethereum);
      const addressIndex =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[70]++, await this.getNextAddressIndex('ethereum', derivationPath));

      // Generate address (simplified)
      const address =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[71]++, '0x' + crypto.randomBytes(20).toString('hex'));
      const publicKey =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[72]++, crypto.randomBytes(33).toString('hex'));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[73]++;
      return {
        network: 'mainnet',
        address,
        publicKey,
        derivationPath: `${derivationPath}/0/${addressIndex}`,
        addressIndex,
        multisigConfig: null,
        encryptionKeyId: await this.generateEncryptionKey()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[74]++;
      console.error('Error generating Ethereum wallet:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[75]++;
      throw error;
    }
  }

  /**
   * Generate Litecoin wallet
   */
  async generateLitecoinWallet(walletType, options =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[16][0]++, {})) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[6]++;
    cov_2ogpizxbuj().s[76]++;
    try {
      const network =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[77]++, this.networks.litecoin);
      const derivationPath =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[78]++, this.config.hdWallet.derivationPaths.litecoin);
      const addressIndex =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[79]++, await this.getNextAddressIndex('litecoin', derivationPath));

      // Generate HD wallet
      const masterKey =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[80]++, await this.getMasterKey('litecoin'));
      const childKey =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[81]++, masterKey.derivePath(`${derivationPath}/0/${addressIndex}`));

      // Generate address (simplified for Litecoin)
      const address =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[82]++, 'L' + crypto.randomBytes(25).toString('base64').substring(0, 33));
      const publicKey =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[83]++, childKey.publicKey.toString('hex'));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[84]++;
      return {
        network: 'mainnet',
        address,
        publicKey,
        derivationPath: `${derivationPath}/0/${addressIndex}`,
        addressIndex,
        multisigConfig: null,
        encryptionKeyId: await this.generateEncryptionKey()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[85]++;
      console.error('Error generating Litecoin wallet:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[86]++;
      throw error;
    }
  }

  /**
   * Generate multi-signature wallet
   */
  async generateMultisigWallet(currency, childKey, options =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[17][0]++, {})) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[7]++;
    cov_2ogpizxbuj().s[87]++;
    try {
      const threshold =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[88]++,
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[18][0]++, options.threshold) ||
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[18][1]++, this.config.multisig.defaultThreshold));
      const signers =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[89]++,
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[19][0]++, options.signers) ||
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[19][1]++, []));

      // Add current key as first signer
      const publicKeys =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[90]++, [childKey.publicKey]);

      // Add additional signers
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[91]++;
      for (let i =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[92]++, 1); i < threshold + 1; i++) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().s[93]++;
        if (signers[i - 1]) {
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[20][0]++;
          cov_2ogpizxbuj().s[94]++;
          publicKeys.push(Buffer.from(signers[i - 1], 'hex'));
        } else {
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[20][1]++;
          // Generate additional keys for multi-sig
          const additionalKey =
          /* istanbul ignore next */
          (cov_2ogpizxbuj().s[95]++, childKey.derive(i));
          /* istanbul ignore next */
          cov_2ogpizxbuj().s[96]++;
          publicKeys.push(additionalKey.publicKey);
        }
      }

      // Create multi-sig address
      const network =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[97]++, currency === 'bitcoin' ?
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[21][0]++, this.networks.bitcoin) :
      /* istanbul ignore next */
      (cov_2ogpizxbuj().b[21][1]++, this.networks.testnet));
      const {
        address
      } =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[98]++, bitcoin.payments.p2wsh({
        redeem: bitcoin.payments.p2ms({
          m: threshold,
          pubkeys: publicKeys,
          network
        }),
        network
      }));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[99]++;
      return {
        address,
        publicKey: childKey.publicKey.toString('hex'),
        config: {
          threshold,
          signers: publicKeys.map(pk => {
            /* istanbul ignore next */
            cov_2ogpizxbuj().f[8]++;
            cov_2ogpizxbuj().s[100]++;
            return pk.toString('hex');
          }),
          type: 'p2wsh'
        }
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[101]++;
      console.error('Error generating multi-signature wallet:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[102]++;
      throw error;
    }
  }

  /**
   * Get user wallets
   */
  async getUserWallets(userId, currency =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[22][0]++, null), walletType =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[23][0]++, null)) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[9]++;
    cov_2ogpizxbuj().s[103]++;
    try {
      const whereClause =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[104]++, {
        user_id: userId,
        status: 'active'
      });
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[105]++;
      if (currency) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[24][0]++;
        cov_2ogpizxbuj().s[106]++;
        whereClause.currency = currency.toLowerCase();
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[24][1]++;
      }
      cov_2ogpizxbuj().s[107]++;
      if (walletType) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[25][0]++;
        cov_2ogpizxbuj().s[108]++;
        whereClause.wallet_type = walletType;
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[25][1]++;
      }
      const wallets =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[109]++, await Wallet.findAll({
        where: whereClause,
        order: [['created_at', 'DESC']]
      }));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[110]++;
      return wallets;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[111]++;
      console.error('Error getting user wallets:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[112]++;
      throw error;
    }
  }

  /**
   * Get wallet by address
   */
  async getWalletByAddress(address) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[10]++;
    cov_2ogpizxbuj().s[113]++;
    try {
      // Check cache first
      const cached =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[114]++, this.cache.addresses.get(address));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[115]++;
      if (cached) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[26][0]++;
        cov_2ogpizxbuj().s[116]++;
        return cached;
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[26][1]++;
      }
      const wallet =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[117]++, await Wallet.findOne({
        where: {
          address,
          status: 'active'
        },
        include: [{
          model: User,
          attributes: ['id', 'username', 'email']
        }]
      }));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[118]++;
      if (wallet) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[27][0]++;
        cov_2ogpizxbuj().s[119]++;
        this.cache.addresses.set(address, wallet);
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[27][1]++;
      }
      cov_2ogpizxbuj().s[120]++;
      return wallet;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[121]++;
      console.error('Error getting wallet by address:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[122]++;
      throw error;
    }
  }

  /**
   * Update wallet balance
   */
  async updateWalletBalance(walletId, newBalance, pendingBalance =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[28][0]++, null)) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[11]++;
    cov_2ogpizxbuj().s[123]++;
    try {
      const updateData =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[124]++, {
        current_balance: newBalance,
        last_balance_update: new Date()
      });
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[125]++;
      if (pendingBalance !== null) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[29][0]++;
        cov_2ogpizxbuj().s[126]++;
        updateData.pending_balance = pendingBalance;
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[29][1]++;
      }
      cov_2ogpizxbuj().s[127]++;
      await Wallet.update(updateData, {
        where: {
          id: walletId
        }
      });

      // Update cache
      const wallet =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[128]++, this.cache.wallets.get(walletId));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[129]++;
      if (wallet) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[30][0]++;
        cov_2ogpizxbuj().s[130]++;
        wallet.current_balance = newBalance;
        /* istanbul ignore next */
        cov_2ogpizxbuj().s[131]++;
        if (pendingBalance !== null) {
          /* istanbul ignore next */
          cov_2ogpizxbuj().b[31][0]++;
          cov_2ogpizxbuj().s[132]++;
          wallet.pending_balance = pendingBalance;
        } else
        /* istanbul ignore next */
        {
          cov_2ogpizxbuj().b[31][1]++;
        }
        cov_2ogpizxbuj().s[133]++;
        wallet.last_balance_update = new Date();
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[30][1]++;
      }

      // Emit event
      cov_2ogpizxbuj().s[134]++;
      this.emit('balanceUpdated', {
        walletId,
        newBalance,
        pendingBalance
      });
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[135]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[136]++;
      console.error('Error updating wallet balance:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[137]++;
      throw error;
    }
  }

  /**
   * Generate new address for wallet
   */
  async generateNewAddress(walletId) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[12]++;
    cov_2ogpizxbuj().s[138]++;
    try {
      const wallet =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[139]++, await Wallet.findByPk(walletId));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[140]++;
      if (!wallet) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[32][0]++;
        cov_2ogpizxbuj().s[141]++;
        throw new Error('Wallet not found');
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[32][1]++;
      }

      // Generate new address based on HD wallet
      const newAddressIndex =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[142]++, wallet.address_index + 1);
      const walletData =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[143]++, await this.generateWalletData(wallet.currency, wallet.wallet_type, {
        addressIndex: newAddressIndex,
        parentWalletId: wallet.parent_wallet_id
      }));

      // Create new wallet record for the new address
      const newWallet =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[144]++, await Wallet.create({
        user_id: wallet.user_id,
        wallet_type: wallet.wallet_type,
        currency: wallet.currency,
        network: wallet.network,
        address: walletData.address,
        public_key: walletData.publicKey,
        derivation_path: walletData.derivationPath,
        address_index: newAddressIndex,
        parent_wallet_id: wallet.id,
        multisig_config: wallet.multisig_config,
        status: 'active',
        is_primary: false,
        current_balance: 0,
        pending_balance: 0,
        encryption_key_id: walletData.encryptionKeyId,
        backup_status: 'pending',
        risk_score: wallet.risk_score,
        monitoring_enabled: true,
        daily_withdrawal_limit: wallet.daily_withdrawal_limit
      }));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[145]++;
      return newWallet;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[146]++;
      console.error('Error generating new address:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[147]++;
      throw error;
    }
  }

  /**
   * Consolidate wallet funds
   */
  async consolidateWalletFunds(userId, currency, targetWalletType =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[33][0]++, 'hot')) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[13]++;
    cov_2ogpizxbuj().s[148]++;
    try {
      // Get all wallets for user and currency
      const wallets =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[149]++, await this.getUserWallets(userId, currency));

      // Find target wallet
      const targetWallet =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[150]++, wallets.find(w => {
        /* istanbul ignore next */
        cov_2ogpizxbuj().f[14]++;
        cov_2ogpizxbuj().s[151]++;
        return /* istanbul ignore next */(cov_2ogpizxbuj().b[34][0]++, w.wallet_type === targetWalletType) &&
        /* istanbul ignore next */
        (cov_2ogpizxbuj().b[34][1]++, w.is_primary);
      }));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[152]++;
      if (!targetWallet) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[35][0]++;
        cov_2ogpizxbuj().s[153]++;
        throw new Error(`Target ${targetWalletType} wallet not found`);
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[35][1]++;
      }

      // Find wallets with balance to consolidate
      const sourceWallets =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[154]++, wallets.filter(w => {
        /* istanbul ignore next */
        cov_2ogpizxbuj().f[15]++;
        cov_2ogpizxbuj().s[155]++;
        return /* istanbul ignore next */(cov_2ogpizxbuj().b[36][0]++, w.id !== targetWallet.id) &&
        /* istanbul ignore next */
        (cov_2ogpizxbuj().b[36][1]++, parseFloat(w.current_balance) > this.config.limits.dustThreshold);
      }));
      const consolidationTxs =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[156]++, []);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[157]++;
      for (const sourceWallet of sourceWallets) {
        // Create consolidation transaction
        const tx =
        /* istanbul ignore next */
        (cov_2ogpizxbuj().s[158]++, await Transaction.create({
          internal_tx_id: this.generateTransactionId(),
          user_id: userId,
          wallet_id: sourceWallet.id,
          type: 'internal_transfer',
          currency: currency.toLowerCase(),
          amount: sourceWallet.current_balance,
          fee: 0,
          from_address: sourceWallet.address,
          to_address: targetWallet.address,
          status: 'pending',
          risk_score: 1,
          // Low risk for internal transfers
          aml_status: 'approved',
          notes: 'Wallet consolidation',
          metadata: {
            consolidationType: 'automatic',
            sourceWalletId: sourceWallet.id,
            targetWalletId: targetWallet.id
          }
        }));
        /* istanbul ignore next */
        cov_2ogpizxbuj().s[159]++;
        consolidationTxs.push(tx);
      }

      // Emit event
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[160]++;
      this.emit('consolidationStarted', {
        userId,
        currency,
        targetWalletId: targetWallet.id,
        transactionCount: consolidationTxs.length
      });
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[161]++;
      return consolidationTxs;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[162]++;
      console.error('Error consolidating wallet funds:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[163]++;
      throw error;
    }
  }

  /**
   * Freeze wallet
   */
  async freezeWallet(walletId, reason, adminId) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[16]++;
    cov_2ogpizxbuj().s[164]++;
    try {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[165]++;
      await Wallet.update({
        is_frozen: true,
        frozen_reason: reason,
        frozen_by: adminId,
        frozen_at: new Date()
      }, {
        where: {
          id: walletId
        }
      });

      // Clear cache
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[166]++;
      this.cache.wallets.delete(walletId);

      // Emit event
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[167]++;
      this.emit('walletFrozen', {
        walletId,
        reason,
        adminId
      });
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[168]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[169]++;
      console.error('Error freezing wallet:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[170]++;
      throw error;
    }
  }

  /**
   * Unfreeze wallet
   */
  async unfreezeWallet(walletId, adminId) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[17]++;
    cov_2ogpizxbuj().s[171]++;
    try {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[172]++;
      await Wallet.update({
        is_frozen: false,
        frozen_reason: null,
        frozen_by: null,
        frozen_at: null,
        unfrozen_by: adminId,
        unfrozen_at: new Date()
      }, {
        where: {
          id: walletId
        }
      });

      // Clear cache
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[173]++;
      this.cache.wallets.delete(walletId);

      // Emit event
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[174]++;
      this.emit('walletUnfrozen', {
        walletId,
        adminId
      });
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[175]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[176]++;
      console.error('Error unfreezing wallet:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[177]++;
      throw error;
    }
  }

  /**
   * Get wallet statistics
   */
  async getWalletStats(userId =
  /* istanbul ignore next */
  (cov_2ogpizxbuj().b[37][0]++, null)) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[18]++;
    cov_2ogpizxbuj().s[178]++;
    try {
      const whereClause =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[179]++, {
        status: 'active'
      });
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[180]++;
      if (userId) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().b[38][0]++;
        cov_2ogpizxbuj().s[181]++;
        whereClause.user_id = userId;
      } else
      /* istanbul ignore next */
      {
        cov_2ogpizxbuj().b[38][1]++;
      }
      const stats =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[182]++, await Wallet.findAll({
        where: whereClause,
        attributes: ['wallet_type', 'currency', [Wallet.sequelize.fn('COUNT', '*'), 'count'], [Wallet.sequelize.fn('SUM', Wallet.sequelize.col('current_balance')), 'total_balance']],
        group: ['wallet_type', 'currency']
      }));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[183]++;
      return stats;
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[184]++;
      console.error('Error getting wallet statistics:', error);
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[185]++;
      throw error;
    }
  }

  /**
   * Helper methods
   */

  async loadMasterKeys() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[19]++;
    cov_2ogpizxbuj().s[186]++;
    // Load master keys from secure storage
    // This is a simplified implementation
    this.masterKeys = {
      bitcoin: bip32.fromSeed(crypto.randomBytes(64)),
      ethereum: bip32.fromSeed(crypto.randomBytes(64)),
      litecoin: bip32.fromSeed(crypto.randomBytes(64))
    };
  }
  async getMasterKey(currency) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[20]++;
    cov_2ogpizxbuj().s[187]++;
    return this.masterKeys[currency.toLowerCase()];
  }
  async getNextAddressIndex(currency, derivationPath) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[21]++;
    // Get next available address index
    const lastWallet =
    /* istanbul ignore next */
    (cov_2ogpizxbuj().s[188]++, await Wallet.findOne({
      where: {
        currency: currency.toLowerCase(),
        derivation_path: {
          [Op.like]: `${derivationPath}%`
        }
      },
      order: [['address_index', 'DESC']]
    }));
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[189]++;
    return lastWallet ?
    /* istanbul ignore next */
    (cov_2ogpizxbuj().b[39][0]++, lastWallet.address_index + 1) :
    /* istanbul ignore next */
    (cov_2ogpizxbuj().b[39][1]++, 0);
  }
  async generateEncryptionKey() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[22]++;
    cov_2ogpizxbuj().s[190]++;
    // Generate encryption key ID
    return crypto.randomBytes(16).toString('hex');
  }
  calculateRiskScore(walletType) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[23]++;
    const riskScores =
    /* istanbul ignore next */
    (cov_2ogpizxbuj().s[191]++, {
      hot: 3,
      warm: 2,
      cold: 1
    });
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[192]++;
    return /* istanbul ignore next */(cov_2ogpizxbuj().b[40][0]++, riskScores[walletType]) ||
    /* istanbul ignore next */
    (cov_2ogpizxbuj().b[40][1]++, 3);
  }
  getCurrencyType(currency) {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[24]++;
    const fiatCurrencies =
    /* istanbul ignore next */
    (cov_2ogpizxbuj().s[193]++, ['usd', 'eur', 'gbp', 'jpy', 'cny']);
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[194]++;
    return fiatCurrencies.includes(currency.toLowerCase()) ?
    /* istanbul ignore next */
    (cov_2ogpizxbuj().b[41][0]++, 'fiat') :
    /* istanbul ignore next */
    (cov_2ogpizxbuj().b[41][1]++, 'crypto');
  }
  generateTransactionId() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[25]++;
    cov_2ogpizxbuj().s[195]++;
    return 'tx_' + Date.now() + '_' + crypto.randomBytes(8).toString('hex');
  }
  async initializeBlockchainConnections() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[26]++;
    cov_2ogpizxbuj().s[196]++;
    // Initialize blockchain connections
    console.log('Initializing blockchain connections...');
  }
  startBackgroundTasks() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[27]++;
    cov_2ogpizxbuj().s[197]++;
    // Start background tasks like balance updates, consolidation, etc.
    setInterval(() => {
      /* istanbul ignore next */
      cov_2ogpizxbuj().f[28]++;
      cov_2ogpizxbuj().s[198]++;
      this.performMaintenanceTasks();
    }, 300000); // Every 5 minutes
  }
  async performMaintenanceTasks() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[29]++;
    cov_2ogpizxbuj().s[199]++;
    try {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[200]++;
      // Update balances
      await this.updateAllBalances();

      // Perform auto-consolidation
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[201]++;
      await this.performAutoConsolidation();

      // Clean up cache
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[202]++;
      this.cleanupCache();
    } catch (error) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[203]++;
      console.error('Error performing maintenance tasks:', error);
    }
  }
  async updateAllBalances() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[30]++;
    cov_2ogpizxbuj().s[204]++;
    // Update all wallet balances from blockchain
    console.log('Updating wallet balances...');
  }
  async performAutoConsolidation() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[31]++;
    cov_2ogpizxbuj().s[205]++;
    // Perform automatic consolidation for hot wallets
    console.log('Performing auto-consolidation...');
  }
  cleanupCache() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[32]++;
    // Clean up old cache entries
    const maxCacheSize =
    /* istanbul ignore next */
    (cov_2ogpizxbuj().s[206]++, 1000);
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[207]++;
    if (this.cache.wallets.size > maxCacheSize) {
      /* istanbul ignore next */
      cov_2ogpizxbuj().b[42][0]++;
      const entries =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[208]++, Array.from(this.cache.wallets.entries()));
      const toDelete =
      /* istanbul ignore next */
      (cov_2ogpizxbuj().s[209]++, entries.slice(0, entries.length - maxCacheSize));
      /* istanbul ignore next */
      cov_2ogpizxbuj().s[210]++;
      for (const [key] of toDelete) {
        /* istanbul ignore next */
        cov_2ogpizxbuj().s[211]++;
        this.cache.wallets.delete(key);
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ogpizxbuj().b[42][1]++;
    }
  }

  /**
   * Cleanup resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_2ogpizxbuj().f[33]++;
    cov_2ogpizxbuj().s[212]++;
    // Clear caches
    this.cache.wallets.clear();
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[213]++;
    this.cache.addresses.clear();
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[214]++;
    this.cache.balances.clear();
    /* istanbul ignore next */
    cov_2ogpizxbuj().s[215]++;
    console.log('Wallet service cleaned up');
  }
}

// Create singleton instance
const walletService =
/* istanbul ignore next */
(cov_2ogpizxbuj().s[216]++, new WalletService());
/* istanbul ignore next */
cov_2ogpizxbuj().s[217]++;
module.exports = walletService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,