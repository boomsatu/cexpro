a965ad7a74e65f3a813532941a1bf5fd
/* istanbul ignore next */
function cov_r9ixqbrao() {
  var path = "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\models\\User.js";
  var hash = "93b62ff75d49455693256db2fbac87bff33b0908";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\models\\User.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 22
        },
        end: {
          line: 1,
          column: 42
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 34
        }
      },
      "2": {
        start: {
          line: 3,
          column: 15
        },
        end: {
          line: 3,
          column: 32
        }
      },
      "3": {
        start: {
          line: 4,
          column: 18
        },
        end: {
          line: 4,
          column: 38
        }
      },
      "4": {
        start: {
          line: 5,
          column: 15
        },
        end: {
          line: 5,
          column: 32
        }
      },
      "5": {
        start: {
          line: 6,
          column: 22
        },
        end: {
          line: 6,
          column: 51
        }
      },
      "6": {
        start: {
          line: 9,
          column: 13
        },
        end: {
          line: 251,
          column: 2
        }
      },
      "7": {
        start: {
          line: 254,
          column: 0
        },
        end: {
          line: 256,
          column: 2
        }
      },
      "8": {
        start: {
          line: 255,
          column: 2
        },
        end: {
          line: 255,
          column: 58
        }
      },
      "9": {
        start: {
          line: 258,
          column: 0
        },
        end: {
          line: 260,
          column: 2
        }
      },
      "10": {
        start: {
          line: 259,
          column: 2
        },
        end: {
          line: 259,
          column: 59
        }
      },
      "11": {
        start: {
          line: 262,
          column: 0
        },
        end: {
          line: 279,
          column: 2
        }
      },
      "12": {
        start: {
          line: 264,
          column: 2
        },
        end: {
          line: 269,
          column: 3
        }
      },
      "13": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 268,
          column: 7
        }
      },
      "14": {
        start: {
          line: 271,
          column: 18
        },
        end: {
          line: 271,
          column: 59
        }
      },
      "15": {
        start: {
          line: 274,
          column: 2
        },
        end: {
          line: 276,
          column: 3
        }
      },
      "16": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 56
        }
      },
      "17": {
        start: {
          line: 278,
          column: 2
        },
        end: {
          line: 278,
          column: 30
        }
      },
      "18": {
        start: {
          line: 281,
          column: 0
        },
        end: {
          line: 286,
          column: 2
        }
      },
      "19": {
        start: {
          line: 282,
          column: 2
        },
        end: {
          line: 285,
          column: 5
        }
      },
      "20": {
        start: {
          line: 288,
          column: 0
        },
        end: {
          line: 293,
          column: 2
        }
      },
      "21": {
        start: {
          line: 289,
          column: 16
        },
        end: {
          line: 289,
          column: 54
        }
      },
      "22": {
        start: {
          line: 290,
          column: 2
        },
        end: {
          line: 290,
          column: 84
        }
      },
      "23": {
        start: {
          line: 291,
          column: 2
        },
        end: {
          line: 291,
          column: 58
        }
      },
      "24": {
        start: {
          line: 292,
          column: 2
        },
        end: {
          line: 292,
          column: 15
        }
      },
      "25": {
        start: {
          line: 295,
          column: 0
        },
        end: {
          line: 300,
          column: 2
        }
      },
      "26": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 296,
          column: 54
        }
      },
      "27": {
        start: {
          line: 297,
          column: 2
        },
        end: {
          line: 297,
          column: 88
        }
      },
      "28": {
        start: {
          line: 298,
          column: 2
        },
        end: {
          line: 298,
          column: 67
        }
      },
      "29": {
        start: {
          line: 299,
          column: 2
        },
        end: {
          line: 299,
          column: 15
        }
      },
      "30": {
        start: {
          line: 302,
          column: 0
        },
        end: {
          line: 311,
          column: 2
        }
      },
      "31": {
        start: {
          line: 303,
          column: 17
        },
        end: {
          line: 307,
          column: 4
        }
      },
      "32": {
        start: {
          line: 309,
          column: 2
        },
        end: {
          line: 309,
          column: 39
        }
      },
      "33": {
        start: {
          line: 310,
          column: 2
        },
        end: {
          line: 310,
          column: 16
        }
      },
      "34": {
        start: {
          line: 313,
          column: 0
        },
        end: {
          line: 324,
          column: 2
        }
      },
      "35": {
        start: {
          line: 314,
          column: 2
        },
        end: {
          line: 316,
          column: 3
        }
      },
      "36": {
        start: {
          line: 315,
          column: 4
        },
        end: {
          line: 315,
          column: 17
        }
      },
      "37": {
        start: {
          line: 318,
          column: 2
        },
        end: {
          line: 323,
          column: 5
        }
      },
      "38": {
        start: {
          line: 326,
          column: 0
        },
        end: {
          line: 333,
          column: 2
        }
      },
      "39": {
        start: {
          line: 327,
          column: 16
        },
        end: {
          line: 327,
          column: 18
        }
      },
      "40": {
        start: {
          line: 328,
          column: 2
        },
        end: {
          line: 330,
          column: 3
        }
      },
      "41": {
        start: {
          line: 328,
          column: 15
        },
        end: {
          line: 328,
          column: 16
        }
      },
      "42": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 329,
          column: 68
        }
      },
      "43": {
        start: {
          line: 331,
          column: 2
        },
        end: {
          line: 331,
          column: 27
        }
      },
      "44": {
        start: {
          line: 332,
          column: 2
        },
        end: {
          line: 332,
          column: 15
        }
      },
      "45": {
        start: {
          line: 335,
          column: 0
        },
        end: {
          line: 343,
          column: 2
        }
      },
      "46": {
        start: {
          line: 336,
          column: 2
        },
        end: {
          line: 338,
          column: 3
        }
      },
      "47": {
        start: {
          line: 337,
          column: 4
        },
        end: {
          line: 337,
          column: 17
        }
      },
      "48": {
        start: {
          line: 340,
          column: 23
        },
        end: {
          line: 340,
          column: 77
        }
      },
      "49": {
        start: {
          line: 340,
          column: 52
        },
        end: {
          line: 340,
          column: 76
        }
      },
      "50": {
        start: {
          line: 341,
          column: 2
        },
        end: {
          line: 341,
          column: 51
        }
      },
      "51": {
        start: {
          line: 342,
          column: 2
        },
        end: {
          line: 342,
          column: 14
        }
      },
      "52": {
        start: {
          line: 345,
          column: 0
        },
        end: {
          line: 358,
          column: 2
        }
      },
      "53": {
        start: {
          line: 346,
          column: 2
        },
        end: {
          line: 348,
          column: 3
        }
      },
      "54": {
        start: {
          line: 347,
          column: 4
        },
        end: {
          line: 347,
          column: 48
        }
      },
      "55": {
        start: {
          line: 350,
          column: 21
        },
        end: {
          line: 355,
          column: 4
        }
      },
      "56": {
        start: {
          line: 357,
          column: 2
        },
        end: {
          line: 357,
          column: 38
        }
      },
      "57": {
        start: {
          line: 360,
          column: 0
        },
        end: {
          line: 371,
          column: 2
        }
      },
      "58": {
        start: {
          line: 361,
          column: 17
        },
        end: {
          line: 361,
          column: 46
        }
      },
      "59": {
        start: {
          line: 364,
          column: 2
        },
        end: {
          line: 364,
          column: 25
        }
      },
      "60": {
        start: {
          line: 365,
          column: 2
        },
        end: {
          line: 365,
          column: 32
        }
      },
      "61": {
        start: {
          line: 366,
          column: 2
        },
        end: {
          line: 366,
          column: 28
        }
      },
      "62": {
        start: {
          line: 367,
          column: 2
        },
        end: {
          line: 367,
          column: 35
        }
      },
      "63": {
        start: {
          line: 368,
          column: 2
        },
        end: {
          line: 368,
          column: 39
        }
      },
      "64": {
        start: {
          line: 370,
          column: 2
        },
        end: {
          line: 370,
          column: 16
        }
      },
      "65": {
        start: {
          line: 374,
          column: 0
        },
        end: {
          line: 383,
          column: 2
        }
      },
      "66": {
        start: {
          line: 375,
          column: 2
        },
        end: {
          line: 382,
          column: 5
        }
      },
      "67": {
        start: {
          line: 385,
          column: 0
        },
        end: {
          line: 395,
          column: 2
        }
      },
      "68": {
        start: {
          line: 386,
          column: 22
        },
        end: {
          line: 386,
          column: 77
        }
      },
      "69": {
        start: {
          line: 387,
          column: 2
        },
        end: {
          line: 394,
          column: 5
        }
      },
      "70": {
        start: {
          line: 397,
          column: 0
        },
        end: {
          line: 407,
          column: 2
        }
      },
      "71": {
        start: {
          line: 398,
          column: 22
        },
        end: {
          line: 398,
          column: 77
        }
      },
      "72": {
        start: {
          line: 399,
          column: 2
        },
        end: {
          line: 406,
          column: 5
        }
      },
      "73": {
        start: {
          line: 410,
          column: 0
        },
        end: {
          line: 415,
          column: 3
        }
      },
      "74": {
        start: {
          line: 411,
          column: 2
        },
        end: {
          line: 414,
          column: 3
        }
      },
      "75": {
        start: {
          line: 412,
          column: 17
        },
        end: {
          line: 412,
          column: 41
        }
      },
      "76": {
        start: {
          line: 413,
          column: 4
        },
        end: {
          line: 413,
          column: 59
        }
      },
      "77": {
        start: {
          line: 417,
          column: 0
        },
        end: {
          line: 422,
          column: 3
        }
      },
      "78": {
        start: {
          line: 418,
          column: 2
        },
        end: {
          line: 421,
          column: 3
        }
      },
      "79": {
        start: {
          line: 419,
          column: 17
        },
        end: {
          line: 419,
          column: 41
        }
      },
      "80": {
        start: {
          line: 420,
          column: 4
        },
        end: {
          line: 420,
          column: 59
        }
      },
      "81": {
        start: {
          line: 424,
          column: 0
        },
        end: {
          line: 424,
          column: 22
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 254,
            column: 33
          },
          end: {
            line: 254,
            column: 34
          }
        },
        loc: {
          start: {
            line: 254,
            column: 67
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 254
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 258,
            column: 26
          },
          end: {
            line: 258,
            column: 27
          }
        },
        loc: {
          start: {
            line: 258,
            column: 37
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 258
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 262,
            column: 34
          },
          end: {
            line: 262,
            column: 35
          }
        },
        loc: {
          start: {
            line: 262,
            column: 51
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 262
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 281,
            column: 36
          },
          end: {
            line: 281,
            column: 37
          }
        },
        loc: {
          start: {
            line: 281,
            column: 53
          },
          end: {
            line: 286,
            column: 1
          }
        },
        line: 281
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 288,
            column: 44
          },
          end: {
            line: 288,
            column: 45
          }
        },
        loc: {
          start: {
            line: 288,
            column: 55
          },
          end: {
            line: 293,
            column: 1
          }
        },
        line: 288
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 295,
            column: 48
          },
          end: {
            line: 295,
            column: 49
          }
        },
        loc: {
          start: {
            line: 295,
            column: 59
          },
          end: {
            line: 300,
            column: 1
          }
        },
        line: 295
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 302,
            column: 26
          },
          end: {
            line: 302,
            column: 27
          }
        },
        loc: {
          start: {
            line: 302,
            column: 37
          },
          end: {
            line: 311,
            column: 1
          }
        },
        line: 302
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 313,
            column: 27
          },
          end: {
            line: 313,
            column: 28
          }
        },
        loc: {
          start: {
            line: 313,
            column: 43
          },
          end: {
            line: 324,
            column: 1
          }
        },
        line: 313
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 326,
            column: 37
          },
          end: {
            line: 326,
            column: 38
          }
        },
        loc: {
          start: {
            line: 326,
            column: 48
          },
          end: {
            line: 333,
            column: 1
          }
        },
        line: 326
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 335,
            column: 31
          },
          end: {
            line: 335,
            column: 32
          }
        },
        loc: {
          start: {
            line: 335,
            column: 52
          },
          end: {
            line: 343,
            column: 1
          }
        },
        line: 335
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 340,
            column: 47
          },
          end: {
            line: 340,
            column: 48
          }
        },
        loc: {
          start: {
            line: 340,
            column: 52
          },
          end: {
            line: 340,
            column: 76
          }
        },
        line: 340
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 345,
            column: 35
          },
          end: {
            line: 345,
            column: 36
          }
        },
        loc: {
          start: {
            line: 345,
            column: 52
          },
          end: {
            line: 358,
            column: 1
          }
        },
        line: 345
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 360,
            column: 24
          },
          end: {
            line: 360,
            column: 25
          }
        },
        loc: {
          start: {
            line: 360,
            column: 35
          },
          end: {
            line: 371,
            column: 1
          }
        },
        line: 360
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 374,
            column: 29
          },
          end: {
            line: 374,
            column: 30
          }
        },
        loc: {
          start: {
            line: 374,
            column: 50
          },
          end: {
            line: 383,
            column: 1
          }
        },
        line: 374
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 385,
            column: 32
          },
          end: {
            line: 385,
            column: 33
          }
        },
        loc: {
          start: {
            line: 385,
            column: 48
          },
          end: {
            line: 395,
            column: 1
          }
        },
        line: 385
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 397,
            column: 36
          },
          end: {
            line: 397,
            column: 37
          }
        },
        loc: {
          start: {
            line: 397,
            column: 52
          },
          end: {
            line: 407,
            column: 1
          }
        },
        line: 397
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 410,
            column: 18
          },
          end: {
            line: 410,
            column: 19
          }
        },
        loc: {
          start: {
            line: 410,
            column: 34
          },
          end: {
            line: 415,
            column: 1
          }
        },
        line: 410
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 417,
            column: 18
          },
          end: {
            line: 417,
            column: 19
          }
        },
        loc: {
          start: {
            line: 417,
            column: 34
          },
          end: {
            line: 422,
            column: 1
          }
        },
        line: 417
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 259,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 12
          },
          end: {
            line: 259,
            column: 26
          }
        }, {
          start: {
            line: 259,
            column: 30
          },
          end: {
            line: 259,
            column: 57
          }
        }],
        line: 259
      },
      "1": {
        loc: {
          start: {
            line: 264,
            column: 2
          },
          end: {
            line: 269,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 2
          },
          end: {
            line: 269,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "2": {
        loc: {
          start: {
            line: 264,
            column: 6
          },
          end: {
            line: 264,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 6
          },
          end: {
            line: 264,
            column: 20
          }
        }, {
          start: {
            line: 264,
            column: 24
          },
          end: {
            line: 264,
            column: 51
          }
        }],
        line: 264
      },
      "3": {
        loc: {
          start: {
            line: 274,
            column: 2
          },
          end: {
            line: 276,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 2
          },
          end: {
            line: 276,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "4": {
        loc: {
          start: {
            line: 274,
            column: 6
          },
          end: {
            line: 274,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 274,
            column: 6
          },
          end: {
            line: 274,
            column: 33
          }
        }, {
          start: {
            line: 274,
            column: 37
          },
          end: {
            line: 274,
            column: 53
          }
        }],
        line: 274
      },
      "5": {
        loc: {
          start: {
            line: 314,
            column: 2
          },
          end: {
            line: 316,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 2
          },
          end: {
            line: 316,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "6": {
        loc: {
          start: {
            line: 336,
            column: 2
          },
          end: {
            line: 338,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 2
          },
          end: {
            line: 338,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "7": {
        loc: {
          start: {
            line: 336,
            column: 6
          },
          end: {
            line: 336,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 6
          },
          end: {
            line: 336,
            column: 23
          }
        }, {
          start: {
            line: 336,
            column: 27
          },
          end: {
            line: 336,
            column: 73
          }
        }],
        line: 336
      },
      "8": {
        loc: {
          start: {
            line: 346,
            column: 2
          },
          end: {
            line: 348,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 2
          },
          end: {
            line: 348,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "9": {
        loc: {
          start: {
            line: 411,
            column: 2
          },
          end: {
            line: 414,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 2
          },
          end: {
            line: 414,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "10": {
        loc: {
          start: {
            line: 418,
            column: 2
          },
          end: {
            line: 421,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 418,
            column: 2
          },
          end: {
            line: 421,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 418
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "93b62ff75d49455693256db2fbac87bff33b0908"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_r9ixqbrao = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_r9ixqbrao();
const {
  DataTypes
} =
/* istanbul ignore next */
(cov_r9ixqbrao().s[0]++, require('sequelize'));
const bcrypt =
/* istanbul ignore next */
(cov_r9ixqbrao().s[1]++, require('bcryptjs'));
const crypto =
/* istanbul ignore next */
(cov_r9ixqbrao().s[2]++, require('crypto'));
const speakeasy =
/* istanbul ignore next */
(cov_r9ixqbrao().s[3]++, require('speakeasy'));
const QRCode =
/* istanbul ignore next */
(cov_r9ixqbrao().s[4]++, require('qrcode'));
const {
  sequelize
} =
/* istanbul ignore next */
(cov_r9ixqbrao().s[5]++, require('../config/database'));

// User model definition
const User =
/* istanbul ignore next */
(cov_r9ixqbrao().s[6]++, sequelize.define('User', {
  id: {
    type: DataTypes.UUID,
    defaultValue: DataTypes.UUIDV4,
    primaryKey: true
  },
  email: {
    type: DataTypes.STRING,
    allowNull: false,
    unique: true,
    validate: {
      isEmail: true
    }
  },
  username: {
    type: DataTypes.STRING,
    allowNull: false,
    unique: true,
    validate: {
      len: [3, 30],
      isAlphanumeric: true
    }
  },
  password: {
    type: DataTypes.STRING,
    allowNull: false,
    validate: {
      len: [8, 128]
    }
  },
  firstName: {
    type: DataTypes.STRING,
    allowNull: false,
    validate: {
      len: [1, 50]
    }
  },
  lastName: {
    type: DataTypes.STRING,
    allowNull: false,
    validate: {
      len: [1, 50]
    }
  },
  phoneNumber: {
    type: DataTypes.STRING,
    allowNull: true,
    validate: {
      is: /^\+?[1-9]\d{1,14}$/
    }
  },
  dateOfBirth: {
    type: DataTypes.DATEONLY,
    allowNull: true
  },
  country: {
    type: DataTypes.STRING(2),
    allowNull: true,
    validate: {
      len: [2, 2]
    }
  },
  role: {
    type: DataTypes.ENUM('user', 'admin', 'moderator', 'support'),
    defaultValue: 'user'
  },
  status: {
    type: DataTypes.ENUM('pending', 'active', 'suspended', 'banned'),
    defaultValue: 'pending'
  },
  emailVerified: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  phoneVerified: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  kycLevel: {
    type: DataTypes.INTEGER,
    defaultValue: 0,
    validate: {
      min: 0,
      max: 3
    }
  },
  twoFactorEnabled: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  twoFactorSecret: {
    type: DataTypes.STRING,
    allowNull: true
  },
  backupCodes: {
    type: DataTypes.JSON,
    allowNull: true
  },
  lastLoginAt: {
    type: DataTypes.DATE,
    allowNull: true
  },
  lastLoginIp: {
    type: DataTypes.INET,
    allowNull: true
  },
  loginAttempts: {
    type: DataTypes.INTEGER,
    defaultValue: 0
  },
  lockUntil: {
    type: DataTypes.DATE,
    allowNull: true
  },
  passwordResetToken: {
    type: DataTypes.STRING,
    allowNull: true
  },
  passwordResetExpires: {
    type: DataTypes.DATE,
    allowNull: true
  },
  emailVerificationToken: {
    type: DataTypes.STRING,
    allowNull: true
  },
  emailVerificationExpires: {
    type: DataTypes.DATE,
    allowNull: true
  },
  preferences: {
    type: DataTypes.JSON,
    defaultValue: {
      language: 'en',
      timezone: 'UTC',
      currency: 'USD',
      notifications: {
        email: true,
        sms: false,
        push: true,
        trading: true,
        security: true,
        marketing: false
      }
    }
  },
  metadata: {
    type: DataTypes.JSON,
    defaultValue: {}
  },
  // Enhanced fields
  tradingLevel: {
    type: DataTypes.ENUM('beginner', 'intermediate', 'advanced', 'professional'),
    defaultValue: 'beginner'
  },
  riskTolerance: {
    type: DataTypes.ENUM('low', 'medium', 'high'),
    defaultValue: 'medium'
  },
  maxDailyTradingVolume: {
    type: DataTypes.DECIMAL(20, 8),
    allowNull: true
  },
  maxPositionSize: {
    type: DataTypes.DECIMAL(20, 8),
    allowNull: true
  },
  marginTradingEnabled: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  apiTradingEnabled: {
    type: DataTypes.BOOLEAN,
    defaultValue: false
  },
  referralCode: {
    type: DataTypes.STRING(20),
    allowNull: true,
    unique: true
  },
  referredBy: {
    type: DataTypes.UUID,
    allowNull: true,
    references: {
      model: 'users',
      key: 'id'
    }
  },
  totalTradingVolume: {
    type: DataTypes.DECIMAL(30, 8),
    defaultValue: 0
  },
  totalTrades: {
    type: DataTypes.INTEGER,
    defaultValue: 0
  },
  lastTradeAt: {
    type: DataTypes.DATE,
    allowNull: true
  },
  vipLevel: {
    type: DataTypes.INTEGER,
    defaultValue: 0,
    validate: {
      min: 0,
      max: 10
    }
  },
  makerFeeRate: {
    type: DataTypes.DECIMAL(5, 4),
    defaultValue: 0.001
  },
  takerFeeRate: {
    type: DataTypes.DECIMAL(5, 4),
    defaultValue: 0.001
  }
}, {
  tableName: 'users',
  timestamps: true,
  paranoid: true,
  // Soft delete
  indexes: [{
    unique: true,
    fields: ['email']
  }, {
    unique: true,
    fields: ['username']
  }, {
    fields: ['status']
  }, {
    fields: ['role']
  }, {
    fields: ['kycLevel']
  }, {
    fields: ['createdAt']
  }]
}));

// Instance methods
/* istanbul ignore next */
cov_r9ixqbrao().s[7]++;
User.prototype.comparePassword = async function (candidatePassword) {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[0]++;
  cov_r9ixqbrao().s[8]++;
  return bcrypt.compare(candidatePassword, this.password);
};
/* istanbul ignore next */
cov_r9ixqbrao().s[9]++;
User.prototype.isLocked = function () {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[1]++;
  cov_r9ixqbrao().s[10]++;
  return !!(
  /* istanbul ignore next */
  (cov_r9ixqbrao().b[0][0]++, this.lockUntil) &&
  /* istanbul ignore next */
  (cov_r9ixqbrao().b[0][1]++, this.lockUntil > Date.now()));
};
/* istanbul ignore next */
cov_r9ixqbrao().s[11]++;
User.prototype.incLoginAttempts = async function () {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[2]++;
  cov_r9ixqbrao().s[12]++;
  // If we have a previous lock that has expired, restart at 1
  if (
  /* istanbul ignore next */
  (cov_r9ixqbrao().b[2][0]++, this.lockUntil) &&
  /* istanbul ignore next */
  (cov_r9ixqbrao().b[2][1]++, this.lockUntil < Date.now())) {
    /* istanbul ignore next */
    cov_r9ixqbrao().b[1][0]++;
    cov_r9ixqbrao().s[13]++;
    return this.update({
      loginAttempts: 1,
      lockUntil: null
    });
  } else
  /* istanbul ignore next */
  {
    cov_r9ixqbrao().b[1][1]++;
  }
  const updates =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[14]++, {
    loginAttempts: this.loginAttempts + 1
  });

  // Lock account after 5 failed attempts for 2 hours
  /* istanbul ignore next */
  cov_r9ixqbrao().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_r9ixqbrao().b[4][0]++, this.loginAttempts + 1 >= 5) &&
  /* istanbul ignore next */
  (cov_r9ixqbrao().b[4][1]++, !this.isLocked())) {
    /* istanbul ignore next */
    cov_r9ixqbrao().b[3][0]++;
    cov_r9ixqbrao().s[16]++;
    updates.lockUntil = Date.now() + 2 * 60 * 60 * 1000; // 2 hours
  } else
  /* istanbul ignore next */
  {
    cov_r9ixqbrao().b[3][1]++;
  }
  cov_r9ixqbrao().s[17]++;
  return this.update(updates);
};
/* istanbul ignore next */
cov_r9ixqbrao().s[18]++;
User.prototype.resetLoginAttempts = async function () {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[3]++;
  cov_r9ixqbrao().s[19]++;
  return this.update({
    loginAttempts: 0,
    lockUntil: null
  });
};
/* istanbul ignore next */
cov_r9ixqbrao().s[20]++;
User.prototype.generatePasswordResetToken = function () {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[4]++;
  const token =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[21]++, crypto.randomBytes(32).toString('hex'));
  /* istanbul ignore next */
  cov_r9ixqbrao().s[22]++;
  this.passwordResetToken = crypto.createHash('sha256').update(token).digest('hex');
  /* istanbul ignore next */
  cov_r9ixqbrao().s[23]++;
  this.passwordResetExpires = Date.now() + 10 * 60 * 1000; // 10 minutes
  /* istanbul ignore next */
  cov_r9ixqbrao().s[24]++;
  return token;
};
/* istanbul ignore next */
cov_r9ixqbrao().s[25]++;
User.prototype.generateEmailVerificationToken = function () {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[5]++;
  const token =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[26]++, crypto.randomBytes(32).toString('hex'));
  /* istanbul ignore next */
  cov_r9ixqbrao().s[27]++;
  this.emailVerificationToken = crypto.createHash('sha256').update(token).digest('hex');
  /* istanbul ignore next */
  cov_r9ixqbrao().s[28]++;
  this.emailVerificationExpires = Date.now() + 24 * 60 * 60 * 1000; // 24 hours
  /* istanbul ignore next */
  cov_r9ixqbrao().s[29]++;
  return token;
};
/* istanbul ignore next */
cov_r9ixqbrao().s[30]++;
User.prototype.setup2FA = function () {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[6]++;
  const secret =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[31]++, speakeasy.generateSecret({
    name: `CEX Exchange (${this.email})`,
    issuer: 'CEX Exchange',
    length: 32
  }));
  /* istanbul ignore next */
  cov_r9ixqbrao().s[32]++;
  this.twoFactorSecret = secret.base32;
  /* istanbul ignore next */
  cov_r9ixqbrao().s[33]++;
  return secret;
};
/* istanbul ignore next */
cov_r9ixqbrao().s[34]++;
User.prototype.verify2FA = function (token) {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[7]++;
  cov_r9ixqbrao().s[35]++;
  if (!this.twoFactorSecret) {
    /* istanbul ignore next */
    cov_r9ixqbrao().b[5][0]++;
    cov_r9ixqbrao().s[36]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_r9ixqbrao().b[5][1]++;
  }
  cov_r9ixqbrao().s[37]++;
  return speakeasy.totp.verify({
    secret: this.twoFactorSecret,
    encoding: 'base32',
    token: token,
    window: 2 // Allow 2 time steps (60 seconds) of variance
  });
};
/* istanbul ignore next */
cov_r9ixqbrao().s[38]++;
User.prototype.generateBackupCodes = function () {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[8]++;
  const codes =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[39]++, []);
  /* istanbul ignore next */
  cov_r9ixqbrao().s[40]++;
  for (let i =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[41]++, 0); i < 10; i++) {
    /* istanbul ignore next */
    cov_r9ixqbrao().s[42]++;
    codes.push(crypto.randomBytes(4).toString('hex').toUpperCase());
  }
  /* istanbul ignore next */
  cov_r9ixqbrao().s[43]++;
  this.backupCodes = codes;
  /* istanbul ignore next */
  cov_r9ixqbrao().s[44]++;
  return codes;
};
/* istanbul ignore next */
cov_r9ixqbrao().s[45]++;
User.prototype.useBackupCode = async function (code) {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[9]++;
  cov_r9ixqbrao().s[46]++;
  if (
  /* istanbul ignore next */
  (cov_r9ixqbrao().b[7][0]++, !this.backupCodes) ||
  /* istanbul ignore next */
  (cov_r9ixqbrao().b[7][1]++, !this.backupCodes.includes(code.toUpperCase()))) {
    /* istanbul ignore next */
    cov_r9ixqbrao().b[6][0]++;
    cov_r9ixqbrao().s[47]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_r9ixqbrao().b[6][1]++;
  }
  const updatedCodes =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[48]++, this.backupCodes.filter(c => {
    /* istanbul ignore next */
    cov_r9ixqbrao().f[10]++;
    cov_r9ixqbrao().s[49]++;
    return c !== code.toUpperCase();
  }));
  /* istanbul ignore next */
  cov_r9ixqbrao().s[50]++;
  await this.update({
    backupCodes: updatedCodes
  });
  /* istanbul ignore next */
  cov_r9ixqbrao().s[51]++;
  return true;
};
/* istanbul ignore next */
cov_r9ixqbrao().s[52]++;
User.prototype.generate2FAQRCode = async function () {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[11]++;
  cov_r9ixqbrao().s[53]++;
  if (!this.twoFactorSecret) {
    /* istanbul ignore next */
    cov_r9ixqbrao().b[8][0]++;
    cov_r9ixqbrao().s[54]++;
    throw new Error('2FA secret not generated');
  } else
  /* istanbul ignore next */
  {
    cov_r9ixqbrao().b[8][1]++;
  }
  const otpauthUrl =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[55]++, speakeasy.otpauthURL({
    secret: this.twoFactorSecret,
    label: this.email,
    issuer: 'CEX Exchange',
    encoding: 'base32'
  }));
  /* istanbul ignore next */
  cov_r9ixqbrao().s[56]++;
  return QRCode.toDataURL(otpauthUrl);
};
/* istanbul ignore next */
cov_r9ixqbrao().s[57]++;
User.prototype.toJSON = function () {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[12]++;
  const values =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[58]++, Object.assign({}, this.get()));

  // Remove sensitive fields
  /* istanbul ignore next */
  cov_r9ixqbrao().s[59]++;
  delete values.password;
  /* istanbul ignore next */
  cov_r9ixqbrao().s[60]++;
  delete values.twoFactorSecret;
  /* istanbul ignore next */
  cov_r9ixqbrao().s[61]++;
  delete values.backupCodes;
  /* istanbul ignore next */
  cov_r9ixqbrao().s[62]++;
  delete values.passwordResetToken;
  /* istanbul ignore next */
  cov_r9ixqbrao().s[63]++;
  delete values.emailVerificationToken;
  /* istanbul ignore next */
  cov_r9ixqbrao().s[64]++;
  return values;
};

// Static methods
/* istanbul ignore next */
cov_r9ixqbrao().s[65]++;
User.findByEmailOrUsername = function (identifier) {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[13]++;
  cov_r9ixqbrao().s[66]++;
  return this.findOne({
    where: {
      [sequelize.Sequelize.Op.or]: [{
        email: identifier
      }, {
        username: identifier
      }]
    }
  });
};
/* istanbul ignore next */
cov_r9ixqbrao().s[67]++;
User.findByPasswordResetToken = function (token) {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[14]++;
  const hashedToken =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[68]++, crypto.createHash('sha256').update(token).digest('hex'));
  /* istanbul ignore next */
  cov_r9ixqbrao().s[69]++;
  return this.findOne({
    where: {
      passwordResetToken: hashedToken,
      passwordResetExpires: {
        [sequelize.Sequelize.Op.gt]: Date.now()
      }
    }
  });
};
/* istanbul ignore next */
cov_r9ixqbrao().s[70]++;
User.findByEmailVerificationToken = function (token) {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[15]++;
  const hashedToken =
  /* istanbul ignore next */
  (cov_r9ixqbrao().s[71]++, crypto.createHash('sha256').update(token).digest('hex'));
  /* istanbul ignore next */
  cov_r9ixqbrao().s[72]++;
  return this.findOne({
    where: {
      emailVerificationToken: hashedToken,
      emailVerificationExpires: {
        [sequelize.Sequelize.Op.gt]: Date.now()
      }
    }
  });
};

// Hooks
/* istanbul ignore next */
cov_r9ixqbrao().s[73]++;
User.beforeCreate(async user => {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[16]++;
  cov_r9ixqbrao().s[74]++;
  if (user.password) {
    /* istanbul ignore next */
    cov_r9ixqbrao().b[9][0]++;
    const salt =
    /* istanbul ignore next */
    (cov_r9ixqbrao().s[75]++, await bcrypt.genSalt(12));
    /* istanbul ignore next */
    cov_r9ixqbrao().s[76]++;
    user.password = await bcrypt.hash(user.password, salt);
  } else
  /* istanbul ignore next */
  {
    cov_r9ixqbrao().b[9][1]++;
  }
});
/* istanbul ignore next */
cov_r9ixqbrao().s[77]++;
User.beforeUpdate(async user => {
  /* istanbul ignore next */
  cov_r9ixqbrao().f[17]++;
  cov_r9ixqbrao().s[78]++;
  if (user.changed('password')) {
    /* istanbul ignore next */
    cov_r9ixqbrao().b[10][0]++;
    const salt =
    /* istanbul ignore next */
    (cov_r9ixqbrao().s[79]++, await bcrypt.genSalt(12));
    /* istanbul ignore next */
    cov_r9ixqbrao().s[80]++;
    user.password = await bcrypt.hash(user.password, salt);
  } else
  /* istanbul ignore next */
  {
    cov_r9ixqbrao().b[10][1]++;
  }
});
/* istanbul ignore next */
cov_r9ixqbrao().s[81]++;
module.exports = User;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,