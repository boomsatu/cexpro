14cde517ec7dc17d379babdf299fb92d
/* istanbul ignore next */
function cov_e2714gbcn() {
  var path = "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\services\\marketDataService.js";
  var hash = "56a0a36b0a10c2ae4c7d2582f537ff799284db2b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\mawan\\OneDrive\\Desktop\\CexProject\\backend\\src\\services\\marketDataService.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 26
        },
        end: {
          line: 1,
          column: 52
        }
      },
      "1": {
        start: {
          line: 2,
          column: 15
        },
        end: {
          line: 2,
          column: 35
        }
      },
      "2": {
        start: {
          line: 3,
          column: 14
        },
        end: {
          line: 3,
          column: 40
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 42
        }
      },
      "4": {
        start: {
          line: 5,
          column: 21
        },
        end: {
          line: 5,
          column: 38
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 12
        }
      },
      "6": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 29
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 33
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 31
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 27,
          column: 6
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 31
        }
      },
      "13": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 56
        }
      },
      "14": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 64
        }
      },
      "15": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 53,
          column: 42
        }
      },
      "16": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 52,
          column: 7
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 38
        }
      },
      "18": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 65
        }
      },
      "19": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "20": {
        start: {
          line: 57,
          column: 6
        },
        end: {
          line: 62,
          column: 7
        }
      },
      "21": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 43
        }
      },
      "22": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 70
        }
      },
      "23": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 73
        }
      },
      "24": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "25": {
        start: {
          line: 74,
          column: 6
        },
        end: {
          line: 74,
          column: 52
        }
      },
      "26": {
        start: {
          line: 77,
          column: 6
        },
        end: {
          line: 77,
          column: 58
        }
      },
      "27": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "28": {
        start: {
          line: 91,
          column: 6
        },
        end: {
          line: 91,
          column: 77
        }
      },
      "29": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "30": {
        start: {
          line: 100,
          column: 21
        },
        end: {
          line: 100,
          column: 78
        }
      },
      "31": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 104,
          column: 7
        }
      },
      "32": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 60
        }
      },
      "33": {
        start: {
          line: 107,
          column: 23
        },
        end: {
          line: 107,
          column: 59
        }
      },
      "34": {
        start: {
          line: 110,
          column: 19
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "35": {
        start: {
          line: 126,
          column: 6
        },
        end: {
          line: 129,
          column: 7
        }
      },
      "36": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 51
        }
      },
      "37": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 52
        }
      },
      "38": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 138,
          column: 7
        }
      },
      "39": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 43
        }
      },
      "40": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 39
        }
      },
      "41": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 37
        }
      },
      "42": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 43
        }
      },
      "43": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 57
        }
      },
      "44": {
        start: {
          line: 141,
          column: 29
        },
        end: {
          line: 141,
          column: 71
        }
      },
      "45": {
        start: {
          line: 142,
          column: 6
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "46": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 49
        }
      },
      "47": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 49
        }
      },
      "48": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 53
        }
      },
      "49": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 53
        }
      },
      "50": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 150,
          column: 45
        }
      },
      "51": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 162,
          column: 7
        }
      },
      "52": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 158,
          column: 10
        }
      },
      "53": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 83
        }
      },
      "54": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 165,
          column: 53
        }
      },
      "55": {
        start: {
          line: 167,
          column: 6
        },
        end: {
          line: 167,
          column: 20
        }
      },
      "56": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 170,
          column: 73
        }
      },
      "57": {
        start: {
          line: 172,
          column: 6
        },
        end: {
          line: 185,
          column: 8
        }
      },
      "58": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "59": {
        start: {
          line: 194,
          column: 21
        },
        end: {
          line: 194,
          column: 78
        }
      },
      "60": {
        start: {
          line: 196,
          column: 6
        },
        end: {
          line: 198,
          column: 7
        }
      },
      "61": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 20
        }
      },
      "62": {
        start: {
          line: 200,
          column: 18
        },
        end: {
          line: 200,
          column: 28
        }
      },
      "63": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 79
        }
      },
      "64": {
        start: {
          line: 204,
          column: 21
        },
        end: {
          line: 213,
          column: 8
        }
      },
      "65": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 224,
          column: 7
        }
      },
      "66": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 223,
          column: 10
        }
      },
      "67": {
        start: {
          line: 227,
          column: 21
        },
        end: {
          line: 227,
          column: 57
        }
      },
      "68": {
        start: {
          line: 227,
          column: 37
        },
        end: {
          line: 227,
          column: 56
        }
      },
      "69": {
        start: {
          line: 228,
          column: 22
        },
        end: {
          line: 228,
          column: 61
        }
      },
      "70": {
        start: {
          line: 228,
          column: 38
        },
        end: {
          line: 228,
          column: 60
        }
      },
      "71": {
        start: {
          line: 230,
          column: 19
        },
        end: {
          line: 230,
          column: 38
        }
      },
      "72": {
        start: {
          line: 231,
          column: 18
        },
        end: {
          line: 231,
          column: 37
        }
      },
      "73": {
        start: {
          line: 232,
          column: 21
        },
        end: {
          line: 232,
          column: 63
        }
      },
      "74": {
        start: {
          line: 232,
          column: 50
        },
        end: {
          line: 232,
          column: 59
        }
      },
      "75": {
        start: {
          line: 233,
          column: 24
        },
        end: {
          line: 233,
          column: 33
        }
      },
      "76": {
        start: {
          line: 234,
          column: 27
        },
        end: {
          line: 234,
          column: 56
        }
      },
      "77": {
        start: {
          line: 235,
          column: 21
        },
        end: {
          line: 235,
          column: 45
        }
      },
      "78": {
        start: {
          line: 236,
          column: 28
        },
        end: {
          line: 236,
          column: 74
        }
      },
      "79": {
        start: {
          line: 238,
          column: 6
        },
        end: {
          line: 245,
          column: 8
        }
      },
      "80": {
        start: {
          line: 248,
          column: 6
        },
        end: {
          line: 248,
          column: 75
        }
      },
      "81": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 249,
          column: 18
        }
      },
      "82": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 269,
          column: 5
        }
      },
      "83": {
        start: {
          line: 258,
          column: 24
        },
        end: {
          line: 258,
          column: 50
        }
      },
      "84": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 43
        }
      },
      "85": {
        start: {
          line: 260,
          column: 21
        },
        end: {
          line: 260,
          column: 47
        }
      },
      "86": {
        start: {
          line: 263,
          column: 6
        },
        end: {
          line: 265,
          column: 7
        }
      },
      "87": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 98
        }
      },
      "88": {
        start: {
          line: 268,
          column: 6
        },
        end: {
          line: 268,
          column: 79
        }
      },
      "89": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 336,
          column: 5
        }
      },
      "90": {
        start: {
          line: 277,
          column: 30
        },
        end: {
          line: 277,
          column: 74
        }
      },
      "91": {
        start: {
          line: 278,
          column: 18
        },
        end: {
          line: 278,
          column: 47
        }
      },
      "92": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 281,
          column: 57
        }
      },
      "93": {
        start: {
          line: 284,
          column: 26
        },
        end: {
          line: 284,
          column: 91
        }
      },
      "94": {
        start: {
          line: 284,
          column: 49
        },
        end: {
          line: 284,
          column: 90
        }
      },
      "95": {
        start: {
          line: 286,
          column: 6
        },
        end: {
          line: 307,
          column: 7
        }
      },
      "96": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 296,
          column: 10
        }
      },
      "97": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 41
        }
      },
      "98": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 63
        }
      },
      "99": {
        start: {
          line: 301,
          column: 36
        },
        end: {
          line: 301,
          column: 61
        }
      },
      "100": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "101": {
        start: {
          line: 305,
          column: 10
        },
        end: {
          line: 305,
          column: 74
        }
      },
      "102": {
        start: {
          line: 310,
          column: 6
        },
        end: {
          line: 310,
          column: 63
        }
      },
      "103": {
        start: {
          line: 311,
          column: 6
        },
        end: {
          line: 311,
          column: 61
        }
      },
      "104": {
        start: {
          line: 312,
          column: 6
        },
        end: {
          line: 312,
          column: 34
        }
      },
      "105": {
        start: {
          line: 313,
          column: 6
        },
        end: {
          line: 313,
          column: 37
        }
      },
      "106": {
        start: {
          line: 314,
          column: 6
        },
        end: {
          line: 314,
          column: 32
        }
      },
      "107": {
        start: {
          line: 317,
          column: 6
        },
        end: {
          line: 317,
          column: 47
        }
      },
      "108": {
        start: {
          line: 320,
          column: 6
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "109": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 325,
          column: 10
        }
      },
      "110": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 80
        }
      },
      "111": {
        start: {
          line: 332,
          column: 6
        },
        end: {
          line: 332,
          column: 75
        }
      },
      "112": {
        start: {
          line: 335,
          column: 6
        },
        end: {
          line: 335,
          column: 90
        }
      },
      "113": {
        start: {
          line: 343,
          column: 17
        },
        end: {
          line: 343,
          column: 36
        }
      },
      "114": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 374,
          column: 5
        }
      },
      "115": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 347,
          column: 30
        }
      },
      "116": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 14
        }
      },
      "117": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 69
        }
      },
      "118": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 14
        }
      },
      "119": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 71
        }
      },
      "120": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 14
        }
      },
      "121": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 356,
          column: 71
        }
      },
      "122": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 14
        }
      },
      "123": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 359,
          column: 33
        }
      },
      "124": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 14
        }
      },
      "125": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 68
        }
      },
      "126": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 363,
          column: 14
        }
      },
      "127": {
        start: {
          line: 365,
          column: 8
        },
        end: {
          line: 365,
          column: 34
        }
      },
      "128": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 14
        }
      },
      "129": {
        start: {
          line: 368,
          column: 26
        },
        end: {
          line: 368,
          column: 39
        }
      },
      "130": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 369,
          column: 49
        }
      },
      "131": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 34
        }
      },
      "132": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 14
        }
      },
      "133": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 373,
          column: 30
        }
      },
      "134": {
        start: {
          line: 376,
          column: 4
        },
        end: {
          line: 376,
          column: 16
        }
      },
      "135": {
        start: {
          line: 383,
          column: 4
        },
        end: {
          line: 404,
          column: 5
        }
      },
      "136": {
        start: {
          line: 385,
          column: 19
        },
        end: {
          line: 385,
          column: 49
        }
      },
      "137": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 397,
          column: 7
        }
      },
      "138": {
        start: {
          line: 389,
          column: 23
        },
        end: {
          line: 389,
          column: 64
        }
      },
      "139": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 396,
          column: 9
        }
      },
      "140": {
        start: {
          line: 391,
          column: 10
        },
        end: {
          line: 391,
          column: 38
        }
      },
      "141": {
        start: {
          line: 392,
          column: 10
        },
        end: {
          line: 392,
          column: 49
        }
      },
      "142": {
        start: {
          line: 395,
          column: 10
        },
        end: {
          line: 395,
          column: 57
        }
      },
      "143": {
        start: {
          line: 399,
          column: 6
        },
        end: {
          line: 399,
          column: 20
        }
      },
      "144": {
        start: {
          line: 402,
          column: 6
        },
        end: {
          line: 402,
          column: 72
        }
      },
      "145": {
        start: {
          line: 403,
          column: 6
        },
        end: {
          line: 403,
          column: 18
        }
      },
      "146": {
        start: {
          line: 411,
          column: 4
        },
        end: {
          line: 434,
          column: 5
        }
      },
      "147": {
        start: {
          line: 412,
          column: 22
        },
        end: {
          line: 415,
          column: 8
        }
      },
      "148": {
        start: {
          line: 417,
          column: 22
        },
        end: {
          line: 417,
          column: 24
        }
      },
      "149": {
        start: {
          line: 419,
          column: 6
        },
        end: {
          line: 427,
          column: 8
        }
      },
      "150": {
        start: {
          line: 421,
          column: 10
        },
        end: {
          line: 425,
          column: 11
        }
      },
      "151": {
        start: {
          line: 422,
          column: 12
        },
        end: {
          line: 422,
          column: 73
        }
      },
      "152": {
        start: {
          line: 424,
          column: 12
        },
        end: {
          line: 424,
          column: 79
        }
      },
      "153": {
        start: {
          line: 429,
          column: 6
        },
        end: {
          line: 429,
          column: 21
        }
      },
      "154": {
        start: {
          line: 432,
          column: 6
        },
        end: {
          line: 432,
          column: 57
        }
      },
      "155": {
        start: {
          line: 433,
          column: 6
        },
        end: {
          line: 433,
          column: 18
        }
      },
      "156": {
        start: {
          line: 441,
          column: 4
        },
        end: {
          line: 488,
          column: 5
        }
      },
      "157": {
        start: {
          line: 442,
          column: 6
        },
        end: {
          line: 444,
          column: 7
        }
      },
      "158": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 57
        }
      },
      "159": {
        start: {
          line: 446,
          column: 18
        },
        end: {
          line: 446,
          column: 47
        }
      },
      "160": {
        start: {
          line: 449,
          column: 25
        },
        end: {
          line: 449,
          column: 51
        }
      },
      "161": {
        start: {
          line: 451,
          column: 6
        },
        end: {
          line: 461,
          column: 7
        }
      },
      "162": {
        start: {
          line: 453,
          column: 23
        },
        end: {
          line: 453,
          column: 61
        }
      },
      "163": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 460,
          column: 9
        }
      },
      "164": {
        start: {
          line: 455,
          column: 10
        },
        end: {
          line: 455,
          column: 44
        }
      },
      "165": {
        start: {
          line: 456,
          column: 10
        },
        end: {
          line: 456,
          column: 51
        }
      },
      "166": {
        start: {
          line: 459,
          column: 10
        },
        end: {
          line: 459,
          column: 94
        }
      },
      "167": {
        start: {
          line: 463,
          column: 6
        },
        end: {
          line: 465,
          column: 7
        }
      },
      "168": {
        start: {
          line: 464,
          column: 8
        },
        end: {
          line: 464,
          column: 18
        }
      },
      "169": {
        start: {
          line: 468,
          column: 21
        },
        end: {
          line: 468,
          column: 33
        }
      },
      "170": {
        start: {
          line: 470,
          column: 6
        },
        end: {
          line: 472,
          column: 7
        }
      },
      "171": {
        start: {
          line: 471,
          column: 8
        },
        end: {
          line: 471,
          column: 66
        }
      },
      "172": {
        start: {
          line: 471,
          column: 40
        },
        end: {
          line: 471,
          column: 64
        }
      },
      "173": {
        start: {
          line: 474,
          column: 6
        },
        end: {
          line: 476,
          column: 7
        }
      },
      "174": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 475,
          column: 64
        }
      },
      "175": {
        start: {
          line: 475,
          column: 40
        },
        end: {
          line: 475,
          column: 62
        }
      },
      "176": {
        start: {
          line: 479,
          column: 6
        },
        end: {
          line: 481,
          column: 7
        }
      },
      "177": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 42
        }
      },
      "178": {
        start: {
          line: 483,
          column: 6
        },
        end: {
          line: 483,
          column: 22
        }
      },
      "179": {
        start: {
          line: 486,
          column: 6
        },
        end: {
          line: 486,
          column: 90
        }
      },
      "180": {
        start: {
          line: 487,
          column: 6
        },
        end: {
          line: 487,
          column: 18
        }
      },
      "181": {
        start: {
          line: 495,
          column: 4
        },
        end: {
          line: 561,
          column: 5
        }
      },
      "182": {
        start: {
          line: 496,
          column: 21
        },
        end: {
          line: 496,
          column: 78
        }
      },
      "183": {
        start: {
          line: 498,
          column: 6
        },
        end: {
          line: 500,
          column: 7
        }
      },
      "184": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 60
        }
      },
      "185": {
        start: {
          line: 503,
          column: 18
        },
        end: {
          line: 503,
          column: 28
        }
      },
      "186": {
        start: {
          line: 504,
          column: 25
        },
        end: {
          line: 504,
          column: 53
        }
      },
      "187": {
        start: {
          line: 505,
          column: 24
        },
        end: {
          line: 505,
          column: 70
        }
      },
      "188": {
        start: {
          line: 508,
          column: 21
        },
        end: {
          line: 517,
          column: 8
        }
      },
      "189": {
        start: {
          line: 520,
          column: 29
        },
        end: {
          line: 520,
          column: 38
        }
      },
      "190": {
        start: {
          line: 522,
          column: 6
        },
        end: {
          line: 546,
          column: 7
        }
      },
      "191": {
        start: {
          line: 523,
          column: 27
        },
        end: {
          line: 523,
          column: 78
        }
      },
      "192": {
        start: {
          line: 524,
          column: 20
        },
        end: {
          line: 524,
          column: 40
        }
      },
      "193": {
        start: {
          line: 525,
          column: 22
        },
        end: {
          line: 525,
          column: 45
        }
      },
      "194": {
        start: {
          line: 526,
          column: 23
        },
        end: {
          line: 526,
          column: 49
        }
      },
      "195": {
        start: {
          line: 528,
          column: 8
        },
        end: {
          line: 538,
          column: 9
        }
      },
      "196": {
        start: {
          line: 529,
          column: 10
        },
        end: {
          line: 537,
          column: 13
        }
      },
      "197": {
        start: {
          line: 540,
          column: 23
        },
        end: {
          line: 540,
          column: 46
        }
      },
      "198": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 541,
          column: 51
        }
      },
      "199": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 542,
          column: 49
        }
      },
      "200": {
        start: {
          line: 543,
          column: 8
        },
        end: {
          line: 543,
          column: 29
        }
      },
      "201": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 32
        }
      },
      "202": {
        start: {
          line: 545,
          column: 8
        },
        end: {
          line: 545,
          column: 27
        }
      },
      "203": {
        start: {
          line: 549,
          column: 27
        },
        end: {
          line: 550,
          column: 50
        }
      },
      "204": {
        start: {
          line: 550,
          column: 24
        },
        end: {
          line: 550,
          column: 49
        }
      },
      "205": {
        start: {
          line: 553,
          column: 18
        },
        end: {
          line: 553,
          column: 47
        }
      },
      "206": {
        start: {
          line: 554,
          column: 6
        },
        end: {
          line: 554,
          column: 47
        }
      },
      "207": {
        start: {
          line: 556,
          column: 6
        },
        end: {
          line: 556,
          column: 26
        }
      },
      "208": {
        start: {
          line: 559,
          column: 6
        },
        end: {
          line: 559,
          column: 101
        }
      },
      "209": {
        start: {
          line: 560,
          column: 6
        },
        end: {
          line: 560,
          column: 16
        }
      },
      "210": {
        start: {
          line: 568,
          column: 22
        },
        end: {
          line: 577,
          column: 5
        }
      },
      "211": {
        start: {
          line: 579,
          column: 4
        },
        end: {
          line: 579,
          column: 44
        }
      },
      "212": {
        start: {
          line: 586,
          column: 4
        },
        end: {
          line: 598,
          column: 5
        }
      },
      "213": {
        start: {
          line: 589,
          column: 6
        },
        end: {
          line: 594,
          column: 8
        }
      },
      "214": {
        start: {
          line: 596,
          column: 6
        },
        end: {
          line: 596,
          column: 82
        }
      },
      "215": {
        start: {
          line: 597,
          column: 6
        },
        end: {
          line: 597,
          column: 18
        }
      },
      "216": {
        start: {
          line: 605,
          column: 16
        },
        end: {
          line: 605,
          column: 45
        }
      },
      "217": {
        start: {
          line: 607,
          column: 4
        },
        end: {
          line: 609,
          column: 5
        }
      },
      "218": {
        start: {
          line: 608,
          column: 6
        },
        end: {
          line: 608,
          column: 43
        }
      },
      "219": {
        start: {
          line: 611,
          column: 4
        },
        end: {
          line: 611,
          column: 44
        }
      },
      "220": {
        start: {
          line: 614,
          column: 4
        },
        end: {
          line: 622,
          column: 6
        }
      },
      "221": {
        start: {
          line: 615,
          column: 26
        },
        end: {
          line: 615,
          column: 51
        }
      },
      "222": {
        start: {
          line: 616,
          column: 6
        },
        end: {
          line: 621,
          column: 7
        }
      },
      "223": {
        start: {
          line: 617,
          column: 8
        },
        end: {
          line: 617,
          column: 37
        }
      },
      "224": {
        start: {
          line: 618,
          column: 8
        },
        end: {
          line: 620,
          column: 9
        }
      },
      "225": {
        start: {
          line: 619,
          column: 10
        },
        end: {
          line: 619,
          column: 39
        }
      },
      "226": {
        start: {
          line: 629,
          column: 16
        },
        end: {
          line: 629,
          column: 40
        }
      },
      "227": {
        start: {
          line: 630,
          column: 24
        },
        end: {
          line: 630,
          column: 49
        }
      },
      "228": {
        start: {
          line: 632,
          column: 4
        },
        end: {
          line: 647,
          column: 5
        }
      },
      "229": {
        start: {
          line: 633,
          column: 21
        },
        end: {
          line: 638,
          column: 7
        }
      },
      "230": {
        start: {
          line: 640,
          column: 6
        },
        end: {
          line: 646,
          column: 7
        }
      },
      "231": {
        start: {
          line: 641,
          column: 8
        },
        end: {
          line: 645,
          column: 9
        }
      },
      "232": {
        start: {
          line: 642,
          column: 10
        },
        end: {
          line: 642,
          column: 27
        }
      },
      "233": {
        start: {
          line: 644,
          column: 10
        },
        end: {
          line: 644,
          column: 66
        }
      },
      "234": {
        start: {
          line: 654,
          column: 16
        },
        end: {
          line: 654,
          column: 40
        }
      },
      "235": {
        start: {
          line: 655,
          column: 24
        },
        end: {
          line: 655,
          column: 49
        }
      },
      "236": {
        start: {
          line: 657,
          column: 4
        },
        end: {
          line: 671,
          column: 5
        }
      },
      "237": {
        start: {
          line: 658,
          column: 21
        },
        end: {
          line: 662,
          column: 7
        }
      },
      "238": {
        start: {
          line: 664,
          column: 6
        },
        end: {
          line: 670,
          column: 7
        }
      },
      "239": {
        start: {
          line: 665,
          column: 8
        },
        end: {
          line: 669,
          column: 9
        }
      },
      "240": {
        start: {
          line: 666,
          column: 10
        },
        end: {
          line: 666,
          column: 27
        }
      },
      "241": {
        start: {
          line: 668,
          column: 10
        },
        end: {
          line: 668,
          column: 65
        }
      },
      "242": {
        start: {
          line: 678,
          column: 16
        },
        end: {
          line: 678,
          column: 58
        }
      },
      "243": {
        start: {
          line: 679,
          column: 24
        },
        end: {
          line: 679,
          column: 49
        }
      },
      "244": {
        start: {
          line: 681,
          column: 4
        },
        end: {
          line: 697,
          column: 5
        }
      },
      "245": {
        start: {
          line: 682,
          column: 21
        },
        end: {
          line: 688,
          column: 7
        }
      },
      "246": {
        start: {
          line: 690,
          column: 6
        },
        end: {
          line: 696,
          column: 7
        }
      },
      "247": {
        start: {
          line: 691,
          column: 8
        },
        end: {
          line: 695,
          column: 9
        }
      },
      "248": {
        start: {
          line: 692,
          column: 10
        },
        end: {
          line: 692,
          column: 27
        }
      },
      "249": {
        start: {
          line: 694,
          column: 10
        },
        end: {
          line: 694,
          column: 71
        }
      },
      "250": {
        start: {
          line: 704,
          column: 4
        },
        end: {
          line: 722,
          column: 5
        }
      },
      "251": {
        start: {
          line: 705,
          column: 22
        },
        end: {
          line: 708,
          column: 8
        }
      },
      "252": {
        start: {
          line: 710,
          column: 6
        },
        end: {
          line: 718,
          column: 8
        }
      },
      "253": {
        start: {
          line: 712,
          column: 10
        },
        end: {
          line: 716,
          column: 11
        }
      },
      "254": {
        start: {
          line: 713,
          column: 12
        },
        end: {
          line: 713,
          column: 51
        }
      },
      "255": {
        start: {
          line: 715,
          column: 12
        },
        end: {
          line: 715,
          column: 80
        }
      },
      "256": {
        start: {
          line: 721,
          column: 6
        },
        end: {
          line: 721,
          column: 58
        }
      },
      "257": {
        start: {
          line: 729,
          column: 4
        },
        end: {
          line: 735,
          column: 5
        }
      },
      "258": {
        start: {
          line: 732,
          column: 6
        },
        end: {
          line: 732,
          column: 50
        }
      },
      "259": {
        start: {
          line: 734,
          column: 6
        },
        end: {
          line: 734,
          column: 63
        }
      },
      "260": {
        start: {
          line: 742,
          column: 4
        },
        end: {
          line: 761,
          column: 5
        }
      },
      "261": {
        start: {
          line: 743,
          column: 59
        },
        end: {
          line: 743,
          column: 68
        }
      },
      "262": {
        start: {
          line: 746,
          column: 6
        },
        end: {
          line: 746,
          column: 81
        }
      },
      "263": {
        start: {
          line: 749,
          column: 6
        },
        end: {
          line: 749,
          column: 86
        }
      },
      "264": {
        start: {
          line: 752,
          column: 6
        },
        end: {
          line: 757,
          column: 9
        }
      },
      "265": {
        start: {
          line: 760,
          column: 6
        },
        end: {
          line: 760,
          column: 56
        }
      },
      "266": {
        start: {
          line: 768,
          column: 4
        },
        end: {
          line: 795,
          column: 5
        }
      },
      "267": {
        start: {
          line: 769,
          column: 43
        },
        end: {
          line: 769,
          column: 53
        }
      },
      "268": {
        start: {
          line: 771,
          column: 6
        },
        end: {
          line: 783,
          column: 7
        }
      },
      "269": {
        start: {
          line: 773,
          column: 10
        },
        end: {
          line: 773,
          column: 65
        }
      },
      "270": {
        start: {
          line: 774,
          column: 10
        },
        end: {
          line: 774,
          column: 16
        }
      },
      "271": {
        start: {
          line: 776,
          column: 10
        },
        end: {
          line: 776,
          column: 67
        }
      },
      "272": {
        start: {
          line: 777,
          column: 10
        },
        end: {
          line: 777,
          column: 16
        }
      },
      "273": {
        start: {
          line: 779,
          column: 10
        },
        end: {
          line: 779,
          column: 54
        }
      },
      "274": {
        start: {
          line: 780,
          column: 10
        },
        end: {
          line: 780,
          column: 16
        }
      },
      "275": {
        start: {
          line: 782,
          column: 10
        },
        end: {
          line: 782,
          column: 60
        }
      },
      "276": {
        start: {
          line: 786,
          column: 6
        },
        end: {
          line: 791,
          column: 9
        }
      },
      "277": {
        start: {
          line: 794,
          column: 6
        },
        end: {
          line: 794,
          column: 60
        }
      },
      "278": {
        start: {
          line: 802,
          column: 4
        },
        end: {
          line: 840,
          column: 5
        }
      },
      "279": {
        start: {
          line: 803,
          column: 21
        },
        end: {
          line: 812,
          column: 7
        }
      },
      "280": {
        start: {
          line: 815,
          column: 23
        },
        end: {
          line: 815,
          column: 35
        }
      },
      "281": {
        start: {
          line: 816,
          column: 6
        },
        end: {
          line: 816,
          column: 27
        }
      },
      "282": {
        start: {
          line: 817,
          column: 6
        },
        end: {
          line: 817,
          column: 36
        }
      },
      "283": {
        start: {
          line: 820,
          column: 6
        },
        end: {
          line: 822,
          column: 7
        }
      },
      "284": {
        start: {
          line: 821,
          column: 8
        },
        end: {
          line: 821,
          column: 31
        }
      },
      "285": {
        start: {
          line: 823,
          column: 6
        },
        end: {
          line: 825,
          column: 7
        }
      },
      "286": {
        start: {
          line: 824,
          column: 8
        },
        end: {
          line: 824,
          column: 30
        }
      },
      "287": {
        start: {
          line: 828,
          column: 6
        },
        end: {
          line: 828,
          column: 35
        }
      },
      "288": {
        start: {
          line: 831,
          column: 6
        },
        end: {
          line: 834,
          column: 7
        }
      },
      "289": {
        start: {
          line: 832,
          column: 8
        },
        end: {
          line: 832,
          column: 44
        }
      },
      "290": {
        start: {
          line: 833,
          column: 8
        },
        end: {
          line: 833,
          column: 72
        }
      },
      "291": {
        start: {
          line: 836,
          column: 6
        },
        end: {
          line: 836,
          column: 45
        }
      },
      "292": {
        start: {
          line: 839,
          column: 6
        },
        end: {
          line: 839,
          column: 64
        }
      },
      "293": {
        start: {
          line: 847,
          column: 4
        },
        end: {
          line: 887,
          column: 5
        }
      },
      "294": {
        start: {
          line: 848,
          column: 24
        },
        end: {
          line: 848,
          column: 61
        }
      },
      "295": {
        start: {
          line: 850,
          column: 6
        },
        end: {
          line: 883,
          column: 7
        }
      },
      "296": {
        start: {
          line: 851,
          column: 31
        },
        end: {
          line: 851,
          column: 60
        }
      },
      "297": {
        start: {
          line: 852,
          column: 27
        },
        end: {
          line: 852,
          column: 70
        }
      },
      "298": {
        start: {
          line: 854,
          column: 27
        },
        end: {
          line: 854,
          column: 66
        }
      },
      "299": {
        start: {
          line: 857,
          column: 28
        },
        end: {
          line: 857,
          column: 78
        }
      },
      "300": {
        start: {
          line: 857,
          column: 51
        },
        end: {
          line: 857,
          column: 77
        }
      },
      "301": {
        start: {
          line: 859,
          column: 8
        },
        end: {
          line: 869,
          column: 9
        }
      },
      "302": {
        start: {
          line: 860,
          column: 10
        },
        end: {
          line: 867,
          column: 12
        }
      },
      "303": {
        start: {
          line: 868,
          column: 10
        },
        end: {
          line: 868,
          column: 43
        }
      },
      "304": {
        start: {
          line: 872,
          column: 8
        },
        end: {
          line: 872,
          column: 36
        }
      },
      "305": {
        start: {
          line: 873,
          column: 8
        },
        end: {
          line: 873,
          column: 65
        }
      },
      "306": {
        start: {
          line: 874,
          column: 8
        },
        end: {
          line: 874,
          column: 63
        }
      },
      "307": {
        start: {
          line: 875,
          column: 8
        },
        end: {
          line: 875,
          column: 41
        }
      },
      "308": {
        start: {
          line: 878,
          column: 8
        },
        end: {
          line: 880,
          column: 9
        }
      },
      "309": {
        start: {
          line: 879,
          column: 10
        },
        end: {
          line: 879,
          column: 51
        }
      },
      "310": {
        start: {
          line: 882,
          column: 8
        },
        end: {
          line: 882,
          column: 60
        }
      },
      "311": {
        start: {
          line: 886,
          column: 6
        },
        end: {
          line: 886,
          column: 69
        }
      },
      "312": {
        start: {
          line: 894,
          column: 4
        },
        end: {
          line: 907,
          column: 5
        }
      },
      "313": {
        start: {
          line: 895,
          column: 22
        },
        end: {
          line: 899,
          column: 7
        }
      },
      "314": {
        start: {
          line: 903,
          column: 6
        },
        end: {
          line: 903,
          column: 38
        }
      },
      "315": {
        start: {
          line: 906,
          column: 6
        },
        end: {
          line: 906,
          column: 65
        }
      },
      "316": {
        start: {
          line: 914,
          column: 4
        },
        end: {
          line: 945,
          column: 5
        }
      },
      "317": {
        start: {
          line: 915,
          column: 22
        },
        end: {
          line: 915,
          column: 48
        }
      },
      "318": {
        start: {
          line: 917,
          column: 20
        },
        end: {
          line: 923,
          column: 7
        }
      },
      "319": {
        start: {
          line: 926,
          column: 26
        },
        end: {
          line: 926,
          column: 48
        }
      },
      "320": {
        start: {
          line: 928,
          column: 6
        },
        end: {
          line: 930,
          column: 12
        }
      },
      "321": {
        start: {
          line: 929,
          column: 8
        },
        end: {
          line: 929,
          column: 45
        }
      },
      "322": {
        start: {
          line: 933,
          column: 29
        },
        end: {
          line: 935,
          column: 64
        }
      },
      "323": {
        start: {
          line: 934,
          column: 26
        },
        end: {
          line: 934,
          column: 63
        }
      },
      "324": {
        start: {
          line: 935,
          column: 24
        },
        end: {
          line: 935,
          column: 63
        }
      },
      "325": {
        start: {
          line: 937,
          column: 6
        },
        end: {
          line: 937,
          column: 53
        }
      },
      "326": {
        start: {
          line: 938,
          column: 6
        },
        end: {
          line: 938,
          column: 60
        }
      },
      "327": {
        start: {
          line: 940,
          column: 6
        },
        end: {
          line: 940,
          column: 19
        }
      },
      "328": {
        start: {
          line: 943,
          column: 6
        },
        end: {
          line: 943,
          column: 58
        }
      },
      "329": {
        start: {
          line: 944,
          column: 6
        },
        end: {
          line: 944,
          column: 18
        }
      },
      "330": {
        start: {
          line: 953,
          column: 4
        },
        end: {
          line: 955,
          column: 5
        }
      },
      "331": {
        start: {
          line: 954,
          column: 6
        },
        end: {
          line: 954,
          column: 30
        }
      },
      "332": {
        start: {
          line: 958,
          column: 4
        },
        end: {
          line: 958,
          column: 25
        }
      },
      "333": {
        start: {
          line: 959,
          column: 4
        },
        end: {
          line: 959,
          column: 30
        }
      },
      "334": {
        start: {
          line: 960,
          column: 4
        },
        end: {
          line: 960,
          column: 29
        }
      },
      "335": {
        start: {
          line: 961,
          column: 4
        },
        end: {
          line: 961,
          column: 27
        }
      },
      "336": {
        start: {
          line: 963,
          column: 4
        },
        end: {
          line: 963,
          column: 50
        }
      },
      "337": {
        start: {
          line: 968,
          column: 26
        },
        end: {
          line: 968,
          column: 49
        }
      },
      "338": {
        start: {
          line: 970,
          column: 0
        },
        end: {
          line: 970,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 3
          }
        },
        loc: {
          start: {
            line: 13,
            column: 16
          },
          end: {
            line: 31,
            column: 3
          }
        },
        line: 13
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        loc: {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 39,
            column: 3
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 44,
            column: 2
          },
          end: {
            line: 44,
            column: 3
          }
        },
        loc: {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 66,
            column: 3
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 46,
            column: 45
          },
          end: {
            line: 46,
            column: 46
          }
        },
        loc: {
          start: {
            line: 46,
            column: 57
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 46
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 50
          },
          end: {
            line: 56,
            column: 51
          }
        },
        loc: {
          start: {
            line: 56,
            column: 62
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 71,
            column: 2
          },
          end: {
            line: 71,
            column: 3
          }
        },
        loc: {
          start: {
            line: 71,
            column: 42
          },
          end: {
            line: 93,
            column: 3
          }
        },
        line: 71
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 98,
            column: 2
          },
          end: {
            line: 98,
            column: 3
          }
        },
        loc: {
          start: {
            line: 98,
            column: 49
          },
          end: {
            line: 187,
            column: 3
          }
        },
        line: 98
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 192,
            column: 2
          },
          end: {
            line: 192,
            column: 3
          }
        },
        loc: {
          start: {
            line: 192,
            column: 34
          },
          end: {
            line: 251,
            column: 3
          }
        },
        line: 192
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 227,
            column: 32
          },
          end: {
            line: 227,
            column: 33
          }
        },
        loc: {
          start: {
            line: 227,
            column: 37
          },
          end: {
            line: 227,
            column: 56
          }
        },
        line: 227
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 228,
            column: 33
          },
          end: {
            line: 228,
            column: 34
          }
        },
        loc: {
          start: {
            line: 228,
            column: 38
          },
          end: {
            line: 228,
            column: 60
          }
        },
        line: 228
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 232,
            column: 36
          },
          end: {
            line: 232,
            column: 37
          }
        },
        loc: {
          start: {
            line: 232,
            column: 50
          },
          end: {
            line: 232,
            column: 59
          }
        },
        line: 232
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 256,
            column: 2
          },
          end: {
            line: 256,
            column: 3
          }
        },
        loc: {
          start: {
            line: 256,
            column: 48
          },
          end: {
            line: 270,
            column: 3
          }
        },
        line: 256
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 275,
            column: 2
          },
          end: {
            line: 275,
            column: 3
          }
        },
        loc: {
          start: {
            line: 275,
            column: 87
          },
          end: {
            line: 337,
            column: 3
          }
        },
        line: 275
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 284,
            column: 44
          },
          end: {
            line: 284,
            column: 45
          }
        },
        loc: {
          start: {
            line: 284,
            column: 49
          },
          end: {
            line: 284,
            column: 90
          }
        },
        line: 284
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 301,
            column: 26
          },
          end: {
            line: 301,
            column: 27
          }
        },
        loc: {
          start: {
            line: 301,
            column: 36
          },
          end: {
            line: 301,
            column: 61
          }
        },
        line: 301
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 342,
            column: 2
          },
          end: {
            line: 342,
            column: 3
          }
        },
        loc: {
          start: {
            line: 342,
            column: 42
          },
          end: {
            line: 377,
            column: 3
          }
        },
        line: 342
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 382,
            column: 2
          },
          end: {
            line: 382,
            column: 3
          }
        },
        loc: {
          start: {
            line: 382,
            column: 32
          },
          end: {
            line: 405,
            column: 3
          }
        },
        line: 382
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 410,
            column: 2
          },
          end: {
            line: 410,
            column: 3
          }
        },
        loc: {
          start: {
            line: 410,
            column: 24
          },
          end: {
            line: 435,
            column: 3
          }
        },
        line: 410
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 420,
            column: 20
          },
          end: {
            line: 420,
            column: 21
          }
        },
        loc: {
          start: {
            line: 420,
            column: 38
          },
          end: {
            line: 426,
            column: 9
          }
        },
        line: 420
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 440,
            column: 2
          },
          end: {
            line: 440,
            column: 3
          }
        },
        loc: {
          start: {
            line: 440,
            column: 95
          },
          end: {
            line: 489,
            column: 3
          }
        },
        line: 440
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 471,
            column: 35
          },
          end: {
            line: 471,
            column: 36
          }
        },
        loc: {
          start: {
            line: 471,
            column: 40
          },
          end: {
            line: 471,
            column: 64
          }
        },
        line: 471
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 475,
            column: 35
          },
          end: {
            line: 475,
            column: 36
          }
        },
        loc: {
          start: {
            line: 475,
            column: 40
          },
          end: {
            line: 475,
            column: 62
          }
        },
        line: 475
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 494,
            column: 2
          },
          end: {
            line: 494,
            column: 3
          }
        },
        loc: {
          start: {
            line: 494,
            column: 66
          },
          end: {
            line: 562,
            column: 3
          }
        },
        line: 494
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 550,
            column: 14
          },
          end: {
            line: 550,
            column: 15
          }
        },
        loc: {
          start: {
            line: 550,
            column: 24
          },
          end: {
            line: 550,
            column: 49
          }
        },
        line: 550
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 567,
            column: 2
          },
          end: {
            line: 567,
            column: 3
          }
        },
        loc: {
          start: {
            line: 567,
            column: 26
          },
          end: {
            line: 580,
            column: 3
          }
        },
        line: 567
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 585,
            column: 2
          },
          end: {
            line: 585,
            column: 3
          }
        },
        loc: {
          start: {
            line: 585,
            column: 40
          },
          end: {
            line: 599,
            column: 3
          }
        },
        line: 585
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 604,
            column: 2
          },
          end: {
            line: 604,
            column: 3
          }
        },
        loc: {
          start: {
            line: 604,
            column: 46
          },
          end: {
            line: 623,
            column: 3
          }
        },
        line: 604
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 614,
            column: 11
          },
          end: {
            line: 614,
            column: 12
          }
        },
        loc: {
          start: {
            line: 614,
            column: 17
          },
          end: {
            line: 622,
            column: 5
          }
        },
        line: 614
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 628,
            column: 2
          },
          end: {
            line: 628,
            column: 3
          }
        },
        loc: {
          start: {
            line: 628,
            column: 44
          },
          end: {
            line: 648,
            column: 3
          }
        },
        line: 628
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 653,
            column: 2
          },
          end: {
            line: 653,
            column: 3
          }
        },
        loc: {
          start: {
            line: 653,
            column: 46
          },
          end: {
            line: 672,
            column: 3
          }
        },
        line: 653
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 677,
            column: 2
          },
          end: {
            line: 677,
            column: 3
          }
        },
        loc: {
          start: {
            line: 677,
            column: 64
          },
          end: {
            line: 698,
            column: 3
          }
        },
        line: 677
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 703,
            column: 2
          },
          end: {
            line: 703,
            column: 3
          }
        },
        loc: {
          start: {
            line: 703,
            column: 27
          },
          end: {
            line: 723,
            column: 3
          }
        },
        line: 703
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 711,
            column: 20
          },
          end: {
            line: 711,
            column: 21
          }
        },
        loc: {
          start: {
            line: 711,
            column: 38
          },
          end: {
            line: 717,
            column: 9
          }
        },
        line: 711
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 728,
            column: 2
          },
          end: {
            line: 728,
            column: 3
          }
        },
        loc: {
          start: {
            line: 728,
            column: 32
          },
          end: {
            line: 736,
            column: 3
          }
        },
        line: 728
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 741,
            column: 2
          },
          end: {
            line: 741,
            column: 3
          }
        },
        loc: {
          start: {
            line: 741,
            column: 34
          },
          end: {
            line: 762,
            column: 3
          }
        },
        line: 741
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 767,
            column: 2
          },
          end: {
            line: 767,
            column: 3
          }
        },
        loc: {
          start: {
            line: 767,
            column: 39
          },
          end: {
            line: 796,
            column: 3
          }
        },
        line: 767
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 801,
            column: 2
          },
          end: {
            line: 801,
            column: 3
          }
        },
        loc: {
          start: {
            line: 801,
            column: 72
          },
          end: {
            line: 841,
            column: 3
          }
        },
        line: 801
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 846,
            column: 2
          },
          end: {
            line: 846,
            column: 3
          }
        },
        loc: {
          start: {
            line: 846,
            column: 77
          },
          end: {
            line: 888,
            column: 3
          }
        },
        line: 846
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 857,
            column: 46
          },
          end: {
            line: 857,
            column: 47
          }
        },
        loc: {
          start: {
            line: 857,
            column: 51
          },
          end: {
            line: 857,
            column: 77
          }
        },
        line: 857
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 893,
            column: 2
          },
          end: {
            line: 893,
            column: 3
          }
        },
        loc: {
          start: {
            line: 893,
            column: 37
          },
          end: {
            line: 908,
            column: 3
          }
        },
        line: 893
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 913,
            column: 2
          },
          end: {
            line: 913,
            column: 3
          }
        },
        loc: {
          start: {
            line: 913,
            column: 25
          },
          end: {
            line: 946,
            column: 3
          }
        },
        line: 913
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 928,
            column: 48
          },
          end: {
            line: 928,
            column: 49
          }
        },
        loc: {
          start: {
            line: 928,
            column: 65
          },
          end: {
            line: 930,
            column: 7
          }
        },
        line: 928
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 934,
            column: 16
          },
          end: {
            line: 934,
            column: 17
          }
        },
        loc: {
          start: {
            line: 934,
            column: 26
          },
          end: {
            line: 934,
            column: 63
          }
        },
        line: 934
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 935,
            column: 14
          },
          end: {
            line: 935,
            column: 15
          }
        },
        loc: {
          start: {
            line: 935,
            column: 24
          },
          end: {
            line: 935,
            column: 63
          }
        },
        line: 935
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 951,
            column: 2
          },
          end: {
            line: 951,
            column: 3
          }
        },
        loc: {
          start: {
            line: 951,
            column: 12
          },
          end: {
            line: 964,
            column: 3
          }
        },
        line: 951
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 98,
            column: 35
          },
          end: {
            line: 98,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 98,
            column: 43
          },
          end: {
            line: 98,
            column: 47
          }
        }],
        line: 98
      },
      "1": {
        loc: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 104,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 104,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "2": {
        loc: {
          start: {
            line: 110,
            column: 19
          },
          end: {
            line: 123,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 19
          },
          end: {
            line: 110,
            column: 49
          }
        }, {
          start: {
            line: 110,
            column: 53
          },
          end: {
            line: 123,
            column: 7
          }
        }],
        line: 110
      },
      "3": {
        loc: {
          start: {
            line: 126,
            column: 6
          },
          end: {
            line: 129,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 6
          },
          end: {
            line: 129,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "4": {
        loc: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 138,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 138,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "5": {
        loc: {
          start: {
            line: 142,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "6": {
        loc: {
          start: {
            line: 143,
            column: 21
          },
          end: {
            line: 143,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 21
          },
          end: {
            line: 143,
            column: 43
          }
        }, {
          start: {
            line: 143,
            column: 47
          },
          end: {
            line: 143,
            column: 48
          }
        }],
        line: 143
      },
      "7": {
        loc: {
          start: {
            line: 144,
            column: 21
          },
          end: {
            line: 144,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 144,
            column: 21
          },
          end: {
            line: 144,
            column: 43
          }
        }, {
          start: {
            line: 144,
            column: 47
          },
          end: {
            line: 144,
            column: 48
          }
        }],
        line: 144
      },
      "8": {
        loc: {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 145,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 145,
            column: 47
          }
        }, {
          start: {
            line: 145,
            column: 51
          },
          end: {
            line: 145,
            column: 52
          }
        }],
        line: 145
      },
      "9": {
        loc: {
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 146,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 146,
            column: 47
          }
        }, {
          start: {
            line: 146,
            column: 51
          },
          end: {
            line: 146,
            column: 52
          }
        }],
        line: 146
      },
      "10": {
        loc: {
          start: {
            line: 196,
            column: 6
          },
          end: {
            line: 198,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 6
          },
          end: {
            line: 198,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "11": {
        loc: {
          start: {
            line: 215,
            column: 6
          },
          end: {
            line: 224,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 6
          },
          end: {
            line: 224,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "12": {
        loc: {
          start: {
            line: 236,
            column: 28
          },
          end: {
            line: 236,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 236,
            column: 44
          },
          end: {
            line: 236,
            column: 70
          }
        }, {
          start: {
            line: 236,
            column: 73
          },
          end: {
            line: 236,
            column: 74
          }
        }],
        line: 236
      },
      "13": {
        loc: {
          start: {
            line: 281,
            column: 25
          },
          end: {
            line: 281,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 281,
            column: 25
          },
          end: {
            line: 281,
            column: 51
          }
        }, {
          start: {
            line: 281,
            column: 55
          },
          end: {
            line: 281,
            column: 57
          }
        }],
        line: 281
      },
      "14": {
        loc: {
          start: {
            line: 286,
            column: 6
          },
          end: {
            line: 307,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 6
          },
          end: {
            line: 307,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "15": {
        loc: {
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 304,
            column: 8
          },
          end: {
            line: 306,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 304
      },
      "16": {
        loc: {
          start: {
            line: 345,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 346,
            column: 6
          },
          end: {
            line: 348,
            column: 14
          }
        }, {
          start: {
            line: 349,
            column: 6
          },
          end: {
            line: 351,
            column: 14
          }
        }, {
          start: {
            line: 352,
            column: 6
          },
          end: {
            line: 354,
            column: 14
          }
        }, {
          start: {
            line: 355,
            column: 6
          },
          end: {
            line: 357,
            column: 14
          }
        }, {
          start: {
            line: 358,
            column: 6
          },
          end: {
            line: 360,
            column: 14
          }
        }, {
          start: {
            line: 361,
            column: 6
          },
          end: {
            line: 363,
            column: 14
          }
        }, {
          start: {
            line: 364,
            column: 6
          },
          end: {
            line: 366,
            column: 14
          }
        }, {
          start: {
            line: 367,
            column: 6
          },
          end: {
            line: 371,
            column: 14
          }
        }, {
          start: {
            line: 372,
            column: 6
          },
          end: {
            line: 373,
            column: 30
          }
        }],
        line: 345
      },
      "17": {
        loc: {
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 397,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 397,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "18": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 396,
            column: 9
          }
        }, {
          start: {
            line: 393,
            column: 15
          },
          end: {
            line: 396,
            column: 9
          }
        }],
        line: 390
      },
      "19": {
        loc: {
          start: {
            line: 440,
            column: 48
          },
          end: {
            line: 440,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 440,
            column: 56
          },
          end: {
            line: 440,
            column: 59
          }
        }],
        line: 440
      },
      "20": {
        loc: {
          start: {
            line: 440,
            column: 61
          },
          end: {
            line: 440,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 440,
            column: 73
          },
          end: {
            line: 440,
            column: 77
          }
        }],
        line: 440
      },
      "21": {
        loc: {
          start: {
            line: 440,
            column: 79
          },
          end: {
            line: 440,
            column: 93
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 440,
            column: 89
          },
          end: {
            line: 440,
            column: 93
          }
        }],
        line: 440
      },
      "22": {
        loc: {
          start: {
            line: 442,
            column: 6
          },
          end: {
            line: 444,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 6
          },
          end: {
            line: 444,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "23": {
        loc: {
          start: {
            line: 451,
            column: 6
          },
          end: {
            line: 461,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 6
          },
          end: {
            line: 461,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "24": {
        loc: {
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 8
          },
          end: {
            line: 460,
            column: 9
          }
        }, {
          start: {
            line: 457,
            column: 15
          },
          end: {
            line: 460,
            column: 9
          }
        }],
        line: 454
      },
      "25": {
        loc: {
          start: {
            line: 463,
            column: 6
          },
          end: {
            line: 465,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 463,
            column: 6
          },
          end: {
            line: 465,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 463
      },
      "26": {
        loc: {
          start: {
            line: 470,
            column: 6
          },
          end: {
            line: 472,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 6
          },
          end: {
            line: 472,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "27": {
        loc: {
          start: {
            line: 474,
            column: 6
          },
          end: {
            line: 476,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 6
          },
          end: {
            line: 476,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 474
      },
      "28": {
        loc: {
          start: {
            line: 479,
            column: 6
          },
          end: {
            line: 481,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 6
          },
          end: {
            line: 481,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "29": {
        loc: {
          start: {
            line: 498,
            column: 6
          },
          end: {
            line: 500,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 6
          },
          end: {
            line: 500,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "30": {
        loc: {
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 538,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 528
      },
      "31": {
        loc: {
          start: {
            line: 579,
            column: 11
          },
          end: {
            line: 579,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 579,
            column: 11
          },
          end: {
            line: 579,
            column: 30
          }
        }, {
          start: {
            line: 579,
            column: 34
          },
          end: {
            line: 579,
            column: 43
          }
        }],
        line: 579
      },
      "32": {
        loc: {
          start: {
            line: 607,
            column: 4
          },
          end: {
            line: 609,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 607,
            column: 4
          },
          end: {
            line: 609,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 607
      },
      "33": {
        loc: {
          start: {
            line: 616,
            column: 6
          },
          end: {
            line: 621,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 616,
            column: 6
          },
          end: {
            line: 621,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 616
      },
      "34": {
        loc: {
          start: {
            line: 618,
            column: 8
          },
          end: {
            line: 620,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 618,
            column: 8
          },
          end: {
            line: 620,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 618
      },
      "35": {
        loc: {
          start: {
            line: 632,
            column: 4
          },
          end: {
            line: 647,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 632,
            column: 4
          },
          end: {
            line: 647,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 632
      },
      "36": {
        loc: {
          start: {
            line: 632,
            column: 8
          },
          end: {
            line: 632,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 632,
            column: 8
          },
          end: {
            line: 632,
            column: 19
          }
        }, {
          start: {
            line: 632,
            column: 23
          },
          end: {
            line: 632,
            column: 43
          }
        }],
        line: 632
      },
      "37": {
        loc: {
          start: {
            line: 657,
            column: 4
          },
          end: {
            line: 671,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 657,
            column: 4
          },
          end: {
            line: 671,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 657
      },
      "38": {
        loc: {
          start: {
            line: 657,
            column: 8
          },
          end: {
            line: 657,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 657,
            column: 8
          },
          end: {
            line: 657,
            column: 19
          }
        }, {
          start: {
            line: 657,
            column: 23
          },
          end: {
            line: 657,
            column: 43
          }
        }],
        line: 657
      },
      "39": {
        loc: {
          start: {
            line: 681,
            column: 4
          },
          end: {
            line: 697,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 681,
            column: 4
          },
          end: {
            line: 697,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 681
      },
      "40": {
        loc: {
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 681,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 681,
            column: 8
          },
          end: {
            line: 681,
            column: 19
          }
        }, {
          start: {
            line: 681,
            column: 23
          },
          end: {
            line: 681,
            column: 43
          }
        }],
        line: 681
      },
      "41": {
        loc: {
          start: {
            line: 771,
            column: 6
          },
          end: {
            line: 783,
            column: 7
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 772,
            column: 8
          },
          end: {
            line: 774,
            column: 16
          }
        }, {
          start: {
            line: 775,
            column: 8
          },
          end: {
            line: 777,
            column: 16
          }
        }, {
          start: {
            line: 778,
            column: 8
          },
          end: {
            line: 780,
            column: 16
          }
        }, {
          start: {
            line: 781,
            column: 8
          },
          end: {
            line: 782,
            column: 60
          }
        }],
        line: 771
      },
      "42": {
        loc: {
          start: {
            line: 803,
            column: 21
          },
          end: {
            line: 812,
            column: 7
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 803,
            column: 21
          },
          end: {
            line: 803,
            column: 51
          }
        }, {
          start: {
            line: 803,
            column: 55
          },
          end: {
            line: 812,
            column: 7
          }
        }],
        line: 803
      },
      "43": {
        loc: {
          start: {
            line: 820,
            column: 6
          },
          end: {
            line: 822,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 820,
            column: 6
          },
          end: {
            line: 822,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 820
      },
      "44": {
        loc: {
          start: {
            line: 820,
            column: 10
          },
          end: {
            line: 820,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 820,
            column: 10
          },
          end: {
            line: 820,
            column: 32
          }
        }, {
          start: {
            line: 820,
            column: 36
          },
          end: {
            line: 820,
            column: 56
          }
        }],
        line: 820
      },
      "45": {
        loc: {
          start: {
            line: 823,
            column: 6
          },
          end: {
            line: 825,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 823,
            column: 6
          },
          end: {
            line: 825,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 823
      },
      "46": {
        loc: {
          start: {
            line: 823,
            column: 10
          },
          end: {
            line: 823,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 823,
            column: 10
          },
          end: {
            line: 823,
            column: 31
          }
        }, {
          start: {
            line: 823,
            column: 35
          },
          end: {
            line: 823,
            column: 54
          }
        }],
        line: 823
      },
      "47": {
        loc: {
          start: {
            line: 831,
            column: 6
          },
          end: {
            line: 834,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 831,
            column: 6
          },
          end: {
            line: 834,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 831
      },
      "48": {
        loc: {
          start: {
            line: 852,
            column: 27
          },
          end: {
            line: 852,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 852,
            column: 27
          },
          end: {
            line: 852,
            column: 64
          }
        }, {
          start: {
            line: 852,
            column: 68
          },
          end: {
            line: 852,
            column: 70
          }
        }],
        line: 852
      },
      "49": {
        loc: {
          start: {
            line: 859,
            column: 8
          },
          end: {
            line: 869,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 859,
            column: 8
          },
          end: {
            line: 869,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 859
      },
      "50": {
        loc: {
          start: {
            line: 878,
            column: 8
          },
          end: {
            line: 880,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 878,
            column: 8
          },
          end: {
            line: 880,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 878
      },
      "51": {
        loc: {
          start: {
            line: 929,
            column: 22
          },
          end: {
            line: 929,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 929,
            column: 22
          },
          end: {
            line: 929,
            column: 38
          }
        }, {
          start: {
            line: 929,
            column: 42
          },
          end: {
            line: 929,
            column: 43
          }
        }],
        line: 929
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "56a0a36b0a10c2ae4c7d2582f537ff799284db2b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_e2714gbcn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_e2714gbcn();
const {
  client: redis
} =
/* istanbul ignore next */
(cov_e2714gbcn().s[0]++, require('../config/redis'));
const {
  Op
} =
/* istanbul ignore next */
(cov_e2714gbcn().s[1]++, require('sequelize'));
const Trade =
/* istanbul ignore next */
(cov_e2714gbcn().s[2]++, require('../models/Trade'));
const Market =
/* istanbul ignore next */
(cov_e2714gbcn().s[3]++, require('../models/Market'));
const EventEmitter =
/* istanbul ignore next */
(cov_e2714gbcn().s[4]++, require('events'));

/**
 * Market Data Service
 * Mengelola distribusi real-time market data, candlestick generation,
 * dan ticker updates
 */
class MarketDataService extends EventEmitter {
  constructor() {
    /* istanbul ignore next */
    cov_e2714gbcn().f[0]++;
    cov_e2714gbcn().s[5]++;
    super();
    /* istanbul ignore next */
    cov_e2714gbcn().s[6]++;
    this.tickers = new Map(); // Current ticker data
    /* istanbul ignore next */
    cov_e2714gbcn().s[7]++;
    this.candlesticks = new Map(); // Candlestick data cache
    /* istanbul ignore next */
    cov_e2714gbcn().s[8]++;
    this.subscribers = new Map(); // WebSocket subscribers
    /* istanbul ignore next */
    cov_e2714gbcn().s[9]++;
    this.intervals = new Map(); // Update intervals

    // Configuration
    /* istanbul ignore next */
    cov_e2714gbcn().s[10]++;
    this.config = {
      tickerUpdateInterval: 1000,
      // 1 second
      candlestickIntervals: ['1m', '5m', '15m', '30m', '1h', '4h', '1d', '1w'],
      redisExpiry: 3600,
      // 1 hour
      maxCandlesticks: 1000,
      priceChangeWindow: 24 * 60 * 60 * 1000 // 24 hours in ms
    };
    /* istanbul ignore next */
    cov_e2714gbcn().s[11]++;
    this.setupEventListeners();
    /* istanbul ignore next */
    cov_e2714gbcn().s[12]++;
    this.initializeIntervals();
  }
  setupEventListeners() {
    /* istanbul ignore next */
    cov_e2714gbcn().f[1]++;
    cov_e2714gbcn().s[13]++;
    // Listen for new trades
    this.on('newTrade', this.handleNewTrade.bind(this));

    // Listen for market updates
    /* istanbul ignore next */
    cov_e2714gbcn().s[14]++;
    this.on('marketUpdate', this.handleMarketUpdate.bind(this));
  }

  /**
   * Initialize update intervals
   */
  initializeIntervals() {
    /* istanbul ignore next */
    cov_e2714gbcn().f[2]++;
    cov_e2714gbcn().s[15]++;
    // Ticker updates with proper error handling
    this.intervals.set('ticker', setInterval(async () => {
      /* istanbul ignore next */
      cov_e2714gbcn().f[3]++;
      cov_e2714gbcn().s[16]++;
      try {
        /* istanbul ignore next */
        cov_e2714gbcn().s[17]++;
        await this.updateAllTickers();
      } catch (error) {
        /* istanbul ignore next */
        cov_e2714gbcn().s[18]++;
        console.error('Error in ticker update interval:', error);
        // Don't rethrow to prevent unhandled rejection
      }
    }, this.config.tickerUpdateInterval));

    // Candlestick updates with proper error handling
    /* istanbul ignore next */
    cov_e2714gbcn().s[19]++;
    this.intervals.set('candlestick', setInterval(async () => {
      /* istanbul ignore next */
      cov_e2714gbcn().f[4]++;
      cov_e2714gbcn().s[20]++;
      try {
        /* istanbul ignore next */
        cov_e2714gbcn().s[21]++;
        await this.updateAllCandlesticks();
      } catch (error) {
        /* istanbul ignore next */
        cov_e2714gbcn().s[22]++;
        console.error('Error in candlestick update interval:', error);
        // Don't rethrow to prevent unhandled rejection
      }
    }, 60000)); // Every minute
    /* istanbul ignore next */
    cov_e2714gbcn().s[23]++;
    console.log('Market data intervals initialized with error handling');
  }

  /**
   * Handle new trade
   */
  async handleNewTrade({
    trade,
    market
  }) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[5]++;
    cov_e2714gbcn().s[24]++;
    try {
      /* istanbul ignore next */
      cov_e2714gbcn().s[25]++;
      // Update ticker
      await this.updateTicker(market.symbol, trade);

      // Update candlesticks
      /* istanbul ignore next */
      cov_e2714gbcn().s[26]++;
      await this.updateCandlesticks(market.symbol, trade);

      // Broadcast trade data
      /* istanbul ignore next */
      cov_e2714gbcn().s[27]++;
      this.broadcastTradeData(market.symbol, {
        type: 'trade',
        data: {
          price: parseFloat(trade.price),
          quantity: parseFloat(trade.quantity),
          side: trade.side,
          timestamp: trade.created_at
        }
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[28]++;
      console.error(`Error handling new trade for ${market.symbol}:`, error);
    }
  }

  /**
   * Update ticker data
   */
  async updateTicker(marketSymbol, trade =
  /* istanbul ignore next */
  (cov_e2714gbcn().b[0][0]++, null)) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[6]++;
    cov_e2714gbcn().s[29]++;
    try {
      const market =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[30]++, await Market.findOne({
        where: {
          symbol: marketSymbol
        }
      }));
      /* istanbul ignore next */
      cov_e2714gbcn().s[31]++;
      if (!market) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[1][0]++;
        cov_e2714gbcn().s[32]++;
        throw new Error(`Market ${marketSymbol} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[1][1]++;
      }

      // Get 24h statistics
      const stats24h =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[33]++, await this.get24hStats(marketSymbol));

      // Current ticker data
      let ticker =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[34]++,
      /* istanbul ignore next */
      (cov_e2714gbcn().b[2][0]++, this.tickers.get(marketSymbol)) ||
      /* istanbul ignore next */
      (cov_e2714gbcn().b[2][1]++, {
        symbol: marketSymbol,
        lastPrice: parseFloat(market.last_price),
        volume24h: 0,
        high24h: 0,
        low24h: 0,
        change24h: 0,
        changePercent24h: 0,
        bid: 0,
        ask: 0,
        bidSize: 0,
        askSize: 0,
        timestamp: new Date().toISOString()
      }));

      // Update with trade data if provided
      /* istanbul ignore next */
      cov_e2714gbcn().s[35]++;
      if (trade) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[3][0]++;
        cov_e2714gbcn().s[36]++;
        ticker.lastPrice = parseFloat(trade.price);
        /* istanbul ignore next */
        cov_e2714gbcn().s[37]++;
        ticker.timestamp = new Date().toISOString();
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[3][1]++;
      }

      // Update with 24h stats
      cov_e2714gbcn().s[38]++;
      if (stats24h) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[4][0]++;
        cov_e2714gbcn().s[39]++;
        ticker.volume24h = stats24h.volume;
        /* istanbul ignore next */
        cov_e2714gbcn().s[40]++;
        ticker.high24h = stats24h.high;
        /* istanbul ignore next */
        cov_e2714gbcn().s[41]++;
        ticker.low24h = stats24h.low;
        /* istanbul ignore next */
        cov_e2714gbcn().s[42]++;
        ticker.change24h = stats24h.change;
        /* istanbul ignore next */
        cov_e2714gbcn().s[43]++;
        ticker.changePercent24h = stats24h.changePercent;
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[4][1]++;
      }

      // Get best bid/ask from order book
      const orderBookStats =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[44]++, await this.getOrderBookStats(marketSymbol));
      /* istanbul ignore next */
      cov_e2714gbcn().s[45]++;
      if (orderBookStats) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[5][0]++;
        cov_e2714gbcn().s[46]++;
        ticker.bid =
        /* istanbul ignore next */
        (cov_e2714gbcn().b[6][0]++, orderBookStats.bestBid) ||
        /* istanbul ignore next */
        (cov_e2714gbcn().b[6][1]++, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[47]++;
        ticker.ask =
        /* istanbul ignore next */
        (cov_e2714gbcn().b[7][0]++, orderBookStats.bestAsk) ||
        /* istanbul ignore next */
        (cov_e2714gbcn().b[7][1]++, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[48]++;
        ticker.bidSize =
        /* istanbul ignore next */
        (cov_e2714gbcn().b[8][0]++, orderBookStats.bidSize) ||
        /* istanbul ignore next */
        (cov_e2714gbcn().b[8][1]++, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[49]++;
        ticker.askSize =
        /* istanbul ignore next */
        (cov_e2714gbcn().b[9][0]++, orderBookStats.askSize) ||
        /* istanbul ignore next */
        (cov_e2714gbcn().b[9][1]++, 0);
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[5][1]++;
      }

      // Cache ticker
      cov_e2714gbcn().s[50]++;
      this.tickers.set(marketSymbol, ticker);

      // Cache in Redis with error handling
      /* istanbul ignore next */
      cov_e2714gbcn().s[51]++;
      try {
        /* istanbul ignore next */
        cov_e2714gbcn().s[52]++;
        await redis.set(`ticker:${marketSymbol}`, JSON.stringify(ticker), {
          EX: this.config.redisExpiry
        });
      } catch (redisError) {
        /* istanbul ignore next */
        cov_e2714gbcn().s[53]++;
        console.error(`Redis cache error for ticker ${marketSymbol}:`, redisError);
        // Continue without caching to prevent unhandled rejection
      }

      // Broadcast ticker update
      /* istanbul ignore next */
      cov_e2714gbcn().s[54]++;
      this.broadcastTickerData(marketSymbol, ticker);
      /* istanbul ignore next */
      cov_e2714gbcn().s[55]++;
      return ticker;
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[56]++;
      console.error(`Error updating ticker for ${marketSymbol}:`, error);
      // Return a default ticker instead of throwing to prevent unhandled rejection
      /* istanbul ignore next */
      cov_e2714gbcn().s[57]++;
      return {
        symbol: marketSymbol,
        lastPrice: 0,
        volume24h: 0,
        high24h: 0,
        low24h: 0,
        change24h: 0,
        changePercent24h: 0,
        bid: 0,
        ask: 0,
        bidSize: 0,
        askSize: 0,
        timestamp: new Date().toISOString()
      };
    }
  }

  /**
   * Get 24h statistics
   */
  async get24hStats(marketSymbol) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[7]++;
    cov_e2714gbcn().s[58]++;
    try {
      const market =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[59]++, await Market.findOne({
        where: {
          symbol: marketSymbol
        }
      }));
      /* istanbul ignore next */
      cov_e2714gbcn().s[60]++;
      if (!market) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[10][0]++;
        cov_e2714gbcn().s[61]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[10][1]++;
      }
      const now =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[62]++, new Date());
      const yesterday =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[63]++, new Date(now.getTime() - this.config.priceChangeWindow));

      // Get trades from last 24 hours
      const trades =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[64]++, await Trade.findAll({
        where: {
          trading_pair_id: market.id,
          created_at: {
            [Op.gte]: yesterday
          }
        },
        order: [['created_at', 'ASC']],
        attributes: ['price', 'quantity', 'created_at']
      }));
      /* istanbul ignore next */
      cov_e2714gbcn().s[65]++;
      if (trades.length === 0) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[11][0]++;
        cov_e2714gbcn().s[66]++;
        return {
          volume: 0,
          high: parseFloat(market.last_price),
          low: parseFloat(market.last_price),
          change: 0,
          changePercent: 0,
          openPrice: parseFloat(market.last_price)
        };
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[11][1]++;
      }

      // Calculate statistics
      const prices =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[67]++, trades.map(t => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[8]++;
        cov_e2714gbcn().s[68]++;
        return parseFloat(t.price);
      }));
      const volumes =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[69]++, trades.map(t => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[9]++;
        cov_e2714gbcn().s[70]++;
        return parseFloat(t.quantity);
      }));
      const high =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[71]++, Math.max(...prices));
      const low =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[72]++, Math.min(...prices));
      const volume =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[73]++, volumes.reduce((sum, vol) => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[10]++;
        cov_e2714gbcn().s[74]++;
        return sum + vol;
      }, 0));
      const openPrice =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[75]++, prices[0]);
      const currentPrice =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[76]++, parseFloat(market.last_price));
      const change =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[77]++, currentPrice - openPrice);
      const changePercent =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[78]++, openPrice > 0 ?
      /* istanbul ignore next */
      (cov_e2714gbcn().b[12][0]++, change / openPrice * 100) :
      /* istanbul ignore next */
      (cov_e2714gbcn().b[12][1]++, 0));
      /* istanbul ignore next */
      cov_e2714gbcn().s[79]++;
      return {
        volume,
        high,
        low,
        change,
        changePercent,
        openPrice
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[80]++;
      console.error(`Error getting 24h stats for ${marketSymbol}:`, error);
      /* istanbul ignore next */
      cov_e2714gbcn().s[81]++;
      return null;
    }
  }

  /**
   * Update candlesticks
   */
  async updateCandlesticks(marketSymbol, trade) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[11]++;
    cov_e2714gbcn().s[82]++;
    try {
      const tradeTime =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[83]++, new Date(trade.created_at));
      const price =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[84]++, parseFloat(trade.price));
      const volume =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[85]++, parseFloat(trade.quantity));

      // Update candlesticks for all intervals
      /* istanbul ignore next */
      cov_e2714gbcn().s[86]++;
      for (const interval of this.config.candlestickIntervals) {
        /* istanbul ignore next */
        cov_e2714gbcn().s[87]++;
        await this.updateCandlestickForInterval(marketSymbol, interval, tradeTime, price, volume);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[88]++;
      console.error(`Error updating candlesticks for ${marketSymbol}:`, error);
    }
  }

  /**
   * Update candlestick for specific interval
   */
  async updateCandlestickForInterval(marketSymbol, interval, tradeTime, price, volume) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[12]++;
    cov_e2714gbcn().s[89]++;
    try {
      const candlestickTime =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[90]++, this.getCandlestickTime(tradeTime, interval));
      const key =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[91]++, `${marketSymbol}:${interval}`);

      // Get current candlesticks
      let candlesticks =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[92]++,
      /* istanbul ignore next */
      (cov_e2714gbcn().b[13][0]++, this.candlesticks.get(key)) ||
      /* istanbul ignore next */
      (cov_e2714gbcn().b[13][1]++, []));

      // Find or create current candlestick
      let currentCandle =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[93]++, candlesticks.find(c => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[13]++;
        cov_e2714gbcn().s[94]++;
        return c.timestamp === candlestickTime.getTime();
      }));
      /* istanbul ignore next */
      cov_e2714gbcn().s[95]++;
      if (!currentCandle) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[14][0]++;
        cov_e2714gbcn().s[96]++;
        // Create new candlestick
        currentCandle = {
          timestamp: candlestickTime.getTime(),
          open: price,
          high: price,
          low: price,
          close: price,
          volume: 0,
          trades: 0
        };
        /* istanbul ignore next */
        cov_e2714gbcn().s[97]++;
        candlesticks.push(currentCandle);

        // Sort by timestamp
        /* istanbul ignore next */
        cov_e2714gbcn().s[98]++;
        candlesticks.sort((a, b) => {
          /* istanbul ignore next */
          cov_e2714gbcn().f[14]++;
          cov_e2714gbcn().s[99]++;
          return a.timestamp - b.timestamp;
        });

        // Limit array size
        /* istanbul ignore next */
        cov_e2714gbcn().s[100]++;
        if (candlesticks.length > this.config.maxCandlesticks) {
          /* istanbul ignore next */
          cov_e2714gbcn().b[15][0]++;
          cov_e2714gbcn().s[101]++;
          candlesticks = candlesticks.slice(-this.config.maxCandlesticks);
        } else
        /* istanbul ignore next */
        {
          cov_e2714gbcn().b[15][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[14][1]++;
      }

      // Update candlestick
      cov_e2714gbcn().s[102]++;
      currentCandle.high = Math.max(currentCandle.high, price);
      /* istanbul ignore next */
      cov_e2714gbcn().s[103]++;
      currentCandle.low = Math.min(currentCandle.low, price);
      /* istanbul ignore next */
      cov_e2714gbcn().s[104]++;
      currentCandle.close = price;
      /* istanbul ignore next */
      cov_e2714gbcn().s[105]++;
      currentCandle.volume += volume;
      /* istanbul ignore next */
      cov_e2714gbcn().s[106]++;
      currentCandle.trades += 1;

      // Cache updated candlesticks
      /* istanbul ignore next */
      cov_e2714gbcn().s[107]++;
      this.candlesticks.set(key, candlesticks);

      // Cache in Redis with error handling
      /* istanbul ignore next */
      cov_e2714gbcn().s[108]++;
      try {
        /* istanbul ignore next */
        cov_e2714gbcn().s[109]++;
        await redis.set(`candlesticks:${key}`, JSON.stringify(candlesticks.slice(-100)),
        // Store last 100 candles
        {
          EX: this.config.redisExpiry
        });
      } catch (redisError) {
        /* istanbul ignore next */
        cov_e2714gbcn().s[110]++;
        console.error(`Redis cache error for candlesticks ${key}:`, redisError);
        // Continue without caching to prevent unhandled rejection
      }

      // Broadcast candlestick update
      /* istanbul ignore next */
      cov_e2714gbcn().s[111]++;
      this.broadcastCandlestickData(marketSymbol, interval, currentCandle);
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[112]++;
      console.error(`Error updating candlestick for ${marketSymbol} ${interval}:`, error);
    }
  }

  /**
   * Get candlestick time based on interval
   */
  getCandlestickTime(tradeTime, interval) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[15]++;
    const time =
    /* istanbul ignore next */
    (cov_e2714gbcn().s[113]++, new Date(tradeTime));
    /* istanbul ignore next */
    cov_e2714gbcn().s[114]++;
    switch (interval) {
      case '1m':
        /* istanbul ignore next */
        cov_e2714gbcn().b[16][0]++;
        cov_e2714gbcn().s[115]++;
        time.setSeconds(0, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[116]++;
        break;
      case '5m':
        /* istanbul ignore next */
        cov_e2714gbcn().b[16][1]++;
        cov_e2714gbcn().s[117]++;
        time.setMinutes(Math.floor(time.getMinutes() / 5) * 5, 0, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[118]++;
        break;
      case '15m':
        /* istanbul ignore next */
        cov_e2714gbcn().b[16][2]++;
        cov_e2714gbcn().s[119]++;
        time.setMinutes(Math.floor(time.getMinutes() / 15) * 15, 0, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[120]++;
        break;
      case '30m':
        /* istanbul ignore next */
        cov_e2714gbcn().b[16][3]++;
        cov_e2714gbcn().s[121]++;
        time.setMinutes(Math.floor(time.getMinutes() / 30) * 30, 0, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[122]++;
        break;
      case '1h':
        /* istanbul ignore next */
        cov_e2714gbcn().b[16][4]++;
        cov_e2714gbcn().s[123]++;
        time.setMinutes(0, 0, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[124]++;
        break;
      case '4h':
        /* istanbul ignore next */
        cov_e2714gbcn().b[16][5]++;
        cov_e2714gbcn().s[125]++;
        time.setHours(Math.floor(time.getHours() / 4) * 4, 0, 0, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[126]++;
        break;
      case '1d':
        /* istanbul ignore next */
        cov_e2714gbcn().b[16][6]++;
        cov_e2714gbcn().s[127]++;
        time.setHours(0, 0, 0, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[128]++;
        break;
      case '1w':
        /* istanbul ignore next */
        cov_e2714gbcn().b[16][7]++;
        const dayOfWeek =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[129]++, time.getDay());
        /* istanbul ignore next */
        cov_e2714gbcn().s[130]++;
        time.setDate(time.getDate() - dayOfWeek);
        /* istanbul ignore next */
        cov_e2714gbcn().s[131]++;
        time.setHours(0, 0, 0, 0);
        /* istanbul ignore next */
        cov_e2714gbcn().s[132]++;
        break;
      default:
        /* istanbul ignore next */
        cov_e2714gbcn().b[16][8]++;
        cov_e2714gbcn().s[133]++;
        time.setSeconds(0, 0);
    }
    /* istanbul ignore next */
    cov_e2714gbcn().s[134]++;
    return time;
  }

  /**
   * Get ticker data
   */
  async getTicker(marketSymbol) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[16]++;
    cov_e2714gbcn().s[135]++;
    try {
      // Try memory cache first
      let ticker =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[136]++, this.tickers.get(marketSymbol));
      /* istanbul ignore next */
      cov_e2714gbcn().s[137]++;
      if (!ticker) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[17][0]++;
        // Try Redis cache
        const cached =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[138]++, await redis.get(`ticker:${marketSymbol}`));
        /* istanbul ignore next */
        cov_e2714gbcn().s[139]++;
        if (cached) {
          /* istanbul ignore next */
          cov_e2714gbcn().b[18][0]++;
          cov_e2714gbcn().s[140]++;
          ticker = JSON.parse(cached);
          /* istanbul ignore next */
          cov_e2714gbcn().s[141]++;
          this.tickers.set(marketSymbol, ticker);
        } else {
          /* istanbul ignore next */
          cov_e2714gbcn().b[18][1]++;
          cov_e2714gbcn().s[142]++;
          // Generate fresh ticker
          ticker = await this.updateTicker(marketSymbol);
        }
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[17][1]++;
      }
      cov_e2714gbcn().s[143]++;
      return ticker;
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[144]++;
      console.error(`Error getting ticker for ${marketSymbol}:`, error);
      /* istanbul ignore next */
      cov_e2714gbcn().s[145]++;
      throw error;
    }
  }

  /**
   * Get all tickers
   */
  async getAllTickers() {
    /* istanbul ignore next */
    cov_e2714gbcn().f[17]++;
    cov_e2714gbcn().s[146]++;
    try {
      const markets =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[147]++, await Market.findAll({
        where: {
          is_active: true
        },
        attributes: ['symbol']
      }));
      const tickers =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[148]++, {});
      /* istanbul ignore next */
      cov_e2714gbcn().s[149]++;
      await Promise.all(markets.map(async market => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[18]++;
        cov_e2714gbcn().s[150]++;
        try {
          /* istanbul ignore next */
          cov_e2714gbcn().s[151]++;
          tickers[market.symbol] = await this.getTicker(market.symbol);
        } catch (error) {
          /* istanbul ignore next */
          cov_e2714gbcn().s[152]++;
          console.error(`Error getting ticker for ${market.symbol}:`, error);
        }
      }));
      /* istanbul ignore next */
      cov_e2714gbcn().s[153]++;
      return tickers;
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[154]++;
      console.error('Error getting all tickers:', error);
      /* istanbul ignore next */
      cov_e2714gbcn().s[155]++;
      throw error;
    }
  }

  /**
   * Get candlesticks
   */
  async getCandlesticks(marketSymbol, interval, limit =
  /* istanbul ignore next */
  (cov_e2714gbcn().b[19][0]++, 100), startTime =
  /* istanbul ignore next */
  (cov_e2714gbcn().b[20][0]++, null), endTime =
  /* istanbul ignore next */
  (cov_e2714gbcn().b[21][0]++, null)) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[19]++;
    cov_e2714gbcn().s[156]++;
    try {
      /* istanbul ignore next */
      cov_e2714gbcn().s[157]++;
      if (!this.config.candlestickIntervals.includes(interval)) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[22][0]++;
        cov_e2714gbcn().s[158]++;
        throw new Error(`Invalid interval: ${interval}`);
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[22][1]++;
      }
      const key =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[159]++, `${marketSymbol}:${interval}`);

      // Try memory cache first
      let candlesticks =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[160]++, this.candlesticks.get(key));
      /* istanbul ignore next */
      cov_e2714gbcn().s[161]++;
      if (!candlesticks) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[23][0]++;
        // Try Redis cache
        const cached =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[162]++, await redis.get(`candlesticks:${key}`));
        /* istanbul ignore next */
        cov_e2714gbcn().s[163]++;
        if (cached) {
          /* istanbul ignore next */
          cov_e2714gbcn().b[24][0]++;
          cov_e2714gbcn().s[164]++;
          candlesticks = JSON.parse(cached);
          /* istanbul ignore next */
          cov_e2714gbcn().s[165]++;
          this.candlesticks.set(key, candlesticks);
        } else {
          /* istanbul ignore next */
          cov_e2714gbcn().b[24][1]++;
          cov_e2714gbcn().s[166]++;
          // Generate from database
          candlesticks = await this.generateCandlesticksFromDB(marketSymbol, interval, limit);
        }
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[23][1]++;
      }
      cov_e2714gbcn().s[167]++;
      if (!candlesticks) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[25][0]++;
        cov_e2714gbcn().s[168]++;
        return [];
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[25][1]++;
      }

      // Apply filters
      let filtered =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[169]++, candlesticks);
      /* istanbul ignore next */
      cov_e2714gbcn().s[170]++;
      if (startTime) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[26][0]++;
        cov_e2714gbcn().s[171]++;
        filtered = filtered.filter(c => {
          /* istanbul ignore next */
          cov_e2714gbcn().f[20]++;
          cov_e2714gbcn().s[172]++;
          return c.timestamp >= startTime;
        });
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[26][1]++;
      }
      cov_e2714gbcn().s[173]++;
      if (endTime) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[27][0]++;
        cov_e2714gbcn().s[174]++;
        filtered = filtered.filter(c => {
          /* istanbul ignore next */
          cov_e2714gbcn().f[21]++;
          cov_e2714gbcn().s[175]++;
          return c.timestamp <= endTime;
        });
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[27][1]++;
      }

      // Apply limit
      cov_e2714gbcn().s[176]++;
      if (limit) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[28][0]++;
        cov_e2714gbcn().s[177]++;
        filtered = filtered.slice(-limit);
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[28][1]++;
      }
      cov_e2714gbcn().s[178]++;
      return filtered;
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[179]++;
      console.error(`Error getting candlesticks for ${marketSymbol} ${interval}:`, error);
      /* istanbul ignore next */
      cov_e2714gbcn().s[180]++;
      throw error;
    }
  }

  /**
   * Generate candlesticks from database
   */
  async generateCandlesticksFromDB(marketSymbol, interval, limit) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[22]++;
    cov_e2714gbcn().s[181]++;
    try {
      const market =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[182]++, await Market.findOne({
        where: {
          symbol: marketSymbol
        }
      }));
      /* istanbul ignore next */
      cov_e2714gbcn().s[183]++;
      if (!market) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[29][0]++;
        cov_e2714gbcn().s[184]++;
        throw new Error(`Market ${marketSymbol} not found`);
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[29][1]++;
      }

      // Calculate time range
      const now =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[185]++, new Date());
      const intervalMs =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[186]++, this.getIntervalMs(interval));
      const startTime =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[187]++, new Date(now.getTime() - limit * intervalMs));

      // Get trades
      const trades =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[188]++, await Trade.findAll({
        where: {
          trading_pair_id: market.id,
          created_at: {
            [Op.gte]: startTime
          }
        },
        order: [['created_at', 'ASC']],
        attributes: ['price', 'quantity', 'created_at']
      }));

      // Group trades by candlestick periods
      const candlestickMap =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[189]++, new Map());
      /* istanbul ignore next */
      cov_e2714gbcn().s[190]++;
      for (const trade of trades) {
        const candleTime =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[191]++, this.getCandlestickTime(trade.created_at, interval));
        const key =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[192]++, candleTime.getTime());
        const price =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[193]++, parseFloat(trade.price));
        const volume =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[194]++, parseFloat(trade.quantity));
        /* istanbul ignore next */
        cov_e2714gbcn().s[195]++;
        if (!candlestickMap.has(key)) {
          /* istanbul ignore next */
          cov_e2714gbcn().b[30][0]++;
          cov_e2714gbcn().s[196]++;
          candlestickMap.set(key, {
            timestamp: key,
            open: price,
            high: price,
            low: price,
            close: price,
            volume: 0,
            trades: 0
          });
        } else
        /* istanbul ignore next */
        {
          cov_e2714gbcn().b[30][1]++;
        }
        const candle =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[197]++, candlestickMap.get(key));
        /* istanbul ignore next */
        cov_e2714gbcn().s[198]++;
        candle.high = Math.max(candle.high, price);
        /* istanbul ignore next */
        cov_e2714gbcn().s[199]++;
        candle.low = Math.min(candle.low, price);
        /* istanbul ignore next */
        cov_e2714gbcn().s[200]++;
        candle.close = price;
        /* istanbul ignore next */
        cov_e2714gbcn().s[201]++;
        candle.volume += volume;
        /* istanbul ignore next */
        cov_e2714gbcn().s[202]++;
        candle.trades += 1;
      }

      // Convert to array and sort
      const candlesticks =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[203]++, Array.from(candlestickMap.values()).sort((a, b) => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[23]++;
        cov_e2714gbcn().s[204]++;
        return a.timestamp - b.timestamp;
      }));

      // Cache the result
      const key =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[205]++, `${marketSymbol}:${interval}`);
      /* istanbul ignore next */
      cov_e2714gbcn().s[206]++;
      this.candlesticks.set(key, candlesticks);
      /* istanbul ignore next */
      cov_e2714gbcn().s[207]++;
      return candlesticks;
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[208]++;
      console.error(`Error generating candlesticks from DB for ${marketSymbol} ${interval}:`, error);
      /* istanbul ignore next */
      cov_e2714gbcn().s[209]++;
      return [];
    }
  }

  /**
   * Get interval in milliseconds
   */
  getIntervalMs(interval) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[24]++;
    const intervals =
    /* istanbul ignore next */
    (cov_e2714gbcn().s[210]++, {
      '1m': 60 * 1000,
      '5m': 5 * 60 * 1000,
      '15m': 15 * 60 * 1000,
      '30m': 30 * 60 * 1000,
      '1h': 60 * 60 * 1000,
      '4h': 4 * 60 * 60 * 1000,
      '1d': 24 * 60 * 60 * 1000,
      '1w': 7 * 24 * 60 * 60 * 1000
    });
    /* istanbul ignore next */
    cov_e2714gbcn().s[211]++;
    return /* istanbul ignore next */(cov_e2714gbcn().b[31][0]++, intervals[interval]) ||
    /* istanbul ignore next */
    (cov_e2714gbcn().b[31][1]++, 60 * 1000);
  }

  /**
   * Get order book statistics
   */
  async getOrderBookStats(marketSymbol) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[25]++;
    cov_e2714gbcn().s[212]++;
    try {
      /* istanbul ignore next */
      cov_e2714gbcn().s[213]++;
      // This would integrate with OrderBookManager
      // For now, return mock data
      return {
        bestBid: 0,
        bestAsk: 0,
        bidSize: 0,
        askSize: 0
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[214]++;
      console.error(`Error getting order book stats for ${marketSymbol}:`, error);
      /* istanbul ignore next */
      cov_e2714gbcn().s[215]++;
      return null;
    }
  }

  /**
   * Subscribe to market data updates
   */
  subscribe(marketSymbol, dataType, callback) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[26]++;
    const key =
    /* istanbul ignore next */
    (cov_e2714gbcn().s[216]++, `${marketSymbol}:${dataType}`);
    /* istanbul ignore next */
    cov_e2714gbcn().s[217]++;
    if (!this.subscribers.has(key)) {
      /* istanbul ignore next */
      cov_e2714gbcn().b[32][0]++;
      cov_e2714gbcn().s[218]++;
      this.subscribers.set(key, new Set());
    } else
    /* istanbul ignore next */
    {
      cov_e2714gbcn().b[32][1]++;
    }
    cov_e2714gbcn().s[219]++;
    this.subscribers.get(key).add(callback);

    // Return unsubscribe function
    /* istanbul ignore next */
    cov_e2714gbcn().s[220]++;
    return () => {
      /* istanbul ignore next */
      cov_e2714gbcn().f[27]++;
      const subscribers =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[221]++, this.subscribers.get(key));
      /* istanbul ignore next */
      cov_e2714gbcn().s[222]++;
      if (subscribers) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[33][0]++;
        cov_e2714gbcn().s[223]++;
        subscribers.delete(callback);
        /* istanbul ignore next */
        cov_e2714gbcn().s[224]++;
        if (subscribers.size === 0) {
          /* istanbul ignore next */
          cov_e2714gbcn().b[34][0]++;
          cov_e2714gbcn().s[225]++;
          this.subscribers.delete(key);
        } else
        /* istanbul ignore next */
        {
          cov_e2714gbcn().b[34][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[33][1]++;
      }
    };
  }

  /**
   * Broadcast ticker data
   */
  broadcastTickerData(marketSymbol, ticker) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[28]++;
    const key =
    /* istanbul ignore next */
    (cov_e2714gbcn().s[226]++, `${marketSymbol}:ticker`);
    const subscribers =
    /* istanbul ignore next */
    (cov_e2714gbcn().s[227]++, this.subscribers.get(key));
    /* istanbul ignore next */
    cov_e2714gbcn().s[228]++;
    if (
    /* istanbul ignore next */
    (cov_e2714gbcn().b[36][0]++, subscribers) &&
    /* istanbul ignore next */
    (cov_e2714gbcn().b[36][1]++, subscribers.size > 0)) {
      /* istanbul ignore next */
      cov_e2714gbcn().b[35][0]++;
      const update =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[229]++, {
        type: 'ticker',
        symbol: marketSymbol,
        data: ticker,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_e2714gbcn().s[230]++;
      for (const callback of subscribers) {
        /* istanbul ignore next */
        cov_e2714gbcn().s[231]++;
        try {
          /* istanbul ignore next */
          cov_e2714gbcn().s[232]++;
          callback(update);
        } catch (error) {
          /* istanbul ignore next */
          cov_e2714gbcn().s[233]++;
          console.error('Error broadcasting ticker data:', error);
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_e2714gbcn().b[35][1]++;
    }
  }

  /**
   * Broadcast trade data
   */
  broadcastTradeData(marketSymbol, tradeData) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[29]++;
    const key =
    /* istanbul ignore next */
    (cov_e2714gbcn().s[234]++, `${marketSymbol}:trades`);
    const subscribers =
    /* istanbul ignore next */
    (cov_e2714gbcn().s[235]++, this.subscribers.get(key));
    /* istanbul ignore next */
    cov_e2714gbcn().s[236]++;
    if (
    /* istanbul ignore next */
    (cov_e2714gbcn().b[38][0]++, subscribers) &&
    /* istanbul ignore next */
    (cov_e2714gbcn().b[38][1]++, subscribers.size > 0)) {
      /* istanbul ignore next */
      cov_e2714gbcn().b[37][0]++;
      const update =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[237]++, {
        ...tradeData,
        symbol: marketSymbol,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_e2714gbcn().s[238]++;
      for (const callback of subscribers) {
        /* istanbul ignore next */
        cov_e2714gbcn().s[239]++;
        try {
          /* istanbul ignore next */
          cov_e2714gbcn().s[240]++;
          callback(update);
        } catch (error) {
          /* istanbul ignore next */
          cov_e2714gbcn().s[241]++;
          console.error('Error broadcasting trade data:', error);
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_e2714gbcn().b[37][1]++;
    }
  }

  /**
   * Broadcast candlestick data
   */
  broadcastCandlestickData(marketSymbol, interval, candlestick) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[30]++;
    const key =
    /* istanbul ignore next */
    (cov_e2714gbcn().s[242]++, `${marketSymbol}:candlesticks:${interval}`);
    const subscribers =
    /* istanbul ignore next */
    (cov_e2714gbcn().s[243]++, this.subscribers.get(key));
    /* istanbul ignore next */
    cov_e2714gbcn().s[244]++;
    if (
    /* istanbul ignore next */
    (cov_e2714gbcn().b[40][0]++, subscribers) &&
    /* istanbul ignore next */
    (cov_e2714gbcn().b[40][1]++, subscribers.size > 0)) {
      /* istanbul ignore next */
      cov_e2714gbcn().b[39][0]++;
      const update =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[245]++, {
        type: 'candlestick',
        symbol: marketSymbol,
        interval,
        data: candlestick,
        timestamp: new Date().toISOString()
      });
      /* istanbul ignore next */
      cov_e2714gbcn().s[246]++;
      for (const callback of subscribers) {
        /* istanbul ignore next */
        cov_e2714gbcn().s[247]++;
        try {
          /* istanbul ignore next */
          cov_e2714gbcn().s[248]++;
          callback(update);
        } catch (error) {
          /* istanbul ignore next */
          cov_e2714gbcn().s[249]++;
          console.error('Error broadcasting candlestick data:', error);
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_e2714gbcn().b[39][1]++;
    }
  }

  /**
   * Update all tickers
   */
  async updateAllTickers() {
    /* istanbul ignore next */
    cov_e2714gbcn().f[31]++;
    cov_e2714gbcn().s[250]++;
    try {
      const markets =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[251]++, await Market.findAll({
        where: {
          is_active: true
        },
        attributes: ['symbol']
      }));
      /* istanbul ignore next */
      cov_e2714gbcn().s[252]++;
      await Promise.all(markets.map(async market => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[32]++;
        cov_e2714gbcn().s[253]++;
        try {
          /* istanbul ignore next */
          cov_e2714gbcn().s[254]++;
          await this.updateTicker(market.symbol);
        } catch (error) {
          /* istanbul ignore next */
          cov_e2714gbcn().s[255]++;
          console.error(`Error updating ticker for ${market.symbol}:`, error);
        }
      }));
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[256]++;
      console.error('Error updating all tickers:', error);
    }
  }

  /**
   * Update all candlesticks
   */
  async updateAllCandlesticks() {
    /* istanbul ignore next */
    cov_e2714gbcn().f[33]++;
    cov_e2714gbcn().s[257]++;
    try {
      /* istanbul ignore next */
      cov_e2714gbcn().s[258]++;
      // This would be called periodically to ensure candlesticks are up to date
      // Implementation depends on specific requirements
      console.log('Updating all candlesticks...');
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[259]++;
      console.error('Error updating all candlesticks:', error);
    }
  }

  /**
   * Handle new trade event
   */
  async handleNewTrade(tradeData) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[34]++;
    cov_e2714gbcn().s[260]++;
    try {
      const {
        marketSymbol,
        price,
        quantity,
        timestamp
      } =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[261]++, tradeData);

      // Update ticker with new trade
      /* istanbul ignore next */
      cov_e2714gbcn().s[262]++;
      await this.updateTickerFromTrade(marketSymbol, price, quantity, timestamp);

      // Update candlestick data
      /* istanbul ignore next */
      cov_e2714gbcn().s[263]++;
      await this.updateCandlestickFromTrade(marketSymbol, price, quantity, timestamp);

      // Broadcast to subscribers
      /* istanbul ignore next */
      cov_e2714gbcn().s[264]++;
      this.broadcastToSubscribers('trade', {
        symbol: marketSymbol,
        price,
        quantity,
        timestamp
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[265]++;
      console.error('Error handling new trade:', error);
    }
  }

  /**
   * Handle market update event
   */
  async handleMarketUpdate(updateData) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[35]++;
    cov_e2714gbcn().s[266]++;
    try {
      const {
        marketSymbol,
        type,
        data
      } =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[267]++, updateData);
      /* istanbul ignore next */
      cov_e2714gbcn().s[268]++;
      switch (type) {
        case 'price_update':
          /* istanbul ignore next */
          cov_e2714gbcn().b[41][0]++;
          cov_e2714gbcn().s[269]++;
          await this.updateMarketPrice(marketSymbol, data.price);
          /* istanbul ignore next */
          cov_e2714gbcn().s[270]++;
          break;
        case 'volume_update':
          /* istanbul ignore next */
          cov_e2714gbcn().b[41][1]++;
          cov_e2714gbcn().s[271]++;
          await this.updateMarketVolume(marketSymbol, data.volume);
          /* istanbul ignore next */
          cov_e2714gbcn().s[272]++;
          break;
        case 'ticker_update':
          /* istanbul ignore next */
          cov_e2714gbcn().b[41][2]++;
          cov_e2714gbcn().s[273]++;
          await this.updateTicker(marketSymbol, data);
          /* istanbul ignore next */
          cov_e2714gbcn().s[274]++;
          break;
        default:
          /* istanbul ignore next */
          cov_e2714gbcn().b[41][3]++;
          cov_e2714gbcn().s[275]++;
          console.warn('Unknown market update type:', type);
      }

      // Broadcast to subscribers
      /* istanbul ignore next */
      cov_e2714gbcn().s[276]++;
      this.broadcastToSubscribers('market_update', {
        symbol: marketSymbol,
        type,
        data,
        timestamp: new Date().toISOString()
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[277]++;
      console.error('Error handling market update:', error);
    }
  }

  /**
   * Update ticker from trade data
   */
  async updateTickerFromTrade(marketSymbol, price, quantity, timestamp) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[36]++;
    cov_e2714gbcn().s[278]++;
    try {
      const ticker =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[279]++,
      /* istanbul ignore next */
      (cov_e2714gbcn().b[42][0]++, this.tickers.get(marketSymbol)) ||
      /* istanbul ignore next */
      (cov_e2714gbcn().b[42][1]++, {
        symbol: marketSymbol,
        price: 0,
        volume24h: 0,
        high24h: 0,
        low24h: 0,
        change24h: 0,
        changePercent24h: 0,
        lastUpdate: timestamp
      }));

      // Update price
      const oldPrice =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[280]++, ticker.price);
      /* istanbul ignore next */
      cov_e2714gbcn().s[281]++;
      ticker.price = price;
      /* istanbul ignore next */
      cov_e2714gbcn().s[282]++;
      ticker.lastUpdate = timestamp;

      // Update 24h stats (simplified - in production, use proper time windows)
      /* istanbul ignore next */
      cov_e2714gbcn().s[283]++;
      if (
      /* istanbul ignore next */
      (cov_e2714gbcn().b[44][0]++, price > ticker.high24h) ||
      /* istanbul ignore next */
      (cov_e2714gbcn().b[44][1]++, ticker.high24h === 0)) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[43][0]++;
        cov_e2714gbcn().s[284]++;
        ticker.high24h = price;
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[43][1]++;
      }
      cov_e2714gbcn().s[285]++;
      if (
      /* istanbul ignore next */
      (cov_e2714gbcn().b[46][0]++, price < ticker.low24h) ||
      /* istanbul ignore next */
      (cov_e2714gbcn().b[46][1]++, ticker.low24h === 0)) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[45][0]++;
        cov_e2714gbcn().s[286]++;
        ticker.low24h = price;
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[45][1]++;
      }

      // Update volume
      cov_e2714gbcn().s[287]++;
      ticker.volume24h += quantity;

      // Calculate change
      /* istanbul ignore next */
      cov_e2714gbcn().s[288]++;
      if (oldPrice > 0) {
        /* istanbul ignore next */
        cov_e2714gbcn().b[47][0]++;
        cov_e2714gbcn().s[289]++;
        ticker.change24h = price - oldPrice;
        /* istanbul ignore next */
        cov_e2714gbcn().s[290]++;
        ticker.changePercent24h = (price - oldPrice) / oldPrice * 100;
      } else
      /* istanbul ignore next */
      {
        cov_e2714gbcn().b[47][1]++;
      }
      cov_e2714gbcn().s[291]++;
      this.tickers.set(marketSymbol, ticker);
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[292]++;
      console.error('Error updating ticker from trade:', error);
    }
  }

  /**
   * Update candlestick from trade data
   */
  async updateCandlestickFromTrade(marketSymbol, price, quantity, timestamp) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[37]++;
    cov_e2714gbcn().s[293]++;
    try {
      const intervals =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[294]++, ['1m', '5m', '15m', '1h', '4h', '1d']);
      /* istanbul ignore next */
      cov_e2714gbcn().s[295]++;
      for (const interval of intervals) {
        const candlestickKey =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[296]++, `${marketSymbol}:${interval}`);
        let candlesticks =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[297]++,
        /* istanbul ignore next */
        (cov_e2714gbcn().b[48][0]++, this.candlesticks.get(candlestickKey)) ||
        /* istanbul ignore next */
        (cov_e2714gbcn().b[48][1]++, []));
        const candleTime =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[298]++, this.getCandleTime(timestamp, interval));

        // Find or create current candle
        let currentCandle =
        /* istanbul ignore next */
        (cov_e2714gbcn().s[299]++, candlesticks.find(c => {
          /* istanbul ignore next */
          cov_e2714gbcn().f[38]++;
          cov_e2714gbcn().s[300]++;
          return c.timestamp === candleTime;
        }));
        /* istanbul ignore next */
        cov_e2714gbcn().s[301]++;
        if (!currentCandle) {
          /* istanbul ignore next */
          cov_e2714gbcn().b[49][0]++;
          cov_e2714gbcn().s[302]++;
          currentCandle = {
            timestamp: candleTime,
            open: price,
            high: price,
            low: price,
            close: price,
            volume: 0
          };
          /* istanbul ignore next */
          cov_e2714gbcn().s[303]++;
          candlesticks.push(currentCandle);
        } else
        /* istanbul ignore next */
        {
          cov_e2714gbcn().b[49][1]++;
        }

        // Update candle
        cov_e2714gbcn().s[304]++;
        currentCandle.close = price;
        /* istanbul ignore next */
        cov_e2714gbcn().s[305]++;
        currentCandle.high = Math.max(currentCandle.high, price);
        /* istanbul ignore next */
        cov_e2714gbcn().s[306]++;
        currentCandle.low = Math.min(currentCandle.low, price);
        /* istanbul ignore next */
        cov_e2714gbcn().s[307]++;
        currentCandle.volume += quantity;

        // Keep only last 1000 candles
        /* istanbul ignore next */
        cov_e2714gbcn().s[308]++;
        if (candlesticks.length > 1000) {
          /* istanbul ignore next */
          cov_e2714gbcn().b[50][0]++;
          cov_e2714gbcn().s[309]++;
          candlesticks = candlesticks.slice(-1000);
        } else
        /* istanbul ignore next */
        {
          cov_e2714gbcn().b[50][1]++;
        }
        cov_e2714gbcn().s[310]++;
        this.candlesticks.set(candlestickKey, candlesticks);
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[311]++;
      console.error('Error updating candlestick from trade:', error);
    }
  }

  /**
   * Broadcast data to subscribers
   */
  broadcastToSubscribers(type, data) {
    /* istanbul ignore next */
    cov_e2714gbcn().f[39]++;
    cov_e2714gbcn().s[312]++;
    try {
      const message =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[313]++, {
        type,
        data,
        timestamp: new Date().toISOString()
      });

      // In a real implementation, this would broadcast via WebSocket
      // For now, we'll emit an event that can be listened to
      /* istanbul ignore next */
      cov_e2714gbcn().s[314]++;
      this.emit('broadcast', message);
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[315]++;
      console.error('Error broadcasting to subscribers:', error);
    }
  }

  /**
   * Get market statistics
   */
  async getMarketStats() {
    /* istanbul ignore next */
    cov_e2714gbcn().f[40]++;
    cov_e2714gbcn().s[316]++;
    try {
      const tickers =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[317]++, await this.getAllTickers());
      const stats =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[318]++, {
        totalMarkets: Object.keys(tickers).length,
        totalVolume24h: 0,
        topGainers: [],
        topLosers: [],
        timestamp: new Date().toISOString()
      });

      // Calculate statistics
      const tickerArray =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[319]++, Object.values(tickers));
      /* istanbul ignore next */
      cov_e2714gbcn().s[320]++;
      stats.totalVolume24h = tickerArray.reduce((sum, ticker) => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[41]++;
        cov_e2714gbcn().s[321]++;
        return sum + (
        /* istanbul ignore next */
        (cov_e2714gbcn().b[51][0]++, ticker.volume24h) ||
        /* istanbul ignore next */
        (cov_e2714gbcn().b[51][1]++, 0));
      }, 0);

      // Top gainers and losers
      const sortedByChange =
      /* istanbul ignore next */
      (cov_e2714gbcn().s[322]++, tickerArray.filter(ticker => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[42]++;
        cov_e2714gbcn().s[323]++;
        return ticker.changePercent24h !== undefined;
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_e2714gbcn().f[43]++;
        cov_e2714gbcn().s[324]++;
        return b.changePercent24h - a.changePercent24h;
      }));
      /* istanbul ignore next */
      cov_e2714gbcn().s[325]++;
      stats.topGainers = sortedByChange.slice(0, 10);
      /* istanbul ignore next */
      cov_e2714gbcn().s[326]++;
      stats.topLosers = sortedByChange.slice(-10).reverse();
      /* istanbul ignore next */
      cov_e2714gbcn().s[327]++;
      return stats;
    } catch (error) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[328]++;
      console.error('Error getting market stats:', error);
      /* istanbul ignore next */
      cov_e2714gbcn().s[329]++;
      throw error;
    }
  }

  /**
   * Cleanup resources
   */
  cleanup() {
    /* istanbul ignore next */
    cov_e2714gbcn().f[44]++;
    cov_e2714gbcn().s[330]++;
    // Clear all intervals
    for (const [name, interval] of this.intervals) {
      /* istanbul ignore next */
      cov_e2714gbcn().s[331]++;
      clearInterval(interval);
    }

    // Clear caches
    /* istanbul ignore next */
    cov_e2714gbcn().s[332]++;
    this.tickers.clear();
    /* istanbul ignore next */
    cov_e2714gbcn().s[333]++;
    this.candlesticks.clear();
    /* istanbul ignore next */
    cov_e2714gbcn().s[334]++;
    this.subscribers.clear();
    /* istanbul ignore next */
    cov_e2714gbcn().s[335]++;
    this.intervals.clear();
    /* istanbul ignore next */
    cov_e2714gbcn().s[336]++;
    console.log('Market data service cleaned up');
  }
}

// Create singleton instance
const marketDataService =
/* istanbul ignore next */
(cov_e2714gbcn().s[337]++, new MarketDataService());
/* istanbul ignore next */
cov_e2714gbcn().s[338]++;
module.exports = marketDataService;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,