{"version":3,"names":["cov_1kmb4pr7l9","actualCoverage","express","s","require","body","param","query","tradingController","requireAuth","optionalAuth","requireKYCLevel","tradingRateLimit","orderRateLimit","marketDataRateLimit","createRateLimiter","router","Router","orderValidation","notEmpty","withMessage","isString","isLength","min","max","isIn","isFloat","gt","optional","symbolValidation","orderIdValidation","walletIdValidation","isInt","paginationValidation","timeRangeValidation","post","placeOrder","delete","cancelOrder","windowMs","cancelAllOrders","get","getUserOrders","getOrderById","getUserTrades","getOrderBook","getTicker","getCandlesticks","getRecentTrades","getMarketStats","getUserBalances","getUserWallets","createWallet","generateNewAddress","use","error","req","res","next","f","console","type","b","status","json","success","message","module","exports"],"sources":["trading.js"],"sourcesContent":["const express = require('express');\nconst { body, param, query } = require('express-validator');\nconst tradingController = require('../controllers/tradingController');\nconst { requireAuth, optionalAuth, requireKYCLevel } = require('../middleware/auth');\nconst { \n  tradingRateLimit, \n  orderRateLimit, \n  marketDataRateLimit,\n  createRateLimiter \n} = require('../middleware/rateLimit');\nconst router = express.Router();\n\n// Validation rules\nconst orderValidation = [\n  body('symbol')\n    .notEmpty()\n    .withMessage('Symbol is required')\n    .isString()\n    .withMessage('Symbol must be a string')\n    .isLength({ min: 3, max: 20 })\n    .withMessage('Symbol must be between 3 and 20 characters'),\n    \n  body('side')\n    .notEmpty()\n    .withMessage('Side is required')\n    .isIn(['buy', 'sell'])\n    .withMessage('Side must be buy or sell'),\n    \n  body('type')\n    .notEmpty()\n    .withMessage('Type is required')\n    .isIn(['market', 'limit', 'stop', 'stop_limit'])\n    .withMessage('Type must be market, limit, stop, or stop_limit'),\n    \n  body('quantity')\n    .notEmpty()\n    .withMessage('Quantity is required')\n    .isFloat({ gt: 0 })\n    .withMessage('Quantity must be a positive number'),\n    \n  body('price')\n    .optional()\n    .isFloat({ gt: 0 })\n    .withMessage('Price must be a positive number'),\n    \n  body('stopPrice')\n    .optional()\n    .isFloat({ gt: 0 })\n    .withMessage('Stop price must be a positive number'),\n    \n  body('timeInForce')\n    .optional()\n    .isIn(['GTC', 'IOC', 'FOK'])\n    .withMessage('Time in force must be GTC, IOC, or FOK'),\n    \n  body('clientOrderId')\n    .optional()\n    .isString()\n    .isLength({ max: 64 })\n    .withMessage('Client order ID must be a string with max 64 characters')\n];\n\nconst symbolValidation = [\n  param('symbol')\n    .notEmpty()\n    .withMessage('Symbol is required')\n    .isString()\n    .withMessage('Symbol must be a string')\n    .isLength({ min: 3, max: 20 })\n    .withMessage('Symbol must be between 3 and 20 characters')\n];\n\nconst orderIdValidation = [\n  param('orderId')\n    .notEmpty()\n    .withMessage('Order ID is required')\n    .isString()\n    .withMessage('Order ID must be a string')\n];\n\nconst walletIdValidation = [\n  param('walletId')\n    .notEmpty()\n    .withMessage('Wallet ID is required')\n    .isInt({ gt: 0 })\n    .withMessage('Wallet ID must be a positive integer')\n];\n\nconst paginationValidation = [\n  query('limit')\n    .optional()\n    .isInt({ min: 1, max: 1000 })\n    .withMessage('Limit must be between 1 and 1000'),\n    \n  query('offset')\n    .optional()\n    .isInt({ min: 0 })\n    .withMessage('Offset must be a non-negative integer')\n];\n\nconst timeRangeValidation = [\n  query('startTime')\n    .optional()\n    .isInt({ gt: 0 })\n    .withMessage('Start time must be a positive timestamp'),\n    \n  query('endTime')\n    .optional()\n    .isInt({ gt: 0 })\n    .withMessage('End time must be a positive timestamp')\n];\n\n// Order Management Routes\n\n/**\n * @route   POST /api/trading/orders\n * @desc    Place a new order\n * @access  Private\n */\nrouter.post('/orders',\n  requireAuth,\n  requireKYCLevel(1), // Minimal KYC level 1 untuk trading\n  orderRateLimit,\n  orderValidation,\n  tradingController.placeOrder\n);\n\n/**\n * @route   DELETE /api/trading/orders/:orderId\n * @desc    Cancel an order\n * @access  Private\n */\nrouter.delete('/orders/:orderId',\n  requireAuth,\n  orderRateLimit,\n  orderIdValidation,\n  tradingController.cancelOrder\n);\n\n/**\n * @route   DELETE /api/trading/orders\n * @desc    Cancel all orders\n * @access  Private\n */\nrouter.delete('/orders',\n  requireAuth,\n  createRateLimiter({ windowMs: 60000, max: 10 }),\n  tradingController.cancelAllOrders\n);\n\n/**\n * @route   GET /api/trading/orders\n * @desc    Get user orders\n * @access  Private\n */\nrouter.get('/orders',\n  requireAuth,\n  tradingRateLimit,\n  paginationValidation,\n  timeRangeValidation,\n  tradingController.getUserOrders\n);\n\n/**\n * @route   GET /api/trading/orders/:orderId\n * @desc    Get order by ID\n * @access  Private\n */\nrouter.get('/orders/:orderId',\n  requireAuth,\n  tradingRateLimit,\n  orderIdValidation,\n  tradingController.getOrderById\n);\n\n// Trade History Routes\n\n/**\n * @route   GET /api/trading/trades\n * @desc    Get user trades\n * @access  Private\n */\nrouter.get('/trades',\n  requireAuth,\n  tradingRateLimit,\n  paginationValidation,\n  timeRangeValidation,\n  tradingController.getUserTrades\n);\n\n// Market Data Routes (Public)\n\n/**\n * @route   GET /api/trading/orderbook/:symbol\n * @desc    Get order book for a symbol\n * @access  Public\n */\nrouter.get('/orderbook/:symbol',\n  optionalAuth,\n  marketDataRateLimit,\n  symbolValidation,\n  [\n    query('depth')\n      .optional()\n      .isInt({ min: 1, max: 100 })\n      .withMessage('Depth must be between 1 and 100')\n  ],\n  tradingController.getOrderBook\n);\n\n/**\n * @route   GET /api/trading/ticker/:symbol?\n * @desc    Get ticker for a symbol or all symbols\n * @access  Public\n */\nrouter.get('/ticker/:symbol?',\n  optionalAuth,\n  marketDataRateLimit,\n  [\n    param('symbol')\n      .optional()\n      .isString()\n      .isLength({ min: 3, max: 20 })\n      .withMessage('Symbol must be between 3 and 20 characters')\n  ],\n  tradingController.getTicker\n);\n\n/**\n * @route   GET /api/trading/candlesticks/:symbol\n * @desc    Get candlestick data for a symbol\n * @access  Public\n */\nrouter.get('/candlesticks/:symbol',\n  optionalAuth,\n  marketDataRateLimit,\n  symbolValidation,\n  [\n    query('interval')\n      .notEmpty()\n      .withMessage('Interval is required')\n      .isIn(['1m', '5m', '15m', '30m', '1h', '4h', '1d', '1w'])\n      .withMessage('Invalid interval'),\n      \n    query('limit')\n      .optional()\n      .isInt({ min: 1, max: 1000 })\n      .withMessage('Limit must be between 1 and 1000')\n  ],\n  timeRangeValidation,\n  tradingController.getCandlesticks\n);\n\n/**\n * @route   GET /api/trading/trades/:symbol\n * @desc    Get recent trades for a symbol\n * @access  Public\n */\nrouter.get('/trades/:symbol',\n  optionalAuth,\n  marketDataRateLimit,\n  symbolValidation,\n  [\n    query('limit')\n      .optional()\n      .isInt({ min: 1, max: 1000 })\n      .withMessage('Limit must be between 1 and 1000')\n  ],\n  tradingController.getRecentTrades\n);\n\n/**\n * @route   GET /api/trading/stats\n * @desc    Get market statistics\n * @access  Public\n */\nrouter.get('/stats',\n  optionalAuth,\n  marketDataRateLimit,\n  tradingController.getMarketStats\n);\n\n// Balance and Wallet Routes\n\n/**\n * @route   GET /api/trading/balances\n * @desc    Get user balances\n * @access  Private\n */\nrouter.get('/balances',\n  requireAuth,\n  tradingRateLimit,\n  [\n    query('currency')\n      .optional()\n      .isString()\n      .isLength({ min: 2, max: 10 })\n      .withMessage('Currency must be between 2 and 10 characters')\n  ],\n  tradingController.getUserBalances\n);\n\n/**\n * @route   GET /api/trading/wallets\n * @desc    Get user wallets\n * @access  Private\n */\nrouter.get('/wallets',\n  requireAuth,\n  tradingRateLimit,\n  [\n    query('currency')\n      .optional()\n      .isString()\n      .isLength({ min: 2, max: 10 })\n      .withMessage('Currency must be between 2 and 10 characters'),\n      \n    query('walletType')\n      .optional()\n      .isIn(['hot', 'warm', 'cold'])\n      .withMessage('Wallet type must be hot, warm, or cold')\n  ],\n  tradingController.getUserWallets\n);\n\n/**\n * @route   POST /api/trading/wallets\n * @desc    Create a new wallet\n * @access  Private\n */\nrouter.post('/wallets',\n  requireAuth,\n  requireKYCLevel(2), // KYC level 2 untuk membuat wallet\n  createRateLimiter({ windowMs: 60000, max: 10 }),\n  [\n    body('currency')\n      .notEmpty()\n      .withMessage('Currency is required')\n      .isString()\n      .isLength({ min: 2, max: 10 })\n      .withMessage('Currency must be between 2 and 10 characters'),\n      \n    body('walletType')\n      .optional()\n      .isIn(['hot', 'warm', 'cold'])\n      .withMessage('Wallet type must be hot, warm, or cold')\n  ],\n  tradingController.createWallet\n);\n\n/**\n * @route   POST /api/trading/wallets/:walletId/address\n * @desc    Generate new address for wallet\n * @access  Private\n */\nrouter.post('/wallets/:walletId/address',\n  requireAuth,\n  createRateLimiter({ windowMs: 60000, max: 20 }),\n  walletIdValidation,\n  tradingController.generateNewAddress\n);\n\n// Error handling middleware\nrouter.use((error, req, res, next) => {\n  console.error('Trading route error:', error);\n  \n  if (error.type === 'entity.parse.failed') {\n    return res.status(400).json({\n      success: false,\n      message: 'Invalid JSON format'\n    });\n  }\n  \n  if (error.type === 'entity.too.large') {\n    return res.status(413).json({\n      success: false,\n      message: 'Request entity too large'\n    });\n  }\n  \n  res.status(500).json({\n    success: false,\n    message: 'Internal server error'\n  });\n});\n\nmodule.exports = router;"],"mappingseY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAfZ,MAAME,OAAO;AAAA;AAAA,CAAAF,cAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAM;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAM,CAAC;AAAA;AAAA,CAAAP,cAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,mBAAmB,CAAC;AAC3D,MAAMI,iBAAiB;AAAA;AAAA,CAAAR,cAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,kCAAkC,CAAC;AACrE,MAAM;EAAEK,WAAW;EAAEC,YAAY;EAAEC;AAAgB,CAAC;AAAA;AAAA,CAAAX,cAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,oBAAoB,CAAC;AACpF,MAAM;EACJQ,gBAAgB;EAChBC,cAAc;EACdC,mBAAmB;EACnBC;AACF,CAAC;AAAA;AAAA,CAAAf,cAAA,GAAAG,CAAA,OAAGC,OAAO,CAAC,yBAAyB,CAAC;AACtC,MAAMY,MAAM;AAAA;AAAA,CAAAhB,cAAA,GAAAG,CAAA,OAAGD,OAAO,CAACe,MAAM,CAAC,CAAC;;AAE/B;AACA,MAAMC,eAAe;AAAA;AAAA,CAAAlB,cAAA,GAAAG,CAAA,OAAG,CACtBE,IAAI,CAAC,QAAQ,CAAC,CACXc,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,oBAAoB,CAAC,CACjCC,QAAQ,CAAC,CAAC,CACVD,WAAW,CAAC,yBAAyB,CAAC,CACtCE,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,4CAA4C,CAAC,EAE5Df,IAAI,CAAC,MAAM,CAAC,CACTc,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,kBAAkB,CAAC,CAC/BK,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CACrBL,WAAW,CAAC,0BAA0B,CAAC,EAE1Cf,IAAI,CAAC,MAAM,CAAC,CACTc,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,kBAAkB,CAAC,CAC/BK,IAAI,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC,CAC/CL,WAAW,CAAC,iDAAiD,CAAC,EAEjEf,IAAI,CAAC,UAAU,CAAC,CACbc,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,sBAAsB,CAAC,CACnCM,OAAO,CAAC;EAAEC,EAAE,EAAE;AAAE,CAAC,CAAC,CAClBP,WAAW,CAAC,oCAAoC,CAAC,EAEpDf,IAAI,CAAC,OAAO,CAAC,CACVuB,QAAQ,CAAC,CAAC,CACVF,OAAO,CAAC;EAAEC,EAAE,EAAE;AAAE,CAAC,CAAC,CAClBP,WAAW,CAAC,iCAAiC,CAAC,EAEjDf,IAAI,CAAC,WAAW,CAAC,CACduB,QAAQ,CAAC,CAAC,CACVF,OAAO,CAAC;EAAEC,EAAE,EAAE;AAAE,CAAC,CAAC,CAClBP,WAAW,CAAC,sCAAsC,CAAC,EAEtDf,IAAI,CAAC,aAAa,CAAC,CAChBuB,QAAQ,CAAC,CAAC,CACVH,IAAI,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAC3BL,WAAW,CAAC,wCAAwC,CAAC,EAExDf,IAAI,CAAC,eAAe,CAAC,CAClBuB,QAAQ,CAAC,CAAC,CACVP,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC;EAAEE,GAAG,EAAE;AAAG,CAAC,CAAC,CACrBJ,WAAW,CAAC,yDAAyD,CAAC,CAC1E;AAED,MAAMS,gBAAgB;AAAA;AAAA,CAAA7B,cAAA,GAAAG,CAAA,OAAG,CACvBG,KAAK,CAAC,QAAQ,CAAC,CACZa,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,oBAAoB,CAAC,CACjCC,QAAQ,CAAC,CAAC,CACVD,WAAW,CAAC,yBAAyB,CAAC,CACtCE,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,4CAA4C,CAAC,CAC7D;AAED,MAAMU,iBAAiB;AAAA;AAAA,CAAA9B,cAAA,GAAAG,CAAA,OAAG,CACxBG,KAAK,CAAC,SAAS,CAAC,CACba,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,sBAAsB,CAAC,CACnCC,QAAQ,CAAC,CAAC,CACVD,WAAW,CAAC,2BAA2B,CAAC,CAC5C;AAED,MAAMW,kBAAkB;AAAA;AAAA,CAAA/B,cAAA,GAAAG,CAAA,OAAG,CACzBG,KAAK,CAAC,UAAU,CAAC,CACda,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,uBAAuB,CAAC,CACpCY,KAAK,CAAC;EAAEL,EAAE,EAAE;AAAE,CAAC,CAAC,CAChBP,WAAW,CAAC,sCAAsC,CAAC,CACvD;AAED,MAAMa,oBAAoB;AAAA;AAAA,CAAAjC,cAAA,GAAAG,CAAA,QAAG,CAC3BI,KAAK,CAAC,OAAO,CAAC,CACXqB,QAAQ,CAAC,CAAC,CACVI,KAAK,CAAC;EAAET,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAK,CAAC,CAAC,CAC5BJ,WAAW,CAAC,kCAAkC,CAAC,EAElDb,KAAK,CAAC,QAAQ,CAAC,CACZqB,QAAQ,CAAC,CAAC,CACVI,KAAK,CAAC;EAAET,GAAG,EAAE;AAAE,CAAC,CAAC,CACjBH,WAAW,CAAC,uCAAuC,CAAC,CACxD;AAED,MAAMc,mBAAmB;AAAA;AAAA,CAAAlC,cAAA,GAAAG,CAAA,QAAG,CAC1BI,KAAK,CAAC,WAAW,CAAC,CACfqB,QAAQ,CAAC,CAAC,CACVI,KAAK,CAAC;EAAEL,EAAE,EAAE;AAAE,CAAC,CAAC,CAChBP,WAAW,CAAC,yCAAyC,CAAC,EAEzDb,KAAK,CAAC,SAAS,CAAC,CACbqB,QAAQ,CAAC,CAAC,CACVI,KAAK,CAAC;EAAEL,EAAE,EAAE;AAAE,CAAC,CAAC,CAChBP,WAAW,CAAC,uCAAuC,CAAC,CACxD;;AAED;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAApB,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACmB,IAAI,CAAC,SAAS,EACnB1B,WAAW,EACXE,eAAe,CAAC,CAAC,CAAC;AAAE;AACpBE,cAAc,EACdK,eAAe,EACfV,iBAAiB,CAAC4B,UACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAApC,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACqB,MAAM,CAAC,kBAAkB,EAC9B5B,WAAW,EACXI,cAAc,EACdiB,iBAAiB,EACjBtB,iBAAiB,CAAC8B,WACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAAtC,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACqB,MAAM,CAAC,SAAS,EACrB5B,WAAW,EACXM,iBAAiB,CAAC;EAAEwB,QAAQ,EAAE,KAAK;EAAEf,GAAG,EAAE;AAAG,CAAC,CAAC,EAC/ChB,iBAAiB,CAACgC,eACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAAxC,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,SAAS,EAClBhC,WAAW,EACXG,gBAAgB,EAChBqB,oBAAoB,EACpBC,mBAAmB,EACnB1B,iBAAiB,CAACkC,aACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAA1C,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,kBAAkB,EAC3BhC,WAAW,EACXG,gBAAgB,EAChBkB,iBAAiB,EACjBtB,iBAAiB,CAACmC,YACpB,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA3C,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,SAAS,EAClBhC,WAAW,EACXG,gBAAgB,EAChBqB,oBAAoB,EACpBC,mBAAmB,EACnB1B,iBAAiB,CAACoC,aACpB,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAA5C,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,oBAAoB,EAC7B/B,YAAY,EACZI,mBAAmB,EACnBe,gBAAgB,EAChB,CACEtB,KAAK,CAAC,OAAO,CAAC,CACXqB,QAAQ,CAAC,CAAC,CACVI,KAAK,CAAC;EAAET,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAI,CAAC,CAAC,CAC3BJ,WAAW,CAAC,iCAAiC,CAAC,CAClD,EACDZ,iBAAiB,CAACqC,YACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAA7C,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,kBAAkB,EAC3B/B,YAAY,EACZI,mBAAmB,EACnB,CACER,KAAK,CAAC,QAAQ,CAAC,CACZsB,QAAQ,CAAC,CAAC,CACVP,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,4CAA4C,CAAC,CAC7D,EACDZ,iBAAiB,CAACsC,SACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAA9C,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,uBAAuB,EAChC/B,YAAY,EACZI,mBAAmB,EACnBe,gBAAgB,EAChB,CACEtB,KAAK,CAAC,UAAU,CAAC,CACdY,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,sBAAsB,CAAC,CACnCK,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CACxDL,WAAW,CAAC,kBAAkB,CAAC,EAElCb,KAAK,CAAC,OAAO,CAAC,CACXqB,QAAQ,CAAC,CAAC,CACVI,KAAK,CAAC;EAAET,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAK,CAAC,CAAC,CAC5BJ,WAAW,CAAC,kCAAkC,CAAC,CACnD,EACDc,mBAAmB,EACnB1B,iBAAiB,CAACuC,eACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAA/C,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,iBAAiB,EAC1B/B,YAAY,EACZI,mBAAmB,EACnBe,gBAAgB,EAChB,CACEtB,KAAK,CAAC,OAAO,CAAC,CACXqB,QAAQ,CAAC,CAAC,CACVI,KAAK,CAAC;EAAET,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAK,CAAC,CAAC,CAC5BJ,WAAW,CAAC,kCAAkC,CAAC,CACnD,EACDZ,iBAAiB,CAACwC,eACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAAhD,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,QAAQ,EACjB/B,YAAY,EACZI,mBAAmB,EACnBN,iBAAiB,CAACyC,cACpB,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAAAjD,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,WAAW,EACpBhC,WAAW,EACXG,gBAAgB,EAChB,CACEL,KAAK,CAAC,UAAU,CAAC,CACdqB,QAAQ,CAAC,CAAC,CACVP,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,8CAA8C,CAAC,CAC/D,EACDZ,iBAAiB,CAAC0C,eACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAAlD,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACyB,GAAG,CAAC,UAAU,EACnBhC,WAAW,EACXG,gBAAgB,EAChB,CACEL,KAAK,CAAC,UAAU,CAAC,CACdqB,QAAQ,CAAC,CAAC,CACVP,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,8CAA8C,CAAC,EAE9Db,KAAK,CAAC,YAAY,CAAC,CAChBqB,QAAQ,CAAC,CAAC,CACVH,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAC7BL,WAAW,CAAC,wCAAwC,CAAC,CACzD,EACDZ,iBAAiB,CAAC2C,cACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAAnD,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACmB,IAAI,CAAC,UAAU,EACpB1B,WAAW,EACXE,eAAe,CAAC,CAAC,CAAC;AAAE;AACpBI,iBAAiB,CAAC;EAAEwB,QAAQ,EAAE,KAAK;EAAEf,GAAG,EAAE;AAAG,CAAC,CAAC,EAC/C,CACEnB,IAAI,CAAC,UAAU,CAAC,CACbc,QAAQ,CAAC,CAAC,CACVC,WAAW,CAAC,sBAAsB,CAAC,CACnCC,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC;EAAEC,GAAG,EAAE,CAAC;EAAEC,GAAG,EAAE;AAAG,CAAC,CAAC,CAC7BJ,WAAW,CAAC,8CAA8C,CAAC,EAE9Df,IAAI,CAAC,YAAY,CAAC,CACfuB,QAAQ,CAAC,CAAC,CACVH,IAAI,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,CAC7BL,WAAW,CAAC,wCAAwC,CAAC,CACzD,EACDZ,iBAAiB,CAAC4C,YACpB,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA;AAAApD,cAAA,GAAAG,CAAA;AAKAa,MAAM,CAACmB,IAAI,CAAC,4BAA4B,EACtC1B,WAAW,EACXM,iBAAiB,CAAC;EAAEwB,QAAQ,EAAE,KAAK;EAAEf,GAAG,EAAE;AAAG,CAAC,CAAC,EAC/CO,kBAAkB,EAClBvB,iBAAiB,CAAC6C,kBACpB,CAAC;;AAED;AAAA;AAAArD,cAAA,GAAAG,CAAA;AACAa,MAAM,CAACsC,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAAA;EAAA1D,cAAA,GAAA2D,CAAA;EAAA3D,cAAA,GAAAG,CAAA;EACpCyD,OAAO,CAACL,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;EAAC;EAAAvD,cAAA,GAAAG,CAAA;EAE7C,IAAIoD,KAAK,CAACM,IAAI,KAAK,qBAAqB,EAAE;IAAA;IAAA7D,cAAA,GAAA8D,CAAA;IAAA9D,cAAA,GAAAG,CAAA;IACxC,OAAOsD,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC1BC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC;EAAA;EAAA;IAAAlE,cAAA,GAAA8D,CAAA;EAAA;EAAA9D,cAAA,GAAAG,CAAA;EAED,IAAIoD,KAAK,CAACM,IAAI,KAAK,kBAAkB,EAAE;IAAA;IAAA7D,cAAA,GAAA8D,CAAA;IAAA9D,cAAA,GAAAG,CAAA;IACrC,OAAOsD,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAC1BC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE;IACX,CAAC,CAAC;EACJ,CAAC;EAAA;EAAA;IAAAlE,cAAA,GAAA8D,CAAA;EAAA;EAAA9D,cAAA,GAAAG,CAAA;EAEDsD,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;IACnBC,OAAO,EAAE,KAAK;IACdC,OAAO,EAAE;EACX,CAAC,CAAC;AACJ,CAAC,CAAC;AAAC;AAAAlE,cAAA,GAAAG,CAAA;AAEHgE,MAAM,CAACC,OAAO,GAAGpD,MAAM","ignoreList":[]}