{"version":3,"names":["redis","require","redisConfig","host","process","env","REDIS_HOST","port","REDIS_PORT","password","REDIS_PASSWORD","undefined","db","REDIS_DB","retryDelayOnFailover","enableReadyCheck","maxRetriesPerRequest","lazyConnect","keepAlive","connectTimeout","commandTimeout","retryDelayOnClusterDown","client","createClient","on","console","log","err","error","getAsync","get","bind","setAsync","set","delAsync","del","existsAsync","exists","expireAsync","expire","ttlAsync","ttl","hgetAsync","hGet","hsetAsync","hSet","hdelAsync","hDel","hgetallAsync","hGetAll","saddAsync","sAdd","sremAsync","sRem","smembersAsync","sMembers","sismemberAsync","sIsMember","zaddAsync","zAdd","zrangeAsync","zRange","zremAsync","zRem","incrAsync","incr","decrAsync","decr","incrbyAsync","incrBy","decrbyAsync","decrBy","cache","key","value","JSON","parse","serialized","stringify","setex","EX","hget","field","hset","hgetall","hash","result","Object","entries","sadd","members","srem","smembers","sismember","member","incrby","increment","session","create","sessionId","userId","data","sessionData","createdAt","Date","toISOString","lastActivity","update","existing","updated","destroy","destroyAllUserSessions","userSessions","promises","map","Promise","all","rateLimit","check","limit","window","current","reset","healthCheck","close","resolve","quit","module","exports"],"sources":["redis.js"],"sourcesContent":["const redis = require('redis');\n\n// Redis configuration\nconst redisConfig = {\n  host: process.env.REDIS_HOST || 'localhost',\n  port: process.env.REDIS_PORT || 6379,\n  password: process.env.REDIS_PASSWORD || undefined,\n  db: process.env.REDIS_DB || 0,\n  retryDelayOnFailover: 100,\n  enableReadyCheck: true,\n  maxRetriesPerRequest: 3,\n  lazyConnect: true,\n  keepAlive: 30000,\n  connectTimeout: 10000,\n  commandTimeout: 5000,\n  retryDelayOnClusterDown: 300,\n  retryDelayOnFailover: 100,\n  maxRetriesPerRequest: 3\n};\n\n// Create Redis client\nconst client = redis.createClient(redisConfig);\n\n// Redis event handlers\nclient.on('connect', () => {\n  console.log('Redis client connected');\n});\n\nclient.on('ready', () => {\n  console.log('Redis client ready');\n});\n\nclient.on('error', (err) => {\n  console.error('Redis client error:', err);\n});\n\nclient.on('end', () => {\n  console.log('Redis client disconnected');\n});\n\nclient.on('reconnecting', () => {\n  console.log('Redis client reconnecting');\n});\n\n// Redis v4+ already uses promises natively\nconst getAsync = client.get.bind(client);\nconst setAsync = client.set.bind(client);\nconst delAsync = client.del.bind(client);\nconst existsAsync = client.exists.bind(client);\nconst expireAsync = client.expire.bind(client);\nconst ttlAsync = client.ttl.bind(client);\nconst hgetAsync = client.hGet.bind(client);\nconst hsetAsync = client.hSet.bind(client);\nconst hdelAsync = client.hDel.bind(client);\nconst hgetallAsync = client.hGetAll.bind(client);\nconst saddAsync = client.sAdd.bind(client);\nconst sremAsync = client.sRem.bind(client);\nconst smembersAsync = client.sMembers.bind(client);\nconst sismemberAsync = client.sIsMember.bind(client);\nconst zaddAsync = client.zAdd.bind(client);\nconst zrangeAsync = client.zRange.bind(client);\nconst zremAsync = client.zRem.bind(client);\nconst incrAsync = client.incr.bind(client);\nconst decrAsync = client.decr.bind(client);\nconst incrbyAsync = client.incrBy.bind(client);\nconst decrbyAsync = client.decrBy.bind(client);\n\n// Cache helper functions\nconst cache = {\n  // Basic cache operations\n  async get(key) {\n    try {\n      const value = await getAsync(key);\n      return value ? JSON.parse(value) : null;\n    } catch (error) {\n      console.error('Cache get error:', error);\n      return null;\n    }\n  },\n\n  async set(key, value, ttl = 3600) {\n    try {\n      const serialized = JSON.stringify(value);\n      if (ttl) {\n        await setAsync(key, serialized, 'EX', ttl);\n      } else {\n        await setAsync(key, serialized);\n      }\n      return true;\n    } catch (error) {\n      console.error('Cache set error:', error);\n      return false;\n    }\n  },\n\n  async del(key) {\n    try {\n      return await delAsync(key);\n    } catch (error) {\n      console.error('Cache delete error:', error);\n      return false;\n    }\n  },\n\n  async exists(key) {\n    try {\n      return await existsAsync(key);\n    } catch (error) {\n      console.error('Cache exists error:', error);\n      return false;\n    }\n  },\n\n  async expire(key, ttl) {\n    try {\n      return await expireAsync(key, ttl);\n    } catch (error) {\n      console.error('Cache expire error:', error);\n      return false;\n    }\n  },\n\n  async ttl(key) {\n    try {\n      return await ttlAsync(key);\n    } catch (error) {\n      console.error('Cache TTL error:', error);\n      return -1;\n    }\n  },\n\n  async setex(key, ttl, value) {\n    try {\n      await setAsync(key, value, { EX: ttl });\n      return true;\n    } catch (error) {\n      console.error('Cache setex error:', error);\n      return false;\n    }\n  },\n\n  // Hash operations\n  async hget(key, field) {\n    try {\n      const value = await hgetAsync(key, field);\n      return value ? JSON.parse(value) : null;\n    } catch (error) {\n      console.error('Cache hget error:', error);\n      return null;\n    }\n  },\n\n  async hset(key, field, value) {\n    try {\n      const serialized = JSON.stringify(value);\n      return await hsetAsync(key, field, serialized);\n    } catch (error) {\n      console.error('Cache hset error:', error);\n      return false;\n    }\n  },\n\n  async hgetall(key) {\n    try {\n      const hash = await hgetallAsync(key);\n      const result = {};\n      for (const [field, value] of Object.entries(hash)) {\n        result[field] = JSON.parse(value);\n      }\n      return result;\n    } catch (error) {\n      console.error('Cache hgetall error:', error);\n      return {};\n    }\n  },\n\n  // Set operations\n  async sadd(key, ...members) {\n    try {\n      return await saddAsync(key, ...members);\n    } catch (error) {\n      console.error('Cache sadd error:', error);\n      return false;\n    }\n  },\n\n  async srem(key, ...members) {\n    try {\n      return await sremAsync(key, ...members);\n    } catch (error) {\n      console.error('Cache srem error:', error);\n      return false;\n    }\n  },\n\n  async smembers(key) {\n    try {\n      return await smembersAsync(key);\n    } catch (error) {\n      console.error('Cache smembers error:', error);\n      return [];\n    }\n  },\n\n  async sismember(key, member) {\n    try {\n      return await sismemberAsync(key, member);\n    } catch (error) {\n      console.error('Cache sismember error:', error);\n      return false;\n    }\n  },\n\n  // Counter operations\n  async incr(key) {\n    try {\n      return await incrAsync(key);\n    } catch (error) {\n      console.error('Cache incr error:', error);\n      return null;\n    }\n  },\n\n  async decr(key) {\n    try {\n      return await decrAsync(key);\n    } catch (error) {\n      console.error('Cache decr error:', error);\n      return null;\n    }\n  },\n\n  async incrby(key, increment) {\n    try {\n      return await incrbyAsync(key, increment);\n    } catch (error) {\n      console.error('Cache incrby error:', error);\n      return null;\n    }\n  }\n};\n\n// Session management helpers\nconst session = {\n  async create(sessionId, userId, data = {}) {\n    const sessionData = {\n      userId,\n      createdAt: new Date().toISOString(),\n      lastActivity: new Date().toISOString(),\n      ...data\n    };\n    \n    const ttl = 24 * 60 * 60; // 24 hours\n    return await cache.set(`session:${sessionId}`, sessionData, ttl);\n  },\n\n  async get(sessionId) {\n    return await cache.get(`session:${sessionId}`);\n  },\n\n  async update(sessionId, data) {\n    const existing = await this.get(sessionId);\n    if (!existing) return false;\n    \n    const updated = {\n      ...existing,\n      ...data,\n      lastActivity: new Date().toISOString()\n    };\n    \n    return await cache.set(`session:${sessionId}`, updated, await cache.ttl(`session:${sessionId}`));\n  },\n\n  async destroy(sessionId) {\n    return await cache.del(`session:${sessionId}`);\n  },\n\n  async destroyAllUserSessions(userId) {\n    // This would require scanning all session keys, which is expensive\n    // Better to maintain a user->sessions mapping\n    const userSessions = await cache.smembers(`user_sessions:${userId}`);\n    const promises = userSessions.map(sessionId => this.destroy(sessionId));\n    await Promise.all(promises);\n    return await cache.del(`user_sessions:${userId}`);\n  }\n};\n\n// Rate limiting helpers\nconst rateLimit = {\n  async check(key, limit, window) {\n    const current = await cache.incr(key);\n    if (current === 1) {\n      await cache.expire(key, window);\n    }\n    return current <= limit;\n  },\n\n  async reset(key) {\n    return await cache.del(key);\n  }\n};\n\n// Health check\nconst healthCheck = async () => {\n  try {\n    await setAsync('health_check', 'ok', 'EX', 10);\n    const result = await getAsync('health_check');\n    return result === 'ok';\n  } catch (error) {\n    console.error('Redis health check failed:', error);\n    return false;\n  }\n};\n\n// Graceful shutdown\nconst close = () => {\n  return new Promise((resolve) => {\n    client.quit(() => {\n      console.log('Redis client closed');\n      resolve();\n    });\n  });\n};\n\nmodule.exports = {\n  client,\n  cache,\n  session,\n  rateLimit,\n  healthCheck,\n  close\n};"],"mappings":"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","ignoreList":[]}