{"version":3,"names":["require","config","express","helmet","cors","compression","morgan","rateLimit","session","RedisStore","default","cookieParser","createProxyMiddleware","winston","expressWinston","connectDB","client","redis","cache","redisSession","cleanupExpiredTokens","optionalAuth","loadBalancer","optimization","authRoutes","userRoutes","tradingRoutes","monitoringRoutes","createAuditLog","EVENT_TYPES","LOG_LEVELS","RISK_LEVELS","performanceService","dbOptimization","testConnection","app","logger","createLogger","level","process","env","LOG_LEVEL","format","combine","timestamp","errors","stack","json","defaultMeta","service","transports","File","filename","NODE_ENV","add","Console","simple","set","use","contentSecurityPolicy","directives","defaultSrc","styleSrc","fontSrc","imgSrc","scriptSrc","connectSrc","crossOriginEmbedderPolicy","corsOptions","origin","callback","allowedOrigins","CORS_ORIGIN","split","indexOf","Error","credentials","CORS_CREDENTIALS","methods","CORS_METHODS","allowedHeaders","CORS_ALLOWED_HEADERS","winstonInstance","meta","msg","expressFormat","colorize","ignoreRoute","req","res","url","skip","limit","verify","buf","rawBody","urlencoded","extended","limiter","windowMs","parseInt","RATE_LIMIT_WINDOW_MS","max","RATE_LIMIT_MAX_REQUESTS","message","success","standardHeaders","legacyHeaders","store","secret","SESSION_SECRET","name","SESSION_NAME","resave","saveUninitialized","rolling","cookie","secure","SESSION_SECURE","httpOnly","SESSION_HTTP_ONLY","maxAge","SESSION_TIMEOUT","sameSite","SESSION_SAME_SITE","compressionMiddleware","requestOptimization","responseCaching","etagMiddleware","requestDeduplication","memoryOptimization","queryOptimization","middleware","get","health","status","Date","toISOString","uptime","environment","version","npm_package_version","services","database","error","ping","result","statusCode","metrics","memory","memoryUsage","cpu","cpuUsage","activeConnections","socket","server","_connections","WS_PORT","target","ws","changeOrigin","logLevel","ENABLE_SWAGGER","swaggerJsdoc","swaggerUi","options","definition","openapi","info","title","description","servers","APP_URL","apis","specs","SWAGGER_PATH","serve","setup","path","originalUrl","method","errorLogger","err","next","ip","userAgent","includes","userId","user","id","eventType","SECURITY_ALERT","WARNING","riskLevel","MEDIUM","metadata","ipAddress","sessionId","sessionID","catch","auditErr","isDevelopment","details","requestId","on","gracefulShutdown","signal","close","closeConnection","quit","exit","setTimeout","reason","promise","startServer","connect","setInterval","startMonitoring","initializeOptimizations","PORT","listen","global","main","module","exports"],"sources":["server.js"],"sourcesContent":["require('dotenv').config();\n\nconst express = require('express');\nconst helmet = require('helmet');\nconst cors = require('cors');\nconst compression = require('compression');\nconst morgan = require('morgan');\nconst rateLimit = require('express-rate-limit');\nconst session = require('express-session');\nconst RedisStore = require('connect-redis').default;\nconst cookieParser = require('cookie-parser');\nconst { createProxyMiddleware } = require('http-proxy-middleware');\nconst winston = require('winston');\nconst expressWinston = require('express-winston');\n\n// Import configurations\nconst { connectDB } = require('./config/database');\nconst { client: redis, cache, session: redisSession } = require('./config/redis');\nconst { cleanupExpiredTokens } = require('./config/jwt');\n\n// Import middleware\nconst { optionalAuth } = require('./middleware/auth');\nconst loadBalancer = require('./middleware/loadBalancer');\nconst optimization = require('./middleware/optimization');\n\n// Import routes\nconst authRoutes = require('./routes/auth');\nconst userRoutes = require('./routes/users');\nconst tradingRoutes = require('./routes/trading');\nconst monitoringRoutes = require('./routes/monitoring');\n\n// Import services\nconst { createAuditLog, EVENT_TYPES, LOG_LEVELS, RISK_LEVELS } = require('./services/auditService');\nconst performanceService = require('./services/performanceService');\nconst dbOptimization = require('./utils/dbOptimization');\n\n// Import database models and functions\nconst { testConnection } = require('./models/index');\n\n// Server startup timestamp: 2025-01-28 15:52:15\n// Initialize Express app\nconst app = express();\n\n// Configure Winston logger\nconst logger = winston.createLogger({\n  level: process.env.LOG_LEVEL || 'info',\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.errors({ stack: true }),\n    winston.format.json()\n  ),\n  defaultMeta: { service: 'cex-backend' },\n  transports: [\n    new winston.transports.File({ filename: 'logs/error.log', level: 'error' }),\n    new winston.transports.File({ filename: 'logs/combined.log' })\n  ]\n});\n\n// Add console transport in development\nif (process.env.NODE_ENV !== 'production') {\n  logger.add(new winston.transports.Console({\n    format: winston.format.simple()\n  }));\n}\n\n// Trust proxy for accurate IP addresses\napp.set('trust proxy', 1);\n\n// Security middleware\napp.use(helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\", 'https://fonts.googleapis.com'],\n      fontSrc: [\"'self'\", 'https://fonts.gstatic.com'],\n      imgSrc: [\"'self'\", 'data:', 'https:'],\n      scriptSrc: [\"'self'\"],\n      connectSrc: [\"'self'\", 'wss:', 'ws:']\n    }\n  },\n  crossOriginEmbedderPolicy: false\n}));\n\n// CORS configuration\nconst corsOptions = {\n  origin: function (origin, callback) {\n    const allowedOrigins = (process.env.CORS_ORIGIN || 'http://localhost:3000').split(',');\n    \n    // Allow requests with no origin (mobile apps, etc.)\n    if (!origin) return callback(null, true);\n    \n    if (allowedOrigins.indexOf(origin) !== -1) {\n      callback(null, true);\n    } else {\n      callback(new Error('Not allowed by CORS'));\n    }\n  },\n  credentials: process.env.CORS_CREDENTIALS === 'true',\n  methods: (process.env.CORS_METHODS || 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS').split(','),\n  allowedHeaders: (process.env.CORS_ALLOWED_HEADERS || 'Content-Type,Authorization,X-Requested-With,Accept,Origin').split(',')\n};\n\napp.use(cors(corsOptions));\n\n// Compression middleware\napp.use(compression());\n\n// Request logging\napp.use(expressWinston.logger({\n  winstonInstance: logger,\n  meta: true,\n  msg: 'HTTP {{req.method}} {{req.url}}',\n  expressFormat: true,\n  colorize: false,\n  ignoreRoute: function (req, res) {\n    return req.url === '/health' || req.url === '/metrics';\n  }\n}));\n\n// Morgan for additional HTTP logging\napp.use(morgan('combined', {\n  skip: (req, res) => req.url === '/health' || req.url === '/metrics'\n}));\n\n// Body parsing middleware\napp.use(express.json({ \n  limit: '10mb',\n  verify: (req, res, buf) => {\n    req.rawBody = buf;\n  }\n}));\napp.use(express.urlencoded({ extended: true, limit: '10mb' }));\napp.use(cookieParser());\n\n// Rate limiting\nconst limiter = rateLimit({\n  windowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS) || 15 * 60 * 1000, // 15 minutes\n  max: parseInt(process.env.RATE_LIMIT_MAX_REQUESTS) || 100, // limit each IP to 100 requests per windowMs\n  message: {\n    success: false,\n    message: 'Too many requests from this IP, please try again later.'\n  },\n  standardHeaders: true,\n  legacyHeaders: false\n});\n\napp.use('/api/', limiter);\n\n// Session configuration\napp.use(session({\n  store: new RedisStore({ client: redis }),\n  secret: process.env.SESSION_SECRET || 'your-secret-key',\n  name: process.env.SESSION_NAME || 'cex_session',\n  resave: false,\n  saveUninitialized: false,\n  rolling: true,\n  cookie: {\n    secure: process.env.NODE_ENV === 'production' && process.env.SESSION_SECURE === 'true',\n    httpOnly: process.env.SESSION_HTTP_ONLY !== 'false',\n    maxAge: parseInt(process.env.SESSION_TIMEOUT) || 30 * 60 * 1000, // 30 minutes\n    sameSite: process.env.SESSION_SAME_SITE || 'lax'\n  }\n}));\n\n// Add performance optimization middleware\napp.use(optimization.compressionMiddleware());\napp.use(optimization.requestOptimization());\napp.use(optimization.responseCaching());\napp.use(optimization.etagMiddleware());\napp.use(optimization.requestDeduplication());\napp.use(optimization.memoryOptimization());\napp.use(optimization.queryOptimization());\napp.use(loadBalancer.middleware());\n\n// Add optional authentication to all routes\napp.use(optionalAuth);\n\n// Health check endpoint\napp.get('/health', async (req, res) => {\n  try {\n    const health = {\n      status: 'ok',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n      environment: process.env.NODE_ENV || 'development',\n      version: process.env.npm_package_version || '1.0.0',\n      services: {\n        database: 'checking...',\n        redis: 'checking...',\n        cache: 'checking...'\n      }\n    };\n\n    // Check database connection\n    try {\n      await testConnection();\n      health.services.database = 'healthy';\n    } catch (error) {\n      health.services.database = 'unhealthy';\n      health.status = 'degraded';\n    }\n\n    // Check Redis connection\n    try {\n      await redis.ping();\n      health.services.redis = 'healthy';\n    } catch (error) {\n      health.services.redis = 'unhealthy';\n      health.status = 'degraded';\n    }\n\n    // Check cache\n    try {\n      await cache.set('health_check', 'ok', 'EX', 10);\n      const result = await cache.get('health_check');\n      health.services.cache = result === 'ok' ? 'healthy' : 'unhealthy';\n    } catch (error) {\n      health.services.cache = 'unhealthy';\n      health.status = 'degraded';\n    }\n\n    const statusCode = health.status === 'ok' ? 200 : 503;\n    res.status(statusCode).json(health);\n  } catch (error) {\n    logger.error('Health check failed:', error);\n    res.status(503).json({\n      status: 'error',\n      message: 'Health check failed',\n      timestamp: new Date().toISOString()\n    });\n  }\n});\n\n// Metrics endpoint for monitoring\napp.get('/metrics', async (req, res) => {\n  try {\n    const metrics = {\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n      memory: process.memoryUsage(),\n      cpu: process.cpuUsage(),\n      activeConnections: req.socket.server._connections || 0,\n      environment: process.env.NODE_ENV || 'development'\n    };\n\n    res.json(metrics);\n  } catch (error) {\n    logger.error('Metrics collection failed:', error);\n    res.status(500).json({\n      error: 'Metrics collection failed'\n    });\n  }\n});\n\n// API Routes\napp.use('/api/v1/auth', authRoutes);\napp.use('/api/v1/users', userRoutes);\napp.use('/api/v1/trading', tradingRoutes);\napp.use('/api/v1/monitoring', monitoringRoutes);\n\napp.use('/api/v1/wallet', (req, res) => {\n  res.status(501).json({\n    success: false,\n    message: 'Wallet API not implemented yet'\n  });\n});\n\napp.use('/api/v1/admin', (req, res) => {\n  res.status(501).json({\n    success: false,\n    message: 'Admin API not implemented yet'\n  });\n});\n\n// WebSocket proxy for real-time features\nif (process.env.WS_PORT) {\n  app.use('/ws', createProxyMiddleware({\n    target: `ws://localhost:${process.env.WS_PORT}`,\n    ws: true,\n    changeOrigin: true,\n    logLevel: 'warn'\n  }));\n}\n\n// API documentation (Swagger) in development\nif (process.env.NODE_ENV !== 'production' && process.env.ENABLE_SWAGGER === 'true') {\n  const swaggerJsdoc = require('swagger-jsdoc');\n  const swaggerUi = require('swagger-ui-express');\n\n  const options = {\n    definition: {\n      openapi: '3.0.0',\n      info: {\n        title: 'CEX Exchange API',\n        version: '1.0.0',\n        description: 'Cryptocurrency Exchange Platform API Documentation'\n      },\n      servers: [\n        {\n          url: process.env.APP_URL || 'http://localhost:3001',\n          description: 'Development server'\n        }\n      ]\n    },\n    apis: ['./src/routes/*.js', './src/controllers/*.js']\n  };\n\n  const specs = swaggerJsdoc(options);\n  app.use(process.env.SWAGGER_PATH || '/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\n}\n\n// 404 handler\napp.use('*', (req, res) => {\n  res.status(404).json({\n    success: false,\n    message: 'Endpoint not found',\n    path: req.originalUrl,\n    method: req.method,\n    timestamp: new Date().toISOString()\n  });\n});\n\n// Error logging middleware\napp.use(expressWinston.errorLogger({\n  winstonInstance: logger,\n  meta: true,\n  msg: 'HTTP {{req.method}} {{req.url}} - {{err.message}}'\n}));\n\n// Global error handler\napp.use((err, req, res, next) => {\n  logger.error('Unhandled error:', {\n    error: err.message,\n    stack: err.stack,\n    url: req.url,\n    method: req.method,\n    ip: req.ip,\n    userAgent: req.get('User-Agent')\n  });\n\n  // Log security-related errors\n  if (err.message.includes('CORS') || err.message.includes('rate limit') || err.message.includes('authentication')) {\n    createAuditLog({\n      userId: req.user?.id || null,\n      eventType: EVENT_TYPES.SECURITY_ALERT,\n      level: LOG_LEVELS.WARNING,\n      riskLevel: RISK_LEVELS.MEDIUM,\n      description: `Security error: ${err.message}`,\n      metadata: {\n        error: err.message,\n        url: req.url,\n        method: req.method\n      },\n      ipAddress: req.ip,\n      userAgent: req.get('User-Agent'),\n      sessionId: req.sessionID\n    }).catch(auditErr => {\n      logger.error('Failed to create audit log:', auditErr);\n    });\n  }\n\n  // Don't leak error details in production\n  const isDevelopment = process.env.NODE_ENV !== 'production';\n  \n  res.status(err.status || 500).json({\n    success: false,\n    message: err.message || 'Internal server error',\n    ...(isDevelopment && {\n      stack: err.stack,\n      details: err\n    }),\n    timestamp: new Date().toISOString(),\n    requestId: req.id || req.sessionID\n  });\n});\n\n// Graceful shutdown handling\nprocess.on('SIGTERM', gracefulShutdown);\nprocess.on('SIGINT', gracefulShutdown);\n\nasync function gracefulShutdown(signal) {\n  logger.info(`Received ${signal}. Starting graceful shutdown...`);\n  \n  // Stop accepting new connections\n  server.close(async () => {\n    logger.info('HTTP server closed');\n    \n    try {\n      // Close database connections\n      await require('./config/database').closeConnection();\n      logger.info('Database connections closed');\n      \n      // Close Redis connections\n      await redis.quit();\n      logger.info('Redis connections closed');\n      \n      logger.info('Graceful shutdown completed');\n      process.exit(0);\n    } catch (error) {\n      logger.error('Error during graceful shutdown:', error);\n      process.exit(1);\n    }\n  });\n  \n  // Force shutdown after 30 seconds\n  setTimeout(() => {\n    logger.error('Forced shutdown after timeout');\n    process.exit(1);\n  }, 30000);\n}\n\n// Handle uncaught exceptions\nprocess.on('uncaughtException', (error) => {\n  logger.error('Uncaught Exception:', error);\n  process.exit(1);\n});\n\nprocess.on('unhandledRejection', (reason, promise) => {\n  logger.error('Unhandled Rejection at:', promise, 'reason:', reason);\n  process.exit(1);\n});\n\n// Initialize server\nasync function startServer() {\n  try {\n    logger.info('Database connection established');\n    \n    // Connect and test Redis connection\n    await redis.connect();\n    await redis.ping();\n    logger.info('Redis connection established');\n    \n    // Start cleanup tasks\n    setInterval(async () => {\n      try {\n        await cleanupExpiredTokens();\n      } catch (error) {\n        logger.error('Token cleanup failed:', error);\n      }\n    }, 60 * 60 * 1000); // Run every hour\n    \n    // Initialize performance monitoring\n    performanceService.startMonitoring();\n    \n    // Initialize database optimization\n    dbOptimization.initializeOptimizations();\n    \n    // Start server\n    const PORT = process.env.PORT || 3001;\n    const server = app.listen(PORT, () => {\n      logger.info(`🚀 CEX Exchange Backend Server running on port ${PORT}`);\n      logger.info(`📚 Environment: ${process.env.NODE_ENV || 'development'}`);\n      \n      if (process.env.NODE_ENV !== 'production' && process.env.ENABLE_SWAGGER === 'true') {\n        logger.info(`📖 API Documentation: http://localhost:${PORT}${process.env.SWAGGER_PATH || '/api-docs'}`);\n      }\n      \n      logger.info(`🏥 Health Check: http://localhost:${PORT}/health`);\n      logger.info(`📊 Metrics: http://localhost:${PORT}/metrics`);\n    });\n    \n    // Store server reference for graceful shutdown\n    global.server = server;\n    \n    return server;\n  } catch (error) {\n    logger.error('Failed to start server:', error);\n    process.exit(1);\n  }\n}\n\n// Start the server if this file is run directly\nif (require.main === module) {\n  startServer();\n}\n\nmodule.exports = { app, startServer };"],"mappings":"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","ignoreList":[]}