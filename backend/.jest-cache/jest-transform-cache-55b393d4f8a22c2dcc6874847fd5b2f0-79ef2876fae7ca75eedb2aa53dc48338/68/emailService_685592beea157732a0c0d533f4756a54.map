{"version":3,"names":["cov_2bg5gmnznm","actualCoverage","nodemailer","s","require","handlebars","fs","promises","path","cache","emailConfig","host","b","process","env","SMTP_HOST","port","SMTP_PORT","secure","SMTP_SECURE","auth","user","SMTP_USER","pass","SMTP_PASS","pool","maxConnections","maxMessages","rateLimit","transporter","createTransport","verify","error","success","f","console","log","templateCache","Map","loadTemplate","templateName","has","get","templatePath","join","__dirname","templateSource","readFile","template","compile","set","Error","sendEmail","options","to","subject","context","attachments","priority","rateLimitKey","emailCount","incr","expire","templateFunction","html","baseUrl","FRONTEND_URL","supportEmail","SUPPORT_EMAIL","companyName","year","Date","getFullYear","mailOptions","from","name","FROM_NAME","address","FROM_EMAIL","headers","info","sendMail","messageId","response","sendVerificationEmail","email","token","userData","verificationUrl","firstName","username","expiresIn","sendWelcomeEmail","dashboardUrl","supportUrl","sendPasswordResetEmail","resetUrl","ipAddress","userAgent","sendPasswordChangedEmail","changeTime","toLocaleString","securityUrl","send2FAEnabledEmail","enableTime","backupCodesCount","send2FADisabledEmail","disableTime","sendLoginNotificationEmail","loginTime","location","device","sendSuspiciousActivityEmail","activityType","activityTime","sendWithdrawalNotificationEmail","amount","currency","transactionId","requestTime","confirmationUrl","sendDepositConfirmationEmail","confirmationTime","sendKYCStatusEmail","status","level","reason","nextSteps","kycUrl","sendNewsletterEmail","content","unsubscribeUrl","unsubscribeToken","sendBulkEmails","emails","results","batchSize","i","length","batch","slice","batchPromises","map","emailData","catch","batchResults","Promise","all","push","resolve","setTimeout","emailQueue","isProcessingQueue","queueEmail","emailOptions","timestamp","now","retries","processEmailQueue","shift","healthCheck","toISOString","message","module","exports"],"sources":["emailService.js"],"sourcesContent":["const nodemailer = require('nodemailer');\nconst handlebars = require('handlebars');\nconst fs = require('fs').promises;\nconst path = require('path');\nconst { cache } = require('../config/redis');\n\n// Email configuration\nconst emailConfig = {\n  host: process.env.SMTP_HOST || 'smtp.gmail.com',\n  port: process.env.SMTP_PORT || 587,\n  secure: process.env.SMTP_SECURE === 'true', // true for 465, false for other ports\n  auth: {\n    user: process.env.SMTP_USER,\n    pass: process.env.SMTP_PASS\n  },\n  pool: true,\n  maxConnections: 5,\n  maxMessages: 100,\n  rateLimit: 14 // messages per second\n};\n\n// Create transporter\nconst transporter = nodemailer.createTransport(emailConfig);\n\n// Verify transporter configuration\ntransporter.verify((error, success) => {\n  if (error) {\n    console.error('Email transporter configuration error:', error);\n  } else {\n    console.log('Email server is ready to take our messages');\n  }\n});\n\n// Template cache\nconst templateCache = new Map();\n\n// Load and compile email template\nconst loadTemplate = async (templateName) => {\n  if (templateCache.has(templateName)) {\n    return templateCache.get(templateName);\n  }\n\n  try {\n    const templatePath = path.join(__dirname, '../templates/emails', `${templateName}.hbs`);\n    const templateSource = await fs.readFile(templatePath, 'utf8');\n    const template = handlebars.compile(templateSource);\n    \n    templateCache.set(templateName, template);\n    return template;\n  } catch (error) {\n    console.error(`Failed to load email template ${templateName}:`, error);\n    throw new Error(`Email template ${templateName} not found`);\n  }\n};\n\n// Base email sending function\nconst sendEmail = async (options) => {\n  try {\n    const {\n      to,\n      subject,\n      template,\n      context = {},\n      attachments = [],\n      priority = 'normal'\n    } = options;\n\n    // Rate limiting check\n    const rateLimitKey = `email_rate_limit:${to}`;\n    const emailCount = await cache.incr(rateLimitKey);\n    \n    if (emailCount === 1) {\n      await cache.expire(rateLimitKey, 3600); // 1 hour window\n    }\n    \n    if (emailCount > 10) { // Max 10 emails per hour per recipient\n      throw new Error('Email rate limit exceeded');\n    }\n\n    // Load and render template\n    const templateFunction = await loadTemplate(template);\n    const html = templateFunction({\n      ...context,\n      baseUrl: process.env.FRONTEND_URL || 'http://localhost:3000',\n      supportEmail: process.env.SUPPORT_EMAIL || 'support@cexexchange.com',\n      companyName: 'CEX Exchange',\n      year: new Date().getFullYear()\n    });\n\n    // Email options\n    const mailOptions = {\n      from: {\n        name: process.env.FROM_NAME || 'CEX Exchange',\n        address: process.env.FROM_EMAIL || process.env.SMTP_USER\n      },\n      to,\n      subject,\n      html,\n      attachments,\n      priority,\n      headers: {\n        'X-Mailer': 'CEX Exchange System',\n        'X-Priority': priority === 'high' ? '1' : priority === 'low' ? '5' : '3'\n      }\n    };\n\n    // Send email\n    const info = await transporter.sendMail(mailOptions);\n    \n    console.log('Email sent successfully:', {\n      messageId: info.messageId,\n      to,\n      subject,\n      template\n    });\n\n    return {\n      success: true,\n      messageId: info.messageId,\n      response: info.response\n    };\n  } catch (error) {\n    console.error('Email sending failed:', error);\n    throw error;\n  }\n};\n\n// Verification email\nconst sendVerificationEmail = async (email, token, userData) => {\n  const verificationUrl = `${process.env.FRONTEND_URL}/verify-email?token=${token}`;\n  \n  return sendEmail({\n    to: email,\n    subject: 'Verify Your CEX Exchange Account',\n    template: 'verification',\n    context: {\n      firstName: userData.firstName,\n      username: userData.username,\n      verificationUrl,\n      expiresIn: '24 hours'\n    },\n    priority: 'high'\n  });\n};\n\n// Welcome email\nconst sendWelcomeEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: 'Welcome to CEX Exchange!',\n    template: 'welcome',\n    context: {\n      firstName: userData.firstName,\n      username: userData.username,\n      dashboardUrl: `${process.env.FRONTEND_URL}/dashboard`,\n      supportUrl: `${process.env.FRONTEND_URL}/support`\n    }\n  });\n};\n\n// Password reset email\nconst sendPasswordResetEmail = async (email, token, userData) => {\n  const resetUrl = `${process.env.FRONTEND_URL}/reset-password?token=${token}`;\n  \n  return sendEmail({\n    to: email,\n    subject: 'Reset Your CEX Exchange Password',\n    template: 'password-reset',\n    context: {\n      firstName: userData.firstName,\n      resetUrl,\n      expiresIn: '10 minutes',\n      ipAddress: userData.ipAddress,\n      userAgent: userData.userAgent\n    },\n    priority: 'high'\n  });\n};\n\n// Password changed notification\nconst sendPasswordChangedEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: 'Your CEX Exchange Password Has Been Changed',\n    template: 'password-changed',\n    context: {\n      firstName: userData.firstName,\n      changeTime: new Date().toLocaleString(),\n      ipAddress: userData.ipAddress,\n      userAgent: userData.userAgent,\n      securityUrl: `${process.env.FRONTEND_URL}/security`\n    },\n    priority: 'high'\n  });\n};\n\n// 2FA enabled notification\nconst send2FAEnabledEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: 'Two-Factor Authentication Enabled',\n    template: '2fa-enabled',\n    context: {\n      firstName: userData.firstName,\n      enableTime: new Date().toLocaleString(),\n      ipAddress: userData.ipAddress,\n      backupCodesCount: userData.backupCodesCount || 10\n    }\n  });\n};\n\n// 2FA disabled notification\nconst send2FADisabledEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: 'Two-Factor Authentication Disabled',\n    template: '2fa-disabled',\n    context: {\n      firstName: userData.firstName,\n      disableTime: new Date().toLocaleString(),\n      ipAddress: userData.ipAddress,\n      securityUrl: `${process.env.FRONTEND_URL}/security`\n    },\n    priority: 'high'\n  });\n};\n\n// Login notification\nconst sendLoginNotificationEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: 'New Login to Your CEX Exchange Account',\n    template: 'login-notification',\n    context: {\n      firstName: userData.firstName,\n      loginTime: new Date().toLocaleString(),\n      ipAddress: userData.ipAddress,\n      location: userData.location || 'Unknown',\n      device: userData.device || 'Unknown',\n      securityUrl: `${process.env.FRONTEND_URL}/security`\n    }\n  });\n};\n\n// Suspicious activity alert\nconst sendSuspiciousActivityEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: 'Suspicious Activity Detected - CEX Exchange',\n    template: 'suspicious-activity',\n    context: {\n      firstName: userData.firstName,\n      activityType: userData.activityType,\n      activityTime: new Date().toLocaleString(),\n      ipAddress: userData.ipAddress,\n      location: userData.location || 'Unknown',\n      securityUrl: `${process.env.FRONTEND_URL}/security`,\n      supportUrl: `${process.env.FRONTEND_URL}/support`\n    },\n    priority: 'high'\n  });\n};\n\n// Withdrawal notification\nconst sendWithdrawalNotificationEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: 'Withdrawal Request - CEX Exchange',\n    template: 'withdrawal-notification',\n    context: {\n      firstName: userData.firstName,\n      amount: userData.amount,\n      currency: userData.currency,\n      address: userData.address,\n      transactionId: userData.transactionId,\n      requestTime: new Date().toLocaleString(),\n      confirmationUrl: userData.confirmationUrl\n    },\n    priority: 'high'\n  });\n};\n\n// Deposit confirmation\nconst sendDepositConfirmationEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: 'Deposit Confirmed - CEX Exchange',\n    template: 'deposit-confirmation',\n    context: {\n      firstName: userData.firstName,\n      amount: userData.amount,\n      currency: userData.currency,\n      transactionId: userData.transactionId,\n      confirmationTime: new Date().toLocaleString(),\n      dashboardUrl: `${process.env.FRONTEND_URL}/dashboard`\n    }\n  });\n};\n\n// KYC status update\nconst sendKYCStatusEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: `KYC Verification ${userData.status} - CEX Exchange`,\n    template: 'kyc-status',\n    context: {\n      firstName: userData.firstName,\n      status: userData.status,\n      level: userData.level,\n      reason: userData.reason,\n      nextSteps: userData.nextSteps,\n      kycUrl: `${process.env.FRONTEND_URL}/kyc`\n    },\n    priority: userData.status === 'rejected' ? 'high' : 'normal'\n  });\n};\n\n// Newsletter/Marketing email\nconst sendNewsletterEmail = async (email, userData) => {\n  return sendEmail({\n    to: email,\n    subject: userData.subject,\n    template: 'newsletter',\n    context: {\n      firstName: userData.firstName,\n      content: userData.content,\n      unsubscribeUrl: `${process.env.FRONTEND_URL}/unsubscribe?token=${userData.unsubscribeToken}`\n    },\n    priority: 'low'\n  });\n};\n\n// Bulk email sending\nconst sendBulkEmails = async (emails) => {\n  const results = [];\n  const batchSize = 10;\n  \n  for (let i = 0; i < emails.length; i += batchSize) {\n    const batch = emails.slice(i, i + batchSize);\n    const batchPromises = batch.map(emailData => \n      sendEmail(emailData).catch(error => ({ error, emailData }))\n    );\n    \n    const batchResults = await Promise.all(batchPromises);\n    results.push(...batchResults);\n    \n    // Add delay between batches to avoid rate limiting\n    if (i + batchSize < emails.length) {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    }\n  }\n  \n  return results;\n};\n\n// Email queue for background processing\nconst emailQueue = [];\nlet isProcessingQueue = false;\n\nconst queueEmail = (emailOptions) => {\n  emailQueue.push({\n    ...emailOptions,\n    timestamp: Date.now(),\n    retries: 0\n  });\n  \n  processEmailQueue();\n};\n\nconst processEmailQueue = async () => {\n  if (isProcessingQueue || emailQueue.length === 0) {\n    return;\n  }\n  \n  isProcessingQueue = true;\n  \n  while (emailQueue.length > 0) {\n    const emailData = emailQueue.shift();\n    \n    try {\n      await sendEmail(emailData);\n      console.log('Queued email sent successfully');\n    } catch (error) {\n      console.error('Queued email failed:', error);\n      \n      // Retry logic\n      if (emailData.retries < 3) {\n        emailData.retries++;\n        emailQueue.push(emailData);\n      } else {\n        console.error('Email failed after 3 retries:', emailData);\n      }\n    }\n    \n    // Add small delay between emails\n    await new Promise(resolve => setTimeout(resolve, 100));\n  }\n  \n  isProcessingQueue = false;\n};\n\n// Health check\nconst healthCheck = async () => {\n  try {\n    await transporter.verify();\n    return { status: 'healthy', timestamp: new Date().toISOString() };\n  } catch (error) {\n    return { \n      status: 'unhealthy', \n      error: error.message, \n      timestamp: new Date().toISOString() \n    };\n  }\n};\n\nmodule.exports = {\n  sendEmail,\n  sendVerificationEmail,\n  sendWelcomeEmail,\n  sendPasswordResetEmail,\n  sendPasswordChangedEmail,\n  send2FAEnabledEmail,\n  send2FADisabledEmail,\n  sendLoginNotificationEmail,\n  sendSuspiciousActivityEmail,\n  sendWithdrawalNotificationEmail,\n  sendDepositConfirmationEmail,\n  sendKYCStatusEmail,\n  sendNewsletterEmail,\n  sendBulkEmails,\n  queueEmail,\n  healthCheck\n};"],"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","ignoreList":[]}